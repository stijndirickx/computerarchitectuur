
gamecontroller.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000dde  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000020  00802000  00000dde  00000e72  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000006c  00802020  00802020  00000e92  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000e92  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000ef0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000198  00000000  00000000  00000f30  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000114e  00000000  00000000  000010c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000006bf  00000000  00000000  00002216  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000019c5  00000000  00000000  000028d5  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000003a4  00000000  00000000  0000429c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00011df3  00000000  00000000  00004640  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000005cd  00000000  00000000  00016433  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000108  00000000  00000000  00016a00  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  000058d5  00000000  00000000  00016b08  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 b6 00 	jmp	0x16c	; 0x16c <__ctors_end>
   4:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
   8:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
   c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  10:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  14:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  18:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  1c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  20:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  24:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  28:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  2c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  30:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  34:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  38:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  3c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  40:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  44:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  48:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  4c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  50:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  54:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  58:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  5c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  60:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  64:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  68:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  6c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  70:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  74:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  78:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  7c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  80:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  84:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  88:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  8c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  90:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  94:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  98:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  9c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  a0:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  a4:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  a8:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  ac:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  b0:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  b4:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  b8:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  bc:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  c0:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  c4:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  c8:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  cc:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  d0:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  d4:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  d8:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  dc:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  e0:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  e4:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  e8:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  ec:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  f0:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  f4:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  f8:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  fc:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 100:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 104:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 108:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 10c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 110:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 114:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 118:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 11c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 120:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 124:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 128:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 12c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 130:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 134:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 138:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 13c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 140:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 144:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 148:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 14c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 150:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 154:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 158:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 15c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 160:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 164:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 168:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>

0000016c <__ctors_end>:
 16c:	11 24       	eor	r1, r1
 16e:	1f be       	out	0x3f, r1	; 63
 170:	cf ef       	ldi	r28, 0xFF	; 255
 172:	cd bf       	out	0x3d, r28	; 61
 174:	d7 e2       	ldi	r29, 0x27	; 39
 176:	de bf       	out	0x3e, r29	; 62

00000178 <__do_copy_data>:
 178:	10 e2       	ldi	r17, 0x20	; 32
 17a:	a0 e0       	ldi	r26, 0x00	; 0
 17c:	b0 e2       	ldi	r27, 0x20	; 32
 17e:	ee ed       	ldi	r30, 0xDE	; 222
 180:	fd e0       	ldi	r31, 0x0D	; 13
 182:	02 c0       	rjmp	.+4      	; 0x188 <__do_copy_data+0x10>
 184:	05 90       	lpm	r0, Z+
 186:	0d 92       	st	X+, r0
 188:	a0 32       	cpi	r26, 0x20	; 32
 18a:	b1 07       	cpc	r27, r17
 18c:	d9 f7       	brne	.-10     	; 0x184 <__do_copy_data+0xc>

0000018e <__do_clear_bss>:
 18e:	20 e2       	ldi	r18, 0x20	; 32
 190:	a0 e2       	ldi	r26, 0x20	; 32
 192:	b0 e2       	ldi	r27, 0x20	; 32
 194:	01 c0       	rjmp	.+2      	; 0x198 <.do_clear_bss_start>

00000196 <.do_clear_bss_loop>:
 196:	1d 92       	st	X+, r1

00000198 <.do_clear_bss_start>:
 198:	ac 38       	cpi	r26, 0x8C	; 140
 19a:	b2 07       	cpc	r27, r18
 19c:	e1 f7       	brne	.-8      	; 0x196 <.do_clear_bss_loop>
 19e:	0e 94 fd 00 	call	0x1fa	; 0x1fa <main>
 1a2:	0c 94 ed 06 	jmp	0xdda	; 0xdda <_exit>

000001a6 <__bad_interrupt>:
 1a6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001aa <AccInit>:
#include "acc.h"



void AccInit(void)
{
 1aa:	cf 93       	push	r28
 1ac:	df 93       	push	r29
 1ae:	cd b7       	in	r28, 0x3d	; 61
 1b0:	de b7       	in	r29, 0x3e	; 62

	
}
 1b2:	00 00       	nop
 1b4:	df 91       	pop	r29
 1b6:	cf 91       	pop	r28
 1b8:	08 95       	ret

000001ba <AnalogInit>:
#include "Analog.h"
#include <avr/io.h>

void AnalogInit(void)
{
 1ba:	cf 93       	push	r28
 1bc:	df 93       	push	r29
 1be:	cd b7       	in	r28, 0x3d	; 61
 1c0:	de b7       	in	r29, 0x3e	; 62

}
 1c2:	00 00       	nop
 1c4:	df 91       	pop	r29
 1c6:	cf 91       	pop	r28
 1c8:	08 95       	ret

000001ca <ClockInit>:
#pragma GCC push_options
#pragma GCC optimize ("O2") //This function must be optimized to avoid too long time interval betwee CCP write and CLK.CTRL write (4 CLK CYC max)

void ClockInit(void)
{
	OSC.XOSCCTRL=0b11001011; //Clock<=16MHz	
 1ca:	8b ec       	ldi	r24, 0xCB	; 203
 1cc:	80 93 52 00 	sts	0x0052, r24	; 0x800052 <__TEXT_REGION_LENGTH__+0x700052>
	OSC.CTRL=0b01000; //Enable oscillator	
 1d0:	88 e0       	ldi	r24, 0x08	; 8
 1d2:	80 93 50 00 	sts	0x0050, r24	; 0x800050 <__TEXT_REGION_LENGTH__+0x700050>
	while (!(OSC.STATUS&0b1000)); //Wait until XTAL osc is ready
 1d6:	80 91 51 00 	lds	r24, 0x0051	; 0x800051 <__TEXT_REGION_LENGTH__+0x700051>
 1da:	83 ff       	sbrs	r24, 3
 1dc:	fc cf       	rjmp	.-8      	; 0x1d6 <ClockInit+0xc>
	
	//Select XTAL osc as system CLK source
	CCP=0xd8;
 1de:	88 ed       	ldi	r24, 0xD8	; 216
 1e0:	84 bf       	out	0x34, r24	; 52
    CLK.CTRL=0b0011;
 1e2:	83 e0       	ldi	r24, 0x03	; 3
 1e4:	80 93 40 00 	sts	0x0040, r24	; 0x800040 <__TEXT_REGION_LENGTH__+0x700040>
 1e8:	08 95       	ret

000001ea <EncoderInit>:
#include <util/delay.h>
#include <stdio.h>
#include "encoder.h"

void EncoderInit(void)
{
 1ea:	cf 93       	push	r28
 1ec:	df 93       	push	r29
 1ee:	cd b7       	in	r28, 0x3d	; 61
 1f0:	de b7       	in	r29, 0x3e	; 62

}
 1f2:	00 00       	nop
 1f4:	df 91       	pop	r29
 1f6:	cf 91       	pop	r28
 1f8:	08 95       	ret

000001fa <main>:

void SimpleFunction(void);	//A simple function: print a counter (0 to 9) to the terminal
void LightLoop(void);

int main(void)
{
 1fa:	cf 93       	push	r28
 1fc:	df 93       	push	r29
 1fe:	cd b7       	in	r28, 0x3d	; 61
 200:	de b7       	in	r29, 0x3e	; 62
 202:	2e 97       	sbiw	r28, 0x0e	; 14
 204:	cd bf       	out	0x3d, r28	; 61
 206:	de bf       	out	0x3e, r29	; 62

	
	//###1###
	
	//Initialize subsystems
	ClockInit();			//Initialize system clock (16 MHz)
 208:	0e 94 e5 00 	call	0x1ca	; 0x1ca <ClockInit>
	USARTInit();			//Initialize USART and bind to stdout,stdin
 20c:	0e 94 49 02 	call	0x492	; 0x492 <USARTInit>
	AnalogInit();			//Initialize ADC
 210:	0e 94 dd 00 	call	0x1ba	; 0x1ba <AnalogInit>
	AccInit();				//Initialize accelerometer system
 214:	0e 94 d5 00 	call	0x1aa	; 0x1aa <AccInit>
	LEDInit();				//Initialize LEDs
 218:	0e 94 f2 01 	call	0x3e4	; 0x3e4 <LEDInit>
	SwitchInit();			//Initialize switches
 21c:	0e 94 1f 02 	call	0x43e	; 0x43e <SwitchInit>
	EncoderInit();			//Initialize encoder
 220:	0e 94 f5 00 	call	0x1ea	; 0x1ea <EncoderInit>
	SpeakerInit();			//Initialize speaker system
 224:	0e 94 17 02 	call	0x42e	; 0x42e <SpeakerInit>
	
	//Enable interrupts
	PMIC.CTRL|=0b00000111;  //Enable low, medium, high priority interrupts
 228:	80 ea       	ldi	r24, 0xA0	; 160
 22a:	90 e0       	ldi	r25, 0x00	; 0
 22c:	20 ea       	ldi	r18, 0xA0	; 160
 22e:	30 e0       	ldi	r19, 0x00	; 0
 230:	f9 01       	movw	r30, r18
 232:	22 81       	ldd	r18, Z+2	; 0x02
 234:	27 60       	ori	r18, 0x07	; 7
 236:	fc 01       	movw	r30, r24
 238:	22 83       	std	Z+2, r18	; 0x02
	SREG|=0b10000000;		//Globale interrupt enable
 23a:	8f e3       	ldi	r24, 0x3F	; 63
 23c:	90 e0       	ldi	r25, 0x00	; 0
 23e:	2f e3       	ldi	r18, 0x3F	; 63
 240:	30 e0       	ldi	r19, 0x00	; 0
 242:	f9 01       	movw	r30, r18
 244:	20 81       	ld	r18, Z
 246:	20 68       	ori	r18, 0x80	; 128
 248:	fc 01       	movw	r30, r24
 24a:	20 83       	st	Z, r18
 24c:	80 e0       	ldi	r24, 0x00	; 0
 24e:	90 e0       	ldi	r25, 0x00	; 0
 250:	aa ef       	ldi	r26, 0xFA	; 250
 252:	b3 e4       	ldi	r27, 0x43	; 67
 254:	89 83       	std	Y+1, r24	; 0x01
 256:	9a 83       	std	Y+2, r25	; 0x02
 258:	ab 83       	std	Y+3, r26	; 0x03
 25a:	bc 83       	std	Y+4, r27	; 0x04

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
 25c:	20 e0       	ldi	r18, 0x00	; 0
 25e:	30 e0       	ldi	r19, 0x00	; 0
 260:	4a e7       	ldi	r20, 0x7A	; 122
 262:	55 e4       	ldi	r21, 0x45	; 69
 264:	69 81       	ldd	r22, Y+1	; 0x01
 266:	7a 81       	ldd	r23, Y+2	; 0x02
 268:	8b 81       	ldd	r24, Y+3	; 0x03
 26a:	9c 81       	ldd	r25, Y+4	; 0x04
 26c:	0e 94 44 03 	call	0x688	; 0x688 <__mulsf3>
 270:	dc 01       	movw	r26, r24
 272:	cb 01       	movw	r24, r22
 274:	8d 83       	std	Y+5, r24	; 0x05
 276:	9e 83       	std	Y+6, r25	; 0x06
 278:	af 83       	std	Y+7, r26	; 0x07
 27a:	b8 87       	std	Y+8, r27	; 0x08
	if (__tmp < 1.0)
 27c:	20 e0       	ldi	r18, 0x00	; 0
 27e:	30 e0       	ldi	r19, 0x00	; 0
 280:	40 e8       	ldi	r20, 0x80	; 128
 282:	5f e3       	ldi	r21, 0x3F	; 63
 284:	6d 81       	ldd	r22, Y+5	; 0x05
 286:	7e 81       	ldd	r23, Y+6	; 0x06
 288:	8f 81       	ldd	r24, Y+7	; 0x07
 28a:	98 85       	ldd	r25, Y+8	; 0x08
 28c:	0e 94 be 02 	call	0x57c	; 0x57c <__cmpsf2>
 290:	88 23       	and	r24, r24
 292:	2c f4       	brge	.+10     	; 0x29e <main+0xa4>
		__ticks = 1;
 294:	81 e0       	ldi	r24, 0x01	; 1
 296:	90 e0       	ldi	r25, 0x00	; 0
 298:	89 87       	std	Y+9, r24	; 0x09
 29a:	9a 87       	std	Y+10, r25	; 0x0a
 29c:	3f c0       	rjmp	.+126    	; 0x31c <main+0x122>
	else if (__tmp > 65535)
 29e:	20 e0       	ldi	r18, 0x00	; 0
 2a0:	3f ef       	ldi	r19, 0xFF	; 255
 2a2:	4f e7       	ldi	r20, 0x7F	; 127
 2a4:	57 e4       	ldi	r21, 0x47	; 71
 2a6:	6d 81       	ldd	r22, Y+5	; 0x05
 2a8:	7e 81       	ldd	r23, Y+6	; 0x06
 2aa:	8f 81       	ldd	r24, Y+7	; 0x07
 2ac:	98 85       	ldd	r25, Y+8	; 0x08
 2ae:	0e 94 3f 03 	call	0x67e	; 0x67e <__gesf2>
 2b2:	18 16       	cp	r1, r24
 2b4:	4c f5       	brge	.+82     	; 0x308 <main+0x10e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 2b6:	20 e0       	ldi	r18, 0x00	; 0
 2b8:	30 e0       	ldi	r19, 0x00	; 0
 2ba:	40 e2       	ldi	r20, 0x20	; 32
 2bc:	51 e4       	ldi	r21, 0x41	; 65
 2be:	69 81       	ldd	r22, Y+1	; 0x01
 2c0:	7a 81       	ldd	r23, Y+2	; 0x02
 2c2:	8b 81       	ldd	r24, Y+3	; 0x03
 2c4:	9c 81       	ldd	r25, Y+4	; 0x04
 2c6:	0e 94 44 03 	call	0x688	; 0x688 <__mulsf3>
 2ca:	dc 01       	movw	r26, r24
 2cc:	cb 01       	movw	r24, r22
 2ce:	bc 01       	movw	r22, r24
 2d0:	cd 01       	movw	r24, r26
 2d2:	0e 94 c3 02 	call	0x586	; 0x586 <__fixunssfsi>
 2d6:	dc 01       	movw	r26, r24
 2d8:	cb 01       	movw	r24, r22
 2da:	89 87       	std	Y+9, r24	; 0x09
 2dc:	9a 87       	std	Y+10, r25	; 0x0a
 2de:	0f c0       	rjmp	.+30     	; 0x2fe <main+0x104>
 2e0:	80 e9       	ldi	r24, 0x90	; 144
 2e2:	91 e0       	ldi	r25, 0x01	; 1
 2e4:	8b 87       	std	Y+11, r24	; 0x0b
 2e6:	9c 87       	std	Y+12, r25	; 0x0c
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
 2e8:	8b 85       	ldd	r24, Y+11	; 0x0b
 2ea:	9c 85       	ldd	r25, Y+12	; 0x0c
 2ec:	01 97       	sbiw	r24, 0x01	; 1
 2ee:	f1 f7       	brne	.-4      	; 0x2ec <main+0xf2>
 2f0:	8b 87       	std	Y+11, r24	; 0x0b
 2f2:	9c 87       	std	Y+12, r25	; 0x0c
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 2f4:	89 85       	ldd	r24, Y+9	; 0x09
 2f6:	9a 85       	ldd	r25, Y+10	; 0x0a
 2f8:	01 97       	sbiw	r24, 0x01	; 1
 2fa:	89 87       	std	Y+9, r24	; 0x09
 2fc:	9a 87       	std	Y+10, r25	; 0x0a
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 2fe:	89 85       	ldd	r24, Y+9	; 0x09
 300:	9a 85       	ldd	r25, Y+10	; 0x0a
 302:	89 2b       	or	r24, r25
 304:	69 f7       	brne	.-38     	; 0x2e0 <main+0xe6>
 306:	14 c0       	rjmp	.+40     	; 0x330 <main+0x136>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 308:	6d 81       	ldd	r22, Y+5	; 0x05
 30a:	7e 81       	ldd	r23, Y+6	; 0x06
 30c:	8f 81       	ldd	r24, Y+7	; 0x07
 30e:	98 85       	ldd	r25, Y+8	; 0x08
 310:	0e 94 c3 02 	call	0x586	; 0x586 <__fixunssfsi>
 314:	dc 01       	movw	r26, r24
 316:	cb 01       	movw	r24, r22
 318:	89 87       	std	Y+9, r24	; 0x09
 31a:	9a 87       	std	Y+10, r25	; 0x0a
 31c:	89 85       	ldd	r24, Y+9	; 0x09
 31e:	9a 85       	ldd	r25, Y+10	; 0x0a
 320:	8d 87       	std	Y+13, r24	; 0x0d
 322:	9e 87       	std	Y+14, r25	; 0x0e
 324:	8d 85       	ldd	r24, Y+13	; 0x0d
 326:	9e 85       	ldd	r25, Y+14	; 0x0e
 328:	01 97       	sbiw	r24, 0x01	; 1
 32a:	f1 f7       	brne	.-4      	; 0x328 <main+0x12e>
 32c:	8d 87       	std	Y+13, r24	; 0x0d
 32e:	9e 87       	std	Y+14, r25	; 0x0e
	_delay_ms(500);

	//###2###
	SimpleFunction();
 330:	0e 94 9b 01 	call	0x336	; 0x336 <SimpleFunction>
	//LightLoop();
	while (1);
 334:	ff cf       	rjmp	.-2      	; 0x334 <main+0x13a>

00000336 <SimpleFunction>:
}

void SimpleFunction(void)
{
 336:	cf 93       	push	r28
 338:	df 93       	push	r29
 33a:	cd b7       	in	r28, 0x3d	; 61
 33c:	de b7       	in	r29, 0x3e	; 62
	for (a=0;a<10;a++)
 33e:	10 92 84 20 	sts	0x2084, r1	; 0x802084 <a>
 342:	10 92 85 20 	sts	0x2085, r1	; 0x802085 <a+0x1>
 346:	43 c0       	rjmp	.+134    	; 0x3ce <SimpleFunction+0x98>
	{
		//The variable text had the same address throughout the execution of the program.
		sprintf(text[a],"Counter:%d\r",a);
 348:	40 91 84 20 	lds	r20, 0x2084	; 0x802084 <a>
 34c:	50 91 85 20 	lds	r21, 0x2085	; 0x802085 <a+0x1>
 350:	80 91 84 20 	lds	r24, 0x2084	; 0x802084 <a>
 354:	90 91 85 20 	lds	r25, 0x2085	; 0x802085 <a+0x1>
 358:	88 0f       	add	r24, r24
 35a:	99 1f       	adc	r25, r25
 35c:	9c 01       	movw	r18, r24
 35e:	22 0f       	add	r18, r18
 360:	33 1f       	adc	r19, r19
 362:	22 0f       	add	r18, r18
 364:	33 1f       	adc	r19, r19
 366:	82 0f       	add	r24, r18
 368:	93 1f       	adc	r25, r19
 36a:	80 5e       	subi	r24, 0xE0	; 224
 36c:	9f 4d       	sbci	r25, 0xDF	; 223
 36e:	25 2f       	mov	r18, r21
 370:	2f 93       	push	r18
 372:	24 2f       	mov	r18, r20
 374:	2f 93       	push	r18
 376:	2e e0       	ldi	r18, 0x0E	; 14
 378:	30 e2       	ldi	r19, 0x20	; 32
 37a:	23 2f       	mov	r18, r19
 37c:	2f 93       	push	r18
 37e:	2e e0       	ldi	r18, 0x0E	; 14
 380:	30 e2       	ldi	r19, 0x20	; 32
 382:	2f 93       	push	r18
 384:	29 2f       	mov	r18, r25
 386:	2f 93       	push	r18
 388:	8f 93       	push	r24
 38a:	0e 94 09 04 	call	0x812	; 0x812 <sprintf>
 38e:	0f 90       	pop	r0
 390:	0f 90       	pop	r0
 392:	0f 90       	pop	r0
 394:	0f 90       	pop	r0
 396:	0f 90       	pop	r0
 398:	0f 90       	pop	r0
		puts(text[a]);
 39a:	80 91 84 20 	lds	r24, 0x2084	; 0x802084 <a>
 39e:	90 91 85 20 	lds	r25, 0x2085	; 0x802085 <a+0x1>
 3a2:	88 0f       	add	r24, r24
 3a4:	99 1f       	adc	r25, r25
 3a6:	9c 01       	movw	r18, r24
 3a8:	22 0f       	add	r18, r18
 3aa:	33 1f       	adc	r19, r19
 3ac:	22 0f       	add	r18, r18
 3ae:	33 1f       	adc	r19, r19
 3b0:	82 0f       	add	r24, r18
 3b2:	93 1f       	adc	r25, r19
 3b4:	80 5e       	subi	r24, 0xE0	; 224
 3b6:	9f 4d       	sbci	r25, 0xDF	; 223
 3b8:	0e 94 d9 03 	call	0x7b2	; 0x7b2 <puts>
	while (1);
}

void SimpleFunction(void)
{
	for (a=0;a<10;a++)
 3bc:	80 91 84 20 	lds	r24, 0x2084	; 0x802084 <a>
 3c0:	90 91 85 20 	lds	r25, 0x2085	; 0x802085 <a+0x1>
 3c4:	01 96       	adiw	r24, 0x01	; 1
 3c6:	80 93 84 20 	sts	0x2084, r24	; 0x802084 <a>
 3ca:	90 93 85 20 	sts	0x2085, r25	; 0x802085 <a+0x1>
 3ce:	80 91 84 20 	lds	r24, 0x2084	; 0x802084 <a>
 3d2:	90 91 85 20 	lds	r25, 0x2085	; 0x802085 <a+0x1>
 3d6:	0a 97       	sbiw	r24, 0x0a	; 10
 3d8:	0c f4       	brge	.+2      	; 0x3dc <SimpleFunction+0xa6>
 3da:	b6 cf       	rjmp	.-148    	; 0x348 <SimpleFunction+0x12>
	{
		//The variable text had the same address throughout the execution of the program.
		sprintf(text[a],"Counter:%d\r",a);
		puts(text[a]);
	}
}
 3dc:	00 00       	nop
 3de:	df 91       	pop	r29
 3e0:	cf 91       	pop	r28
 3e2:	08 95       	ret

000003e4 <LEDInit>:
#include "LED.h"
#include <avr/io.h>

void LEDInit(void)
{
 3e4:	cf 93       	push	r28
 3e6:	df 93       	push	r29
 3e8:	cd b7       	in	r28, 0x3d	; 61
 3ea:	de b7       	in	r29, 0x3e	; 62
	PORTE.DIRSET |= 0b00001111; //dir = 1 --> output
 3ec:	80 e8       	ldi	r24, 0x80	; 128
 3ee:	96 e0       	ldi	r25, 0x06	; 6
 3f0:	20 e8       	ldi	r18, 0x80	; 128
 3f2:	36 e0       	ldi	r19, 0x06	; 6
 3f4:	f9 01       	movw	r30, r18
 3f6:	21 81       	ldd	r18, Z+1	; 0x01
 3f8:	2f 60       	ori	r18, 0x0F	; 15
 3fa:	fc 01       	movw	r30, r24
 3fc:	21 83       	std	Z+1, r18	; 0x01
	PORTE.PIN0CTRL=PORT_OPC_PULLUP_gc; //enkel belangrijk on input
 3fe:	80 e8       	ldi	r24, 0x80	; 128
 400:	96 e0       	ldi	r25, 0x06	; 6
 402:	28 e1       	ldi	r18, 0x18	; 24
 404:	fc 01       	movw	r30, r24
 406:	20 8b       	std	Z+16, r18	; 0x10
	PORTE.PIN1CTRL=PORT_OPC_PULLUP_gc;
 408:	80 e8       	ldi	r24, 0x80	; 128
 40a:	96 e0       	ldi	r25, 0x06	; 6
 40c:	28 e1       	ldi	r18, 0x18	; 24
 40e:	fc 01       	movw	r30, r24
 410:	21 8b       	std	Z+17, r18	; 0x11
	PORTE.PIN2CTRL=PORT_OPC_PULLUP_gc;
 412:	80 e8       	ldi	r24, 0x80	; 128
 414:	96 e0       	ldi	r25, 0x06	; 6
 416:	28 e1       	ldi	r18, 0x18	; 24
 418:	fc 01       	movw	r30, r24
 41a:	22 8b       	std	Z+18, r18	; 0x12
	PORTE.PIN3CTRL=PORT_OPC_PULLUP_gc;
 41c:	80 e8       	ldi	r24, 0x80	; 128
 41e:	96 e0       	ldi	r25, 0x06	; 6
 420:	28 e1       	ldi	r18, 0x18	; 24
 422:	fc 01       	movw	r30, r24
 424:	23 8b       	std	Z+19, r18	; 0x13
}
 426:	00 00       	nop
 428:	df 91       	pop	r29
 42a:	cf 91       	pop	r28
 42c:	08 95       	ret

0000042e <SpeakerInit>:
#include <avr/io.h>
#include <avr/interrupt.h>
#include "speaker.h"

void SpeakerInit(void)
{
 42e:	cf 93       	push	r28
 430:	df 93       	push	r29
 432:	cd b7       	in	r28, 0x3d	; 61
 434:	de b7       	in	r29, 0x3e	; 62
		//TCC1.CTRLB=
		//TCC1.CTRLC=
		//TCC1.CTRLD=
		//TCC1.CTRLE=
		
}
 436:	00 00       	nop
 438:	df 91       	pop	r29
 43a:	cf 91       	pop	r28
 43c:	08 95       	ret

0000043e <SwitchInit>:
#include "switch.h"
#include <avr/io.h>

void SwitchInit(void)
{
 43e:	cf 93       	push	r28
 440:	df 93       	push	r29
 442:	cd b7       	in	r28, 0x3d	; 61
 444:	de b7       	in	r29, 0x3e	; 62
	//11,13,15 p124
	
	PORTD.DIRCLR |= 0b11110001;
 446:	80 e6       	ldi	r24, 0x60	; 96
 448:	96 e0       	ldi	r25, 0x06	; 6
 44a:	20 e6       	ldi	r18, 0x60	; 96
 44c:	36 e0       	ldi	r19, 0x06	; 6
 44e:	f9 01       	movw	r30, r18
 450:	22 81       	ldd	r18, Z+2	; 0x02
 452:	21 6f       	ori	r18, 0xF1	; 241
 454:	fc 01       	movw	r30, r24
 456:	22 83       	std	Z+2, r18	; 0x02
	PORTD.PIN0CTRL= 0b00000001;		//indrukkenn
 458:	80 e6       	ldi	r24, 0x60	; 96
 45a:	96 e0       	ldi	r25, 0x06	; 6
 45c:	21 e0       	ldi	r18, 0x01	; 1
 45e:	fc 01       	movw	r30, r24
 460:	20 8b       	std	Z+16, r18	; 0x10
	PORTD.PIN4CTRL= 0b00000001;		//rechts
 462:	80 e6       	ldi	r24, 0x60	; 96
 464:	96 e0       	ldi	r25, 0x06	; 6
 466:	21 e0       	ldi	r18, 0x01	; 1
 468:	fc 01       	movw	r30, r24
 46a:	24 8b       	std	Z+20, r18	; 0x14
	PORTD.PIN5CTRL= 0b00000001;		//beneden
 46c:	80 e6       	ldi	r24, 0x60	; 96
 46e:	96 e0       	ldi	r25, 0x06	; 6
 470:	21 e0       	ldi	r18, 0x01	; 1
 472:	fc 01       	movw	r30, r24
 474:	25 8b       	std	Z+21, r18	; 0x15
	PORTD.PIN6CTRL= 0b00000001;		//links
 476:	80 e6       	ldi	r24, 0x60	; 96
 478:	96 e0       	ldi	r25, 0x06	; 6
 47a:	21 e0       	ldi	r18, 0x01	; 1
 47c:	fc 01       	movw	r30, r24
 47e:	26 8b       	std	Z+22, r18	; 0x16
	PORTD.PIN7CTRL= 0b00000001;		//omhoog
 480:	80 e6       	ldi	r24, 0x60	; 96
 482:	96 e0       	ldi	r25, 0x06	; 6
 484:	21 e0       	ldi	r18, 0x01	; 1
 486:	fc 01       	movw	r30, r24
 488:	27 8b       	std	Z+23, r18	; 0x17
}
 48a:	00 00       	nop
 48c:	df 91       	pop	r29
 48e:	cf 91       	pop	r28
 490:	08 95       	ret

00000492 <USARTInit>:
static int stdio_putchar(char c, FILE * stream);
static int stdio_getchar(FILE *stream);
static FILE UsartStdio = FDEV_SETUP_STREAM(stdio_putchar, stdio_getchar,_FDEV_SETUP_WRITE);

void USARTInit(void)
{
 492:	cf 93       	push	r28
 494:	df 93       	push	r29
 496:	cd b7       	in	r28, 0x3d	; 61
 498:	de b7       	in	r29, 0x3e	; 62
	USART_PORT.DIRSET=0b00001000;	//transmitlijn als output, receive lijn als input
 49a:	80 e6       	ldi	r24, 0x60	; 96
 49c:	96 e0       	ldi	r25, 0x06	; 6
 49e:	28 e0       	ldi	r18, 0x08	; 8
 4a0:	fc 01       	movw	r30, r24
 4a2:	21 83       	std	Z+1, r18	; 0x01
	USART_PORT.DIRCLR=0b00000100;
 4a4:	80 e6       	ldi	r24, 0x60	; 96
 4a6:	96 e0       	ldi	r25, 0x06	; 6
 4a8:	24 e0       	ldi	r18, 0x04	; 4
 4aa:	fc 01       	movw	r30, r24
 4ac:	22 83       	std	Z+2, r18	; 0x02
	
	USART.CTRLA=0b00000000; //polled mode = interrupts uitgeschakeld
 4ae:	80 ea       	ldi	r24, 0xA0	; 160
 4b0:	99 e0       	ldi	r25, 0x09	; 9
 4b2:	fc 01       	movw	r30, r24
 4b4:	13 82       	std	Z+3, r1	; 0x03
	USART.CTRLB=0b00011000; //transmitter en reveicer aan, double speed comm uit
 4b6:	80 ea       	ldi	r24, 0xA0	; 160
 4b8:	99 e0       	ldi	r25, 0x09	; 9
 4ba:	28 e1       	ldi	r18, 0x18	; 24
 4bc:	fc 01       	movw	r30, r24
 4be:	24 83       	std	Z+4, r18	; 0x04
	USART.CTRLC=0b00000011; // USART in async mode
 4c0:	80 ea       	ldi	r24, 0xA0	; 160
 4c2:	99 e0       	ldi	r25, 0x09	; 9
 4c4:	23 e0       	ldi	r18, 0x03	; 3
 4c6:	fc 01       	movw	r30, r24
 4c8:	25 83       	std	Z+5, r18	; 0x05
	
	USART.BAUDCTRLA=0xE5; //BSEL=3301, BSCALE=-5 9600 baud
 4ca:	80 ea       	ldi	r24, 0xA0	; 160
 4cc:	99 e0       	ldi	r25, 0x09	; 9
 4ce:	25 ee       	ldi	r18, 0xE5	; 229
 4d0:	fc 01       	movw	r30, r24
 4d2:	26 83       	std	Z+6, r18	; 0x06
	USART.BAUDCTRLB=0xBC; 
 4d4:	80 ea       	ldi	r24, 0xA0	; 160
 4d6:	99 e0       	ldi	r25, 0x09	; 9
 4d8:	2c eb       	ldi	r18, 0xBC	; 188
 4da:	fc 01       	movw	r30, r24
 4dc:	27 83       	std	Z+7, r18	; 0x07
	
	stdout=&UsartStdio; // koppeling tussen drivercode en stdio lib
 4de:	80 e0       	ldi	r24, 0x00	; 0
 4e0:	90 e2       	ldi	r25, 0x20	; 32
 4e2:	80 93 88 20 	sts	0x2088, r24	; 0x802088 <__iob+0x2>
 4e6:	90 93 89 20 	sts	0x2089, r25	; 0x802089 <__iob+0x3>
	stdin=&UsartStdio;
 4ea:	80 e0       	ldi	r24, 0x00	; 0
 4ec:	90 e2       	ldi	r25, 0x20	; 32
 4ee:	80 93 86 20 	sts	0x2086, r24	; 0x802086 <__iob>
 4f2:	90 93 87 20 	sts	0x2087, r25	; 0x802087 <__iob+0x1>
}
 4f6:	00 00       	nop
 4f8:	df 91       	pop	r29
 4fa:	cf 91       	pop	r28
 4fc:	08 95       	ret

000004fe <stdio_putchar>:

//vormt onderste laag van stdio lib
static int stdio_putchar(char c, FILE * stream) //1 byte over USART
{
 4fe:	cf 93       	push	r28
 500:	df 93       	push	r29
 502:	00 d0       	rcall	.+0      	; 0x504 <stdio_putchar+0x6>
 504:	1f 92       	push	r1
 506:	cd b7       	in	r28, 0x3d	; 61
 508:	de b7       	in	r29, 0x3e	; 62
 50a:	89 83       	std	Y+1, r24	; 0x01
 50c:	6a 83       	std	Y+2, r22	; 0x02
 50e:	7b 83       	std	Y+3, r23	; 0x03
	USART.DATA = c;//USARTC --> c = 0x63, USARTD --> 0x55 = U
 510:	80 ea       	ldi	r24, 0xA0	; 160
 512:	99 e0       	ldi	r25, 0x09	; 9
 514:	29 81       	ldd	r18, Y+1	; 0x01
 516:	fc 01       	movw	r30, r24
 518:	20 83       	st	Z, r18
	while (!(USART.STATUS & 0b01000000)); //wachten op TXCIF (Transmit Complete interrupt flag) = byte verzonden
 51a:	00 00       	nop
 51c:	80 ea       	ldi	r24, 0xA0	; 160
 51e:	99 e0       	ldi	r25, 0x09	; 9
 520:	fc 01       	movw	r30, r24
 522:	81 81       	ldd	r24, Z+1	; 0x01
 524:	88 2f       	mov	r24, r24
 526:	90 e0       	ldi	r25, 0x00	; 0
 528:	80 74       	andi	r24, 0x40	; 64
 52a:	99 27       	eor	r25, r25
 52c:	89 2b       	or	r24, r25
 52e:	b1 f3       	breq	.-20     	; 0x51c <stdio_putchar+0x1e>
	USART.STATUS=0b01000000; //vlag op 0 voor volgende datatransfer
 530:	80 ea       	ldi	r24, 0xA0	; 160
 532:	99 e0       	ldi	r25, 0x09	; 9
 534:	20 e4       	ldi	r18, 0x40	; 64
 536:	fc 01       	movw	r30, r24
 538:	21 83       	std	Z+1, r18	; 0x01
	return 0;
 53a:	80 e0       	ldi	r24, 0x00	; 0
 53c:	90 e0       	ldi	r25, 0x00	; 0
}
 53e:	23 96       	adiw	r28, 0x03	; 3
 540:	cd bf       	out	0x3d, r28	; 61
 542:	de bf       	out	0x3e, r29	; 62
 544:	df 91       	pop	r29
 546:	cf 91       	pop	r28
 548:	08 95       	ret

0000054a <stdio_getchar>:
	
static int stdio_getchar(FILE *stream)
{
 54a:	cf 93       	push	r28
 54c:	df 93       	push	r29
 54e:	00 d0       	rcall	.+0      	; 0x550 <stdio_getchar+0x6>
 550:	cd b7       	in	r28, 0x3d	; 61
 552:	de b7       	in	r29, 0x3e	; 62
 554:	89 83       	std	Y+1, r24	; 0x01
 556:	9a 83       	std	Y+2, r25	; 0x02
	while (!(USART.STATUS & 0b10000000)); //wacht tot er een byte in de receive buffer zit
 558:	00 00       	nop
 55a:	80 ea       	ldi	r24, 0xA0	; 160
 55c:	99 e0       	ldi	r25, 0x09	; 9
 55e:	fc 01       	movw	r30, r24
 560:	81 81       	ldd	r24, Z+1	; 0x01
 562:	88 23       	and	r24, r24
 564:	d4 f7       	brge	.-12     	; 0x55a <stdio_getchar+0x10>
	return USART.DATA;
 566:	80 ea       	ldi	r24, 0xA0	; 160
 568:	99 e0       	ldi	r25, 0x09	; 9
 56a:	fc 01       	movw	r30, r24
 56c:	80 81       	ld	r24, Z
 56e:	88 2f       	mov	r24, r24
 570:	90 e0       	ldi	r25, 0x00	; 0
}
 572:	0f 90       	pop	r0
 574:	0f 90       	pop	r0
 576:	df 91       	pop	r29
 578:	cf 91       	pop	r28
 57a:	08 95       	ret

0000057c <__cmpsf2>:
 57c:	0e 94 f2 02 	call	0x5e4	; 0x5e4 <__fp_cmp>
 580:	08 f4       	brcc	.+2      	; 0x584 <__cmpsf2+0x8>
 582:	81 e0       	ldi	r24, 0x01	; 1
 584:	08 95       	ret

00000586 <__fixunssfsi>:
 586:	0e 94 1e 03 	call	0x63c	; 0x63c <__fp_splitA>
 58a:	88 f0       	brcs	.+34     	; 0x5ae <__fixunssfsi+0x28>
 58c:	9f 57       	subi	r25, 0x7F	; 127
 58e:	98 f0       	brcs	.+38     	; 0x5b6 <__fixunssfsi+0x30>
 590:	b9 2f       	mov	r27, r25
 592:	99 27       	eor	r25, r25
 594:	b7 51       	subi	r27, 0x17	; 23
 596:	b0 f0       	brcs	.+44     	; 0x5c4 <__fixunssfsi+0x3e>
 598:	e1 f0       	breq	.+56     	; 0x5d2 <__fixunssfsi+0x4c>
 59a:	66 0f       	add	r22, r22
 59c:	77 1f       	adc	r23, r23
 59e:	88 1f       	adc	r24, r24
 5a0:	99 1f       	adc	r25, r25
 5a2:	1a f0       	brmi	.+6      	; 0x5aa <__fixunssfsi+0x24>
 5a4:	ba 95       	dec	r27
 5a6:	c9 f7       	brne	.-14     	; 0x59a <__fixunssfsi+0x14>
 5a8:	14 c0       	rjmp	.+40     	; 0x5d2 <__fixunssfsi+0x4c>
 5aa:	b1 30       	cpi	r27, 0x01	; 1
 5ac:	91 f0       	breq	.+36     	; 0x5d2 <__fixunssfsi+0x4c>
 5ae:	0e 94 38 03 	call	0x670	; 0x670 <__fp_zero>
 5b2:	b1 e0       	ldi	r27, 0x01	; 1
 5b4:	08 95       	ret
 5b6:	0c 94 38 03 	jmp	0x670	; 0x670 <__fp_zero>
 5ba:	67 2f       	mov	r22, r23
 5bc:	78 2f       	mov	r23, r24
 5be:	88 27       	eor	r24, r24
 5c0:	b8 5f       	subi	r27, 0xF8	; 248
 5c2:	39 f0       	breq	.+14     	; 0x5d2 <__fixunssfsi+0x4c>
 5c4:	b9 3f       	cpi	r27, 0xF9	; 249
 5c6:	cc f3       	brlt	.-14     	; 0x5ba <__fixunssfsi+0x34>
 5c8:	86 95       	lsr	r24
 5ca:	77 95       	ror	r23
 5cc:	67 95       	ror	r22
 5ce:	b3 95       	inc	r27
 5d0:	d9 f7       	brne	.-10     	; 0x5c8 <__fixunssfsi+0x42>
 5d2:	3e f4       	brtc	.+14     	; 0x5e2 <__fixunssfsi+0x5c>
 5d4:	90 95       	com	r25
 5d6:	80 95       	com	r24
 5d8:	70 95       	com	r23
 5da:	61 95       	neg	r22
 5dc:	7f 4f       	sbci	r23, 0xFF	; 255
 5de:	8f 4f       	sbci	r24, 0xFF	; 255
 5e0:	9f 4f       	sbci	r25, 0xFF	; 255
 5e2:	08 95       	ret

000005e4 <__fp_cmp>:
 5e4:	99 0f       	add	r25, r25
 5e6:	00 08       	sbc	r0, r0
 5e8:	55 0f       	add	r21, r21
 5ea:	aa 0b       	sbc	r26, r26
 5ec:	e0 e8       	ldi	r30, 0x80	; 128
 5ee:	fe ef       	ldi	r31, 0xFE	; 254
 5f0:	16 16       	cp	r1, r22
 5f2:	17 06       	cpc	r1, r23
 5f4:	e8 07       	cpc	r30, r24
 5f6:	f9 07       	cpc	r31, r25
 5f8:	c0 f0       	brcs	.+48     	; 0x62a <__fp_cmp+0x46>
 5fa:	12 16       	cp	r1, r18
 5fc:	13 06       	cpc	r1, r19
 5fe:	e4 07       	cpc	r30, r20
 600:	f5 07       	cpc	r31, r21
 602:	98 f0       	brcs	.+38     	; 0x62a <__fp_cmp+0x46>
 604:	62 1b       	sub	r22, r18
 606:	73 0b       	sbc	r23, r19
 608:	84 0b       	sbc	r24, r20
 60a:	95 0b       	sbc	r25, r21
 60c:	39 f4       	brne	.+14     	; 0x61c <__fp_cmp+0x38>
 60e:	0a 26       	eor	r0, r26
 610:	61 f0       	breq	.+24     	; 0x62a <__fp_cmp+0x46>
 612:	23 2b       	or	r18, r19
 614:	24 2b       	or	r18, r20
 616:	25 2b       	or	r18, r21
 618:	21 f4       	brne	.+8      	; 0x622 <__fp_cmp+0x3e>
 61a:	08 95       	ret
 61c:	0a 26       	eor	r0, r26
 61e:	09 f4       	brne	.+2      	; 0x622 <__fp_cmp+0x3e>
 620:	a1 40       	sbci	r26, 0x01	; 1
 622:	a6 95       	lsr	r26
 624:	8f ef       	ldi	r24, 0xFF	; 255
 626:	81 1d       	adc	r24, r1
 628:	81 1d       	adc	r24, r1
 62a:	08 95       	ret

0000062c <__fp_split3>:
 62c:	57 fd       	sbrc	r21, 7
 62e:	90 58       	subi	r25, 0x80	; 128
 630:	44 0f       	add	r20, r20
 632:	55 1f       	adc	r21, r21
 634:	59 f0       	breq	.+22     	; 0x64c <__fp_splitA+0x10>
 636:	5f 3f       	cpi	r21, 0xFF	; 255
 638:	71 f0       	breq	.+28     	; 0x656 <__fp_splitA+0x1a>
 63a:	47 95       	ror	r20

0000063c <__fp_splitA>:
 63c:	88 0f       	add	r24, r24
 63e:	97 fb       	bst	r25, 7
 640:	99 1f       	adc	r25, r25
 642:	61 f0       	breq	.+24     	; 0x65c <__fp_splitA+0x20>
 644:	9f 3f       	cpi	r25, 0xFF	; 255
 646:	79 f0       	breq	.+30     	; 0x666 <__fp_splitA+0x2a>
 648:	87 95       	ror	r24
 64a:	08 95       	ret
 64c:	12 16       	cp	r1, r18
 64e:	13 06       	cpc	r1, r19
 650:	14 06       	cpc	r1, r20
 652:	55 1f       	adc	r21, r21
 654:	f2 cf       	rjmp	.-28     	; 0x63a <__fp_split3+0xe>
 656:	46 95       	lsr	r20
 658:	f1 df       	rcall	.-30     	; 0x63c <__fp_splitA>
 65a:	08 c0       	rjmp	.+16     	; 0x66c <__fp_splitA+0x30>
 65c:	16 16       	cp	r1, r22
 65e:	17 06       	cpc	r1, r23
 660:	18 06       	cpc	r1, r24
 662:	99 1f       	adc	r25, r25
 664:	f1 cf       	rjmp	.-30     	; 0x648 <__fp_splitA+0xc>
 666:	86 95       	lsr	r24
 668:	71 05       	cpc	r23, r1
 66a:	61 05       	cpc	r22, r1
 66c:	08 94       	sec
 66e:	08 95       	ret

00000670 <__fp_zero>:
 670:	e8 94       	clt

00000672 <__fp_szero>:
 672:	bb 27       	eor	r27, r27
 674:	66 27       	eor	r22, r22
 676:	77 27       	eor	r23, r23
 678:	cb 01       	movw	r24, r22
 67a:	97 f9       	bld	r25, 7
 67c:	08 95       	ret

0000067e <__gesf2>:
 67e:	0e 94 f2 02 	call	0x5e4	; 0x5e4 <__fp_cmp>
 682:	08 f4       	brcc	.+2      	; 0x686 <__gesf2+0x8>
 684:	8f ef       	ldi	r24, 0xFF	; 255
 686:	08 95       	ret

00000688 <__mulsf3>:
 688:	0e 94 57 03 	call	0x6ae	; 0x6ae <__mulsf3x>
 68c:	0c 94 c8 03 	jmp	0x790	; 0x790 <__fp_round>
 690:	0e 94 ba 03 	call	0x774	; 0x774 <__fp_pscA>
 694:	38 f0       	brcs	.+14     	; 0x6a4 <__mulsf3+0x1c>
 696:	0e 94 c1 03 	call	0x782	; 0x782 <__fp_pscB>
 69a:	20 f0       	brcs	.+8      	; 0x6a4 <__mulsf3+0x1c>
 69c:	95 23       	and	r25, r21
 69e:	11 f0       	breq	.+4      	; 0x6a4 <__mulsf3+0x1c>
 6a0:	0c 94 b1 03 	jmp	0x762	; 0x762 <__fp_inf>
 6a4:	0c 94 b7 03 	jmp	0x76e	; 0x76e <__fp_nan>
 6a8:	11 24       	eor	r1, r1
 6aa:	0c 94 39 03 	jmp	0x672	; 0x672 <__fp_szero>

000006ae <__mulsf3x>:
 6ae:	0e 94 16 03 	call	0x62c	; 0x62c <__fp_split3>
 6b2:	70 f3       	brcs	.-36     	; 0x690 <__mulsf3+0x8>

000006b4 <__mulsf3_pse>:
 6b4:	95 9f       	mul	r25, r21
 6b6:	c1 f3       	breq	.-16     	; 0x6a8 <__mulsf3+0x20>
 6b8:	95 0f       	add	r25, r21
 6ba:	50 e0       	ldi	r21, 0x00	; 0
 6bc:	55 1f       	adc	r21, r21
 6be:	62 9f       	mul	r22, r18
 6c0:	f0 01       	movw	r30, r0
 6c2:	72 9f       	mul	r23, r18
 6c4:	bb 27       	eor	r27, r27
 6c6:	f0 0d       	add	r31, r0
 6c8:	b1 1d       	adc	r27, r1
 6ca:	63 9f       	mul	r22, r19
 6cc:	aa 27       	eor	r26, r26
 6ce:	f0 0d       	add	r31, r0
 6d0:	b1 1d       	adc	r27, r1
 6d2:	aa 1f       	adc	r26, r26
 6d4:	64 9f       	mul	r22, r20
 6d6:	66 27       	eor	r22, r22
 6d8:	b0 0d       	add	r27, r0
 6da:	a1 1d       	adc	r26, r1
 6dc:	66 1f       	adc	r22, r22
 6de:	82 9f       	mul	r24, r18
 6e0:	22 27       	eor	r18, r18
 6e2:	b0 0d       	add	r27, r0
 6e4:	a1 1d       	adc	r26, r1
 6e6:	62 1f       	adc	r22, r18
 6e8:	73 9f       	mul	r23, r19
 6ea:	b0 0d       	add	r27, r0
 6ec:	a1 1d       	adc	r26, r1
 6ee:	62 1f       	adc	r22, r18
 6f0:	83 9f       	mul	r24, r19
 6f2:	a0 0d       	add	r26, r0
 6f4:	61 1d       	adc	r22, r1
 6f6:	22 1f       	adc	r18, r18
 6f8:	74 9f       	mul	r23, r20
 6fa:	33 27       	eor	r19, r19
 6fc:	a0 0d       	add	r26, r0
 6fe:	61 1d       	adc	r22, r1
 700:	23 1f       	adc	r18, r19
 702:	84 9f       	mul	r24, r20
 704:	60 0d       	add	r22, r0
 706:	21 1d       	adc	r18, r1
 708:	82 2f       	mov	r24, r18
 70a:	76 2f       	mov	r23, r22
 70c:	6a 2f       	mov	r22, r26
 70e:	11 24       	eor	r1, r1
 710:	9f 57       	subi	r25, 0x7F	; 127
 712:	50 40       	sbci	r21, 0x00	; 0
 714:	9a f0       	brmi	.+38     	; 0x73c <__mulsf3_pse+0x88>
 716:	f1 f0       	breq	.+60     	; 0x754 <__mulsf3_pse+0xa0>
 718:	88 23       	and	r24, r24
 71a:	4a f0       	brmi	.+18     	; 0x72e <__mulsf3_pse+0x7a>
 71c:	ee 0f       	add	r30, r30
 71e:	ff 1f       	adc	r31, r31
 720:	bb 1f       	adc	r27, r27
 722:	66 1f       	adc	r22, r22
 724:	77 1f       	adc	r23, r23
 726:	88 1f       	adc	r24, r24
 728:	91 50       	subi	r25, 0x01	; 1
 72a:	50 40       	sbci	r21, 0x00	; 0
 72c:	a9 f7       	brne	.-22     	; 0x718 <__mulsf3_pse+0x64>
 72e:	9e 3f       	cpi	r25, 0xFE	; 254
 730:	51 05       	cpc	r21, r1
 732:	80 f0       	brcs	.+32     	; 0x754 <__mulsf3_pse+0xa0>
 734:	0c 94 b1 03 	jmp	0x762	; 0x762 <__fp_inf>
 738:	0c 94 39 03 	jmp	0x672	; 0x672 <__fp_szero>
 73c:	5f 3f       	cpi	r21, 0xFF	; 255
 73e:	e4 f3       	brlt	.-8      	; 0x738 <__mulsf3_pse+0x84>
 740:	98 3e       	cpi	r25, 0xE8	; 232
 742:	d4 f3       	brlt	.-12     	; 0x738 <__mulsf3_pse+0x84>
 744:	86 95       	lsr	r24
 746:	77 95       	ror	r23
 748:	67 95       	ror	r22
 74a:	b7 95       	ror	r27
 74c:	f7 95       	ror	r31
 74e:	e7 95       	ror	r30
 750:	9f 5f       	subi	r25, 0xFF	; 255
 752:	c1 f7       	brne	.-16     	; 0x744 <__mulsf3_pse+0x90>
 754:	fe 2b       	or	r31, r30
 756:	88 0f       	add	r24, r24
 758:	91 1d       	adc	r25, r1
 75a:	96 95       	lsr	r25
 75c:	87 95       	ror	r24
 75e:	97 f9       	bld	r25, 7
 760:	08 95       	ret

00000762 <__fp_inf>:
 762:	97 f9       	bld	r25, 7
 764:	9f 67       	ori	r25, 0x7F	; 127
 766:	80 e8       	ldi	r24, 0x80	; 128
 768:	70 e0       	ldi	r23, 0x00	; 0
 76a:	60 e0       	ldi	r22, 0x00	; 0
 76c:	08 95       	ret

0000076e <__fp_nan>:
 76e:	9f ef       	ldi	r25, 0xFF	; 255
 770:	80 ec       	ldi	r24, 0xC0	; 192
 772:	08 95       	ret

00000774 <__fp_pscA>:
 774:	00 24       	eor	r0, r0
 776:	0a 94       	dec	r0
 778:	16 16       	cp	r1, r22
 77a:	17 06       	cpc	r1, r23
 77c:	18 06       	cpc	r1, r24
 77e:	09 06       	cpc	r0, r25
 780:	08 95       	ret

00000782 <__fp_pscB>:
 782:	00 24       	eor	r0, r0
 784:	0a 94       	dec	r0
 786:	12 16       	cp	r1, r18
 788:	13 06       	cpc	r1, r19
 78a:	14 06       	cpc	r1, r20
 78c:	05 06       	cpc	r0, r21
 78e:	08 95       	ret

00000790 <__fp_round>:
 790:	09 2e       	mov	r0, r25
 792:	03 94       	inc	r0
 794:	00 0c       	add	r0, r0
 796:	11 f4       	brne	.+4      	; 0x79c <__fp_round+0xc>
 798:	88 23       	and	r24, r24
 79a:	52 f0       	brmi	.+20     	; 0x7b0 <__fp_round+0x20>
 79c:	bb 0f       	add	r27, r27
 79e:	40 f4       	brcc	.+16     	; 0x7b0 <__fp_round+0x20>
 7a0:	bf 2b       	or	r27, r31
 7a2:	11 f4       	brne	.+4      	; 0x7a8 <__fp_round+0x18>
 7a4:	60 ff       	sbrs	r22, 0
 7a6:	04 c0       	rjmp	.+8      	; 0x7b0 <__fp_round+0x20>
 7a8:	6f 5f       	subi	r22, 0xFF	; 255
 7aa:	7f 4f       	sbci	r23, 0xFF	; 255
 7ac:	8f 4f       	sbci	r24, 0xFF	; 255
 7ae:	9f 4f       	sbci	r25, 0xFF	; 255
 7b0:	08 95       	ret

000007b2 <puts>:
 7b2:	0f 93       	push	r16
 7b4:	1f 93       	push	r17
 7b6:	cf 93       	push	r28
 7b8:	df 93       	push	r29
 7ba:	e0 91 88 20 	lds	r30, 0x2088	; 0x802088 <__iob+0x2>
 7be:	f0 91 89 20 	lds	r31, 0x2089	; 0x802089 <__iob+0x3>
 7c2:	23 81       	ldd	r18, Z+3	; 0x03
 7c4:	21 ff       	sbrs	r18, 1
 7c6:	1b c0       	rjmp	.+54     	; 0x7fe <puts+0x4c>
 7c8:	8c 01       	movw	r16, r24
 7ca:	d0 e0       	ldi	r29, 0x00	; 0
 7cc:	c0 e0       	ldi	r28, 0x00	; 0
 7ce:	f8 01       	movw	r30, r16
 7d0:	81 91       	ld	r24, Z+
 7d2:	8f 01       	movw	r16, r30
 7d4:	60 91 88 20 	lds	r22, 0x2088	; 0x802088 <__iob+0x2>
 7d8:	70 91 89 20 	lds	r23, 0x2089	; 0x802089 <__iob+0x3>
 7dc:	db 01       	movw	r26, r22
 7de:	18 96       	adiw	r26, 0x08	; 8
 7e0:	ed 91       	ld	r30, X+
 7e2:	fc 91       	ld	r31, X
 7e4:	19 97       	sbiw	r26, 0x09	; 9
 7e6:	88 23       	and	r24, r24
 7e8:	31 f0       	breq	.+12     	; 0x7f6 <puts+0x44>
 7ea:	09 95       	icall
 7ec:	89 2b       	or	r24, r25
 7ee:	79 f3       	breq	.-34     	; 0x7ce <puts+0x1c>
 7f0:	df ef       	ldi	r29, 0xFF	; 255
 7f2:	cf ef       	ldi	r28, 0xFF	; 255
 7f4:	ec cf       	rjmp	.-40     	; 0x7ce <puts+0x1c>
 7f6:	8a e0       	ldi	r24, 0x0A	; 10
 7f8:	09 95       	icall
 7fa:	89 2b       	or	r24, r25
 7fc:	19 f0       	breq	.+6      	; 0x804 <puts+0x52>
 7fe:	8f ef       	ldi	r24, 0xFF	; 255
 800:	9f ef       	ldi	r25, 0xFF	; 255
 802:	02 c0       	rjmp	.+4      	; 0x808 <puts+0x56>
 804:	8d 2f       	mov	r24, r29
 806:	9c 2f       	mov	r25, r28
 808:	df 91       	pop	r29
 80a:	cf 91       	pop	r28
 80c:	1f 91       	pop	r17
 80e:	0f 91       	pop	r16
 810:	08 95       	ret

00000812 <sprintf>:
 812:	ae e0       	ldi	r26, 0x0E	; 14
 814:	b0 e0       	ldi	r27, 0x00	; 0
 816:	ef e0       	ldi	r30, 0x0F	; 15
 818:	f4 e0       	ldi	r31, 0x04	; 4
 81a:	0c 94 ca 06 	jmp	0xd94	; 0xd94 <__prologue_saves__+0x1c>
 81e:	0d 89       	ldd	r16, Y+21	; 0x15
 820:	1e 89       	ldd	r17, Y+22	; 0x16
 822:	86 e0       	ldi	r24, 0x06	; 6
 824:	8c 83       	std	Y+4, r24	; 0x04
 826:	09 83       	std	Y+1, r16	; 0x01
 828:	1a 83       	std	Y+2, r17	; 0x02
 82a:	8f ef       	ldi	r24, 0xFF	; 255
 82c:	9f e7       	ldi	r25, 0x7F	; 127
 82e:	8d 83       	std	Y+5, r24	; 0x05
 830:	9e 83       	std	Y+6, r25	; 0x06
 832:	ae 01       	movw	r20, r28
 834:	47 5e       	subi	r20, 0xE7	; 231
 836:	5f 4f       	sbci	r21, 0xFF	; 255
 838:	6f 89       	ldd	r22, Y+23	; 0x17
 83a:	78 8d       	ldd	r23, Y+24	; 0x18
 83c:	ce 01       	movw	r24, r28
 83e:	01 96       	adiw	r24, 0x01	; 1
 840:	0e 94 2b 04 	call	0x856	; 0x856 <vfprintf>
 844:	ef 81       	ldd	r30, Y+7	; 0x07
 846:	f8 85       	ldd	r31, Y+8	; 0x08
 848:	e0 0f       	add	r30, r16
 84a:	f1 1f       	adc	r31, r17
 84c:	10 82       	st	Z, r1
 84e:	2e 96       	adiw	r28, 0x0e	; 14
 850:	e4 e0       	ldi	r30, 0x04	; 4
 852:	0c 94 e3 06 	jmp	0xdc6	; 0xdc6 <__epilogue_restores__+0x1c>

00000856 <vfprintf>:
 856:	ab e0       	ldi	r26, 0x0B	; 11
 858:	b0 e0       	ldi	r27, 0x00	; 0
 85a:	e1 e3       	ldi	r30, 0x31	; 49
 85c:	f4 e0       	ldi	r31, 0x04	; 4
 85e:	0c 94 bc 06 	jmp	0xd78	; 0xd78 <__prologue_saves__>
 862:	6c 01       	movw	r12, r24
 864:	7b 01       	movw	r14, r22
 866:	8a 01       	movw	r16, r20
 868:	fc 01       	movw	r30, r24
 86a:	16 82       	std	Z+6, r1	; 0x06
 86c:	17 82       	std	Z+7, r1	; 0x07
 86e:	83 81       	ldd	r24, Z+3	; 0x03
 870:	81 ff       	sbrs	r24, 1
 872:	cc c1       	rjmp	.+920    	; 0xc0c <vfprintf+0x3b6>
 874:	ce 01       	movw	r24, r28
 876:	01 96       	adiw	r24, 0x01	; 1
 878:	3c 01       	movw	r6, r24
 87a:	f6 01       	movw	r30, r12
 87c:	93 81       	ldd	r25, Z+3	; 0x03
 87e:	f7 01       	movw	r30, r14
 880:	93 fd       	sbrc	r25, 3
 882:	85 91       	lpm	r24, Z+
 884:	93 ff       	sbrs	r25, 3
 886:	81 91       	ld	r24, Z+
 888:	7f 01       	movw	r14, r30
 88a:	88 23       	and	r24, r24
 88c:	09 f4       	brne	.+2      	; 0x890 <vfprintf+0x3a>
 88e:	ba c1       	rjmp	.+884    	; 0xc04 <vfprintf+0x3ae>
 890:	85 32       	cpi	r24, 0x25	; 37
 892:	39 f4       	brne	.+14     	; 0x8a2 <vfprintf+0x4c>
 894:	93 fd       	sbrc	r25, 3
 896:	85 91       	lpm	r24, Z+
 898:	93 ff       	sbrs	r25, 3
 89a:	81 91       	ld	r24, Z+
 89c:	7f 01       	movw	r14, r30
 89e:	85 32       	cpi	r24, 0x25	; 37
 8a0:	29 f4       	brne	.+10     	; 0x8ac <vfprintf+0x56>
 8a2:	b6 01       	movw	r22, r12
 8a4:	90 e0       	ldi	r25, 0x00	; 0
 8a6:	0e 94 22 06 	call	0xc44	; 0xc44 <fputc>
 8aa:	e7 cf       	rjmp	.-50     	; 0x87a <vfprintf+0x24>
 8ac:	91 2c       	mov	r9, r1
 8ae:	21 2c       	mov	r2, r1
 8b0:	31 2c       	mov	r3, r1
 8b2:	ff e1       	ldi	r31, 0x1F	; 31
 8b4:	f3 15       	cp	r31, r3
 8b6:	d8 f0       	brcs	.+54     	; 0x8ee <vfprintf+0x98>
 8b8:	8b 32       	cpi	r24, 0x2B	; 43
 8ba:	79 f0       	breq	.+30     	; 0x8da <vfprintf+0x84>
 8bc:	38 f4       	brcc	.+14     	; 0x8cc <vfprintf+0x76>
 8be:	80 32       	cpi	r24, 0x20	; 32
 8c0:	79 f0       	breq	.+30     	; 0x8e0 <vfprintf+0x8a>
 8c2:	83 32       	cpi	r24, 0x23	; 35
 8c4:	a1 f4       	brne	.+40     	; 0x8ee <vfprintf+0x98>
 8c6:	23 2d       	mov	r18, r3
 8c8:	20 61       	ori	r18, 0x10	; 16
 8ca:	1d c0       	rjmp	.+58     	; 0x906 <vfprintf+0xb0>
 8cc:	8d 32       	cpi	r24, 0x2D	; 45
 8ce:	61 f0       	breq	.+24     	; 0x8e8 <vfprintf+0x92>
 8d0:	80 33       	cpi	r24, 0x30	; 48
 8d2:	69 f4       	brne	.+26     	; 0x8ee <vfprintf+0x98>
 8d4:	23 2d       	mov	r18, r3
 8d6:	21 60       	ori	r18, 0x01	; 1
 8d8:	16 c0       	rjmp	.+44     	; 0x906 <vfprintf+0xb0>
 8da:	83 2d       	mov	r24, r3
 8dc:	82 60       	ori	r24, 0x02	; 2
 8de:	38 2e       	mov	r3, r24
 8e0:	e3 2d       	mov	r30, r3
 8e2:	e4 60       	ori	r30, 0x04	; 4
 8e4:	3e 2e       	mov	r3, r30
 8e6:	2a c0       	rjmp	.+84     	; 0x93c <vfprintf+0xe6>
 8e8:	f3 2d       	mov	r31, r3
 8ea:	f8 60       	ori	r31, 0x08	; 8
 8ec:	1d c0       	rjmp	.+58     	; 0x928 <vfprintf+0xd2>
 8ee:	37 fc       	sbrc	r3, 7
 8f0:	2d c0       	rjmp	.+90     	; 0x94c <vfprintf+0xf6>
 8f2:	20 ed       	ldi	r18, 0xD0	; 208
 8f4:	28 0f       	add	r18, r24
 8f6:	2a 30       	cpi	r18, 0x0A	; 10
 8f8:	40 f0       	brcs	.+16     	; 0x90a <vfprintf+0xb4>
 8fa:	8e 32       	cpi	r24, 0x2E	; 46
 8fc:	b9 f4       	brne	.+46     	; 0x92c <vfprintf+0xd6>
 8fe:	36 fc       	sbrc	r3, 6
 900:	81 c1       	rjmp	.+770    	; 0xc04 <vfprintf+0x3ae>
 902:	23 2d       	mov	r18, r3
 904:	20 64       	ori	r18, 0x40	; 64
 906:	32 2e       	mov	r3, r18
 908:	19 c0       	rjmp	.+50     	; 0x93c <vfprintf+0xe6>
 90a:	36 fe       	sbrs	r3, 6
 90c:	06 c0       	rjmp	.+12     	; 0x91a <vfprintf+0xc4>
 90e:	8a e0       	ldi	r24, 0x0A	; 10
 910:	98 9e       	mul	r9, r24
 912:	20 0d       	add	r18, r0
 914:	11 24       	eor	r1, r1
 916:	92 2e       	mov	r9, r18
 918:	11 c0       	rjmp	.+34     	; 0x93c <vfprintf+0xe6>
 91a:	ea e0       	ldi	r30, 0x0A	; 10
 91c:	2e 9e       	mul	r2, r30
 91e:	20 0d       	add	r18, r0
 920:	11 24       	eor	r1, r1
 922:	22 2e       	mov	r2, r18
 924:	f3 2d       	mov	r31, r3
 926:	f0 62       	ori	r31, 0x20	; 32
 928:	3f 2e       	mov	r3, r31
 92a:	08 c0       	rjmp	.+16     	; 0x93c <vfprintf+0xe6>
 92c:	8c 36       	cpi	r24, 0x6C	; 108
 92e:	21 f4       	brne	.+8      	; 0x938 <vfprintf+0xe2>
 930:	83 2d       	mov	r24, r3
 932:	80 68       	ori	r24, 0x80	; 128
 934:	38 2e       	mov	r3, r24
 936:	02 c0       	rjmp	.+4      	; 0x93c <vfprintf+0xe6>
 938:	88 36       	cpi	r24, 0x68	; 104
 93a:	41 f4       	brne	.+16     	; 0x94c <vfprintf+0xf6>
 93c:	f7 01       	movw	r30, r14
 93e:	93 fd       	sbrc	r25, 3
 940:	85 91       	lpm	r24, Z+
 942:	93 ff       	sbrs	r25, 3
 944:	81 91       	ld	r24, Z+
 946:	7f 01       	movw	r14, r30
 948:	81 11       	cpse	r24, r1
 94a:	b3 cf       	rjmp	.-154    	; 0x8b2 <vfprintf+0x5c>
 94c:	98 2f       	mov	r25, r24
 94e:	9f 7d       	andi	r25, 0xDF	; 223
 950:	95 54       	subi	r25, 0x45	; 69
 952:	93 30       	cpi	r25, 0x03	; 3
 954:	28 f4       	brcc	.+10     	; 0x960 <vfprintf+0x10a>
 956:	0c 5f       	subi	r16, 0xFC	; 252
 958:	1f 4f       	sbci	r17, 0xFF	; 255
 95a:	9f e3       	ldi	r25, 0x3F	; 63
 95c:	99 83       	std	Y+1, r25	; 0x01
 95e:	0d c0       	rjmp	.+26     	; 0x97a <vfprintf+0x124>
 960:	83 36       	cpi	r24, 0x63	; 99
 962:	31 f0       	breq	.+12     	; 0x970 <vfprintf+0x11a>
 964:	83 37       	cpi	r24, 0x73	; 115
 966:	71 f0       	breq	.+28     	; 0x984 <vfprintf+0x12e>
 968:	83 35       	cpi	r24, 0x53	; 83
 96a:	09 f0       	breq	.+2      	; 0x96e <vfprintf+0x118>
 96c:	59 c0       	rjmp	.+178    	; 0xa20 <vfprintf+0x1ca>
 96e:	21 c0       	rjmp	.+66     	; 0x9b2 <vfprintf+0x15c>
 970:	f8 01       	movw	r30, r16
 972:	80 81       	ld	r24, Z
 974:	89 83       	std	Y+1, r24	; 0x01
 976:	0e 5f       	subi	r16, 0xFE	; 254
 978:	1f 4f       	sbci	r17, 0xFF	; 255
 97a:	88 24       	eor	r8, r8
 97c:	83 94       	inc	r8
 97e:	91 2c       	mov	r9, r1
 980:	53 01       	movw	r10, r6
 982:	13 c0       	rjmp	.+38     	; 0x9aa <vfprintf+0x154>
 984:	28 01       	movw	r4, r16
 986:	f2 e0       	ldi	r31, 0x02	; 2
 988:	4f 0e       	add	r4, r31
 98a:	51 1c       	adc	r5, r1
 98c:	f8 01       	movw	r30, r16
 98e:	a0 80       	ld	r10, Z
 990:	b1 80       	ldd	r11, Z+1	; 0x01
 992:	36 fe       	sbrs	r3, 6
 994:	03 c0       	rjmp	.+6      	; 0x99c <vfprintf+0x146>
 996:	69 2d       	mov	r22, r9
 998:	70 e0       	ldi	r23, 0x00	; 0
 99a:	02 c0       	rjmp	.+4      	; 0x9a0 <vfprintf+0x14a>
 99c:	6f ef       	ldi	r22, 0xFF	; 255
 99e:	7f ef       	ldi	r23, 0xFF	; 255
 9a0:	c5 01       	movw	r24, r10
 9a2:	0e 94 17 06 	call	0xc2e	; 0xc2e <strnlen>
 9a6:	4c 01       	movw	r8, r24
 9a8:	82 01       	movw	r16, r4
 9aa:	f3 2d       	mov	r31, r3
 9ac:	ff 77       	andi	r31, 0x7F	; 127
 9ae:	3f 2e       	mov	r3, r31
 9b0:	16 c0       	rjmp	.+44     	; 0x9de <vfprintf+0x188>
 9b2:	28 01       	movw	r4, r16
 9b4:	22 e0       	ldi	r18, 0x02	; 2
 9b6:	42 0e       	add	r4, r18
 9b8:	51 1c       	adc	r5, r1
 9ba:	f8 01       	movw	r30, r16
 9bc:	a0 80       	ld	r10, Z
 9be:	b1 80       	ldd	r11, Z+1	; 0x01
 9c0:	36 fe       	sbrs	r3, 6
 9c2:	03 c0       	rjmp	.+6      	; 0x9ca <vfprintf+0x174>
 9c4:	69 2d       	mov	r22, r9
 9c6:	70 e0       	ldi	r23, 0x00	; 0
 9c8:	02 c0       	rjmp	.+4      	; 0x9ce <vfprintf+0x178>
 9ca:	6f ef       	ldi	r22, 0xFF	; 255
 9cc:	7f ef       	ldi	r23, 0xFF	; 255
 9ce:	c5 01       	movw	r24, r10
 9d0:	0e 94 0c 06 	call	0xc18	; 0xc18 <strnlen_P>
 9d4:	4c 01       	movw	r8, r24
 9d6:	f3 2d       	mov	r31, r3
 9d8:	f0 68       	ori	r31, 0x80	; 128
 9da:	3f 2e       	mov	r3, r31
 9dc:	82 01       	movw	r16, r4
 9de:	33 fc       	sbrc	r3, 3
 9e0:	1b c0       	rjmp	.+54     	; 0xa18 <vfprintf+0x1c2>
 9e2:	82 2d       	mov	r24, r2
 9e4:	90 e0       	ldi	r25, 0x00	; 0
 9e6:	88 16       	cp	r8, r24
 9e8:	99 06       	cpc	r9, r25
 9ea:	b0 f4       	brcc	.+44     	; 0xa18 <vfprintf+0x1c2>
 9ec:	b6 01       	movw	r22, r12
 9ee:	80 e2       	ldi	r24, 0x20	; 32
 9f0:	90 e0       	ldi	r25, 0x00	; 0
 9f2:	0e 94 22 06 	call	0xc44	; 0xc44 <fputc>
 9f6:	2a 94       	dec	r2
 9f8:	f4 cf       	rjmp	.-24     	; 0x9e2 <vfprintf+0x18c>
 9fa:	f5 01       	movw	r30, r10
 9fc:	37 fc       	sbrc	r3, 7
 9fe:	85 91       	lpm	r24, Z+
 a00:	37 fe       	sbrs	r3, 7
 a02:	81 91       	ld	r24, Z+
 a04:	5f 01       	movw	r10, r30
 a06:	b6 01       	movw	r22, r12
 a08:	90 e0       	ldi	r25, 0x00	; 0
 a0a:	0e 94 22 06 	call	0xc44	; 0xc44 <fputc>
 a0e:	21 10       	cpse	r2, r1
 a10:	2a 94       	dec	r2
 a12:	21 e0       	ldi	r18, 0x01	; 1
 a14:	82 1a       	sub	r8, r18
 a16:	91 08       	sbc	r9, r1
 a18:	81 14       	cp	r8, r1
 a1a:	91 04       	cpc	r9, r1
 a1c:	71 f7       	brne	.-36     	; 0x9fa <vfprintf+0x1a4>
 a1e:	e8 c0       	rjmp	.+464    	; 0xbf0 <vfprintf+0x39a>
 a20:	84 36       	cpi	r24, 0x64	; 100
 a22:	11 f0       	breq	.+4      	; 0xa28 <vfprintf+0x1d2>
 a24:	89 36       	cpi	r24, 0x69	; 105
 a26:	41 f5       	brne	.+80     	; 0xa78 <vfprintf+0x222>
 a28:	f8 01       	movw	r30, r16
 a2a:	37 fe       	sbrs	r3, 7
 a2c:	07 c0       	rjmp	.+14     	; 0xa3c <vfprintf+0x1e6>
 a2e:	60 81       	ld	r22, Z
 a30:	71 81       	ldd	r23, Z+1	; 0x01
 a32:	82 81       	ldd	r24, Z+2	; 0x02
 a34:	93 81       	ldd	r25, Z+3	; 0x03
 a36:	0c 5f       	subi	r16, 0xFC	; 252
 a38:	1f 4f       	sbci	r17, 0xFF	; 255
 a3a:	08 c0       	rjmp	.+16     	; 0xa4c <vfprintf+0x1f6>
 a3c:	60 81       	ld	r22, Z
 a3e:	71 81       	ldd	r23, Z+1	; 0x01
 a40:	07 2e       	mov	r0, r23
 a42:	00 0c       	add	r0, r0
 a44:	88 0b       	sbc	r24, r24
 a46:	99 0b       	sbc	r25, r25
 a48:	0e 5f       	subi	r16, 0xFE	; 254
 a4a:	1f 4f       	sbci	r17, 0xFF	; 255
 a4c:	f3 2d       	mov	r31, r3
 a4e:	ff 76       	andi	r31, 0x6F	; 111
 a50:	3f 2e       	mov	r3, r31
 a52:	97 ff       	sbrs	r25, 7
 a54:	09 c0       	rjmp	.+18     	; 0xa68 <vfprintf+0x212>
 a56:	90 95       	com	r25
 a58:	80 95       	com	r24
 a5a:	70 95       	com	r23
 a5c:	61 95       	neg	r22
 a5e:	7f 4f       	sbci	r23, 0xFF	; 255
 a60:	8f 4f       	sbci	r24, 0xFF	; 255
 a62:	9f 4f       	sbci	r25, 0xFF	; 255
 a64:	f0 68       	ori	r31, 0x80	; 128
 a66:	3f 2e       	mov	r3, r31
 a68:	2a e0       	ldi	r18, 0x0A	; 10
 a6a:	30 e0       	ldi	r19, 0x00	; 0
 a6c:	a3 01       	movw	r20, r6
 a6e:	0e 94 5e 06 	call	0xcbc	; 0xcbc <__ultoa_invert>
 a72:	88 2e       	mov	r8, r24
 a74:	86 18       	sub	r8, r6
 a76:	45 c0       	rjmp	.+138    	; 0xb02 <vfprintf+0x2ac>
 a78:	85 37       	cpi	r24, 0x75	; 117
 a7a:	31 f4       	brne	.+12     	; 0xa88 <vfprintf+0x232>
 a7c:	23 2d       	mov	r18, r3
 a7e:	2f 7e       	andi	r18, 0xEF	; 239
 a80:	b2 2e       	mov	r11, r18
 a82:	2a e0       	ldi	r18, 0x0A	; 10
 a84:	30 e0       	ldi	r19, 0x00	; 0
 a86:	25 c0       	rjmp	.+74     	; 0xad2 <vfprintf+0x27c>
 a88:	93 2d       	mov	r25, r3
 a8a:	99 7f       	andi	r25, 0xF9	; 249
 a8c:	b9 2e       	mov	r11, r25
 a8e:	8f 36       	cpi	r24, 0x6F	; 111
 a90:	c1 f0       	breq	.+48     	; 0xac2 <vfprintf+0x26c>
 a92:	18 f4       	brcc	.+6      	; 0xa9a <vfprintf+0x244>
 a94:	88 35       	cpi	r24, 0x58	; 88
 a96:	79 f0       	breq	.+30     	; 0xab6 <vfprintf+0x260>
 a98:	b5 c0       	rjmp	.+362    	; 0xc04 <vfprintf+0x3ae>
 a9a:	80 37       	cpi	r24, 0x70	; 112
 a9c:	19 f0       	breq	.+6      	; 0xaa4 <vfprintf+0x24e>
 a9e:	88 37       	cpi	r24, 0x78	; 120
 aa0:	21 f0       	breq	.+8      	; 0xaaa <vfprintf+0x254>
 aa2:	b0 c0       	rjmp	.+352    	; 0xc04 <vfprintf+0x3ae>
 aa4:	e9 2f       	mov	r30, r25
 aa6:	e0 61       	ori	r30, 0x10	; 16
 aa8:	be 2e       	mov	r11, r30
 aaa:	b4 fe       	sbrs	r11, 4
 aac:	0d c0       	rjmp	.+26     	; 0xac8 <vfprintf+0x272>
 aae:	fb 2d       	mov	r31, r11
 ab0:	f4 60       	ori	r31, 0x04	; 4
 ab2:	bf 2e       	mov	r11, r31
 ab4:	09 c0       	rjmp	.+18     	; 0xac8 <vfprintf+0x272>
 ab6:	34 fe       	sbrs	r3, 4
 ab8:	0a c0       	rjmp	.+20     	; 0xace <vfprintf+0x278>
 aba:	29 2f       	mov	r18, r25
 abc:	26 60       	ori	r18, 0x06	; 6
 abe:	b2 2e       	mov	r11, r18
 ac0:	06 c0       	rjmp	.+12     	; 0xace <vfprintf+0x278>
 ac2:	28 e0       	ldi	r18, 0x08	; 8
 ac4:	30 e0       	ldi	r19, 0x00	; 0
 ac6:	05 c0       	rjmp	.+10     	; 0xad2 <vfprintf+0x27c>
 ac8:	20 e1       	ldi	r18, 0x10	; 16
 aca:	30 e0       	ldi	r19, 0x00	; 0
 acc:	02 c0       	rjmp	.+4      	; 0xad2 <vfprintf+0x27c>
 ace:	20 e1       	ldi	r18, 0x10	; 16
 ad0:	32 e0       	ldi	r19, 0x02	; 2
 ad2:	f8 01       	movw	r30, r16
 ad4:	b7 fe       	sbrs	r11, 7
 ad6:	07 c0       	rjmp	.+14     	; 0xae6 <vfprintf+0x290>
 ad8:	60 81       	ld	r22, Z
 ada:	71 81       	ldd	r23, Z+1	; 0x01
 adc:	82 81       	ldd	r24, Z+2	; 0x02
 ade:	93 81       	ldd	r25, Z+3	; 0x03
 ae0:	0c 5f       	subi	r16, 0xFC	; 252
 ae2:	1f 4f       	sbci	r17, 0xFF	; 255
 ae4:	06 c0       	rjmp	.+12     	; 0xaf2 <vfprintf+0x29c>
 ae6:	60 81       	ld	r22, Z
 ae8:	71 81       	ldd	r23, Z+1	; 0x01
 aea:	80 e0       	ldi	r24, 0x00	; 0
 aec:	90 e0       	ldi	r25, 0x00	; 0
 aee:	0e 5f       	subi	r16, 0xFE	; 254
 af0:	1f 4f       	sbci	r17, 0xFF	; 255
 af2:	a3 01       	movw	r20, r6
 af4:	0e 94 5e 06 	call	0xcbc	; 0xcbc <__ultoa_invert>
 af8:	88 2e       	mov	r8, r24
 afa:	86 18       	sub	r8, r6
 afc:	fb 2d       	mov	r31, r11
 afe:	ff 77       	andi	r31, 0x7F	; 127
 b00:	3f 2e       	mov	r3, r31
 b02:	36 fe       	sbrs	r3, 6
 b04:	0d c0       	rjmp	.+26     	; 0xb20 <vfprintf+0x2ca>
 b06:	23 2d       	mov	r18, r3
 b08:	2e 7f       	andi	r18, 0xFE	; 254
 b0a:	a2 2e       	mov	r10, r18
 b0c:	89 14       	cp	r8, r9
 b0e:	58 f4       	brcc	.+22     	; 0xb26 <vfprintf+0x2d0>
 b10:	34 fe       	sbrs	r3, 4
 b12:	0b c0       	rjmp	.+22     	; 0xb2a <vfprintf+0x2d4>
 b14:	32 fc       	sbrc	r3, 2
 b16:	09 c0       	rjmp	.+18     	; 0xb2a <vfprintf+0x2d4>
 b18:	83 2d       	mov	r24, r3
 b1a:	8e 7e       	andi	r24, 0xEE	; 238
 b1c:	a8 2e       	mov	r10, r24
 b1e:	05 c0       	rjmp	.+10     	; 0xb2a <vfprintf+0x2d4>
 b20:	b8 2c       	mov	r11, r8
 b22:	a3 2c       	mov	r10, r3
 b24:	03 c0       	rjmp	.+6      	; 0xb2c <vfprintf+0x2d6>
 b26:	b8 2c       	mov	r11, r8
 b28:	01 c0       	rjmp	.+2      	; 0xb2c <vfprintf+0x2d6>
 b2a:	b9 2c       	mov	r11, r9
 b2c:	a4 fe       	sbrs	r10, 4
 b2e:	0f c0       	rjmp	.+30     	; 0xb4e <vfprintf+0x2f8>
 b30:	fe 01       	movw	r30, r28
 b32:	e8 0d       	add	r30, r8
 b34:	f1 1d       	adc	r31, r1
 b36:	80 81       	ld	r24, Z
 b38:	80 33       	cpi	r24, 0x30	; 48
 b3a:	21 f4       	brne	.+8      	; 0xb44 <vfprintf+0x2ee>
 b3c:	9a 2d       	mov	r25, r10
 b3e:	99 7e       	andi	r25, 0xE9	; 233
 b40:	a9 2e       	mov	r10, r25
 b42:	09 c0       	rjmp	.+18     	; 0xb56 <vfprintf+0x300>
 b44:	a2 fe       	sbrs	r10, 2
 b46:	06 c0       	rjmp	.+12     	; 0xb54 <vfprintf+0x2fe>
 b48:	b3 94       	inc	r11
 b4a:	b3 94       	inc	r11
 b4c:	04 c0       	rjmp	.+8      	; 0xb56 <vfprintf+0x300>
 b4e:	8a 2d       	mov	r24, r10
 b50:	86 78       	andi	r24, 0x86	; 134
 b52:	09 f0       	breq	.+2      	; 0xb56 <vfprintf+0x300>
 b54:	b3 94       	inc	r11
 b56:	a3 fc       	sbrc	r10, 3
 b58:	11 c0       	rjmp	.+34     	; 0xb7c <vfprintf+0x326>
 b5a:	a0 fe       	sbrs	r10, 0
 b5c:	06 c0       	rjmp	.+12     	; 0xb6a <vfprintf+0x314>
 b5e:	b2 14       	cp	r11, r2
 b60:	88 f4       	brcc	.+34     	; 0xb84 <vfprintf+0x32e>
 b62:	28 0c       	add	r2, r8
 b64:	92 2c       	mov	r9, r2
 b66:	9b 18       	sub	r9, r11
 b68:	0e c0       	rjmp	.+28     	; 0xb86 <vfprintf+0x330>
 b6a:	b2 14       	cp	r11, r2
 b6c:	60 f4       	brcc	.+24     	; 0xb86 <vfprintf+0x330>
 b6e:	b6 01       	movw	r22, r12
 b70:	80 e2       	ldi	r24, 0x20	; 32
 b72:	90 e0       	ldi	r25, 0x00	; 0
 b74:	0e 94 22 06 	call	0xc44	; 0xc44 <fputc>
 b78:	b3 94       	inc	r11
 b7a:	f7 cf       	rjmp	.-18     	; 0xb6a <vfprintf+0x314>
 b7c:	b2 14       	cp	r11, r2
 b7e:	18 f4       	brcc	.+6      	; 0xb86 <vfprintf+0x330>
 b80:	2b 18       	sub	r2, r11
 b82:	02 c0       	rjmp	.+4      	; 0xb88 <vfprintf+0x332>
 b84:	98 2c       	mov	r9, r8
 b86:	21 2c       	mov	r2, r1
 b88:	a4 fe       	sbrs	r10, 4
 b8a:	10 c0       	rjmp	.+32     	; 0xbac <vfprintf+0x356>
 b8c:	b6 01       	movw	r22, r12
 b8e:	80 e3       	ldi	r24, 0x30	; 48
 b90:	90 e0       	ldi	r25, 0x00	; 0
 b92:	0e 94 22 06 	call	0xc44	; 0xc44 <fputc>
 b96:	a2 fe       	sbrs	r10, 2
 b98:	17 c0       	rjmp	.+46     	; 0xbc8 <vfprintf+0x372>
 b9a:	a1 fc       	sbrc	r10, 1
 b9c:	03 c0       	rjmp	.+6      	; 0xba4 <vfprintf+0x34e>
 b9e:	88 e7       	ldi	r24, 0x78	; 120
 ba0:	90 e0       	ldi	r25, 0x00	; 0
 ba2:	02 c0       	rjmp	.+4      	; 0xba8 <vfprintf+0x352>
 ba4:	88 e5       	ldi	r24, 0x58	; 88
 ba6:	90 e0       	ldi	r25, 0x00	; 0
 ba8:	b6 01       	movw	r22, r12
 baa:	0c c0       	rjmp	.+24     	; 0xbc4 <vfprintf+0x36e>
 bac:	8a 2d       	mov	r24, r10
 bae:	86 78       	andi	r24, 0x86	; 134
 bb0:	59 f0       	breq	.+22     	; 0xbc8 <vfprintf+0x372>
 bb2:	a1 fe       	sbrs	r10, 1
 bb4:	02 c0       	rjmp	.+4      	; 0xbba <vfprintf+0x364>
 bb6:	8b e2       	ldi	r24, 0x2B	; 43
 bb8:	01 c0       	rjmp	.+2      	; 0xbbc <vfprintf+0x366>
 bba:	80 e2       	ldi	r24, 0x20	; 32
 bbc:	a7 fc       	sbrc	r10, 7
 bbe:	8d e2       	ldi	r24, 0x2D	; 45
 bc0:	b6 01       	movw	r22, r12
 bc2:	90 e0       	ldi	r25, 0x00	; 0
 bc4:	0e 94 22 06 	call	0xc44	; 0xc44 <fputc>
 bc8:	89 14       	cp	r8, r9
 bca:	38 f4       	brcc	.+14     	; 0xbda <vfprintf+0x384>
 bcc:	b6 01       	movw	r22, r12
 bce:	80 e3       	ldi	r24, 0x30	; 48
 bd0:	90 e0       	ldi	r25, 0x00	; 0
 bd2:	0e 94 22 06 	call	0xc44	; 0xc44 <fputc>
 bd6:	9a 94       	dec	r9
 bd8:	f7 cf       	rjmp	.-18     	; 0xbc8 <vfprintf+0x372>
 bda:	8a 94       	dec	r8
 bdc:	f3 01       	movw	r30, r6
 bde:	e8 0d       	add	r30, r8
 be0:	f1 1d       	adc	r31, r1
 be2:	80 81       	ld	r24, Z
 be4:	b6 01       	movw	r22, r12
 be6:	90 e0       	ldi	r25, 0x00	; 0
 be8:	0e 94 22 06 	call	0xc44	; 0xc44 <fputc>
 bec:	81 10       	cpse	r8, r1
 bee:	f5 cf       	rjmp	.-22     	; 0xbda <vfprintf+0x384>
 bf0:	22 20       	and	r2, r2
 bf2:	09 f4       	brne	.+2      	; 0xbf6 <vfprintf+0x3a0>
 bf4:	42 ce       	rjmp	.-892    	; 0x87a <vfprintf+0x24>
 bf6:	b6 01       	movw	r22, r12
 bf8:	80 e2       	ldi	r24, 0x20	; 32
 bfa:	90 e0       	ldi	r25, 0x00	; 0
 bfc:	0e 94 22 06 	call	0xc44	; 0xc44 <fputc>
 c00:	2a 94       	dec	r2
 c02:	f6 cf       	rjmp	.-20     	; 0xbf0 <vfprintf+0x39a>
 c04:	f6 01       	movw	r30, r12
 c06:	86 81       	ldd	r24, Z+6	; 0x06
 c08:	97 81       	ldd	r25, Z+7	; 0x07
 c0a:	02 c0       	rjmp	.+4      	; 0xc10 <vfprintf+0x3ba>
 c0c:	8f ef       	ldi	r24, 0xFF	; 255
 c0e:	9f ef       	ldi	r25, 0xFF	; 255
 c10:	2b 96       	adiw	r28, 0x0b	; 11
 c12:	e2 e1       	ldi	r30, 0x12	; 18
 c14:	0c 94 d5 06 	jmp	0xdaa	; 0xdaa <__epilogue_restores__>

00000c18 <strnlen_P>:
 c18:	fc 01       	movw	r30, r24
 c1a:	05 90       	lpm	r0, Z+
 c1c:	61 50       	subi	r22, 0x01	; 1
 c1e:	70 40       	sbci	r23, 0x00	; 0
 c20:	01 10       	cpse	r0, r1
 c22:	d8 f7       	brcc	.-10     	; 0xc1a <strnlen_P+0x2>
 c24:	80 95       	com	r24
 c26:	90 95       	com	r25
 c28:	8e 0f       	add	r24, r30
 c2a:	9f 1f       	adc	r25, r31
 c2c:	08 95       	ret

00000c2e <strnlen>:
 c2e:	fc 01       	movw	r30, r24
 c30:	61 50       	subi	r22, 0x01	; 1
 c32:	70 40       	sbci	r23, 0x00	; 0
 c34:	01 90       	ld	r0, Z+
 c36:	01 10       	cpse	r0, r1
 c38:	d8 f7       	brcc	.-10     	; 0xc30 <strnlen+0x2>
 c3a:	80 95       	com	r24
 c3c:	90 95       	com	r25
 c3e:	8e 0f       	add	r24, r30
 c40:	9f 1f       	adc	r25, r31
 c42:	08 95       	ret

00000c44 <fputc>:
 c44:	0f 93       	push	r16
 c46:	1f 93       	push	r17
 c48:	cf 93       	push	r28
 c4a:	df 93       	push	r29
 c4c:	fb 01       	movw	r30, r22
 c4e:	23 81       	ldd	r18, Z+3	; 0x03
 c50:	21 fd       	sbrc	r18, 1
 c52:	03 c0       	rjmp	.+6      	; 0xc5a <fputc+0x16>
 c54:	8f ef       	ldi	r24, 0xFF	; 255
 c56:	9f ef       	ldi	r25, 0xFF	; 255
 c58:	2c c0       	rjmp	.+88     	; 0xcb2 <fputc+0x6e>
 c5a:	22 ff       	sbrs	r18, 2
 c5c:	16 c0       	rjmp	.+44     	; 0xc8a <fputc+0x46>
 c5e:	46 81       	ldd	r20, Z+6	; 0x06
 c60:	57 81       	ldd	r21, Z+7	; 0x07
 c62:	24 81       	ldd	r18, Z+4	; 0x04
 c64:	35 81       	ldd	r19, Z+5	; 0x05
 c66:	42 17       	cp	r20, r18
 c68:	53 07       	cpc	r21, r19
 c6a:	44 f4       	brge	.+16     	; 0xc7c <fputc+0x38>
 c6c:	a0 81       	ld	r26, Z
 c6e:	b1 81       	ldd	r27, Z+1	; 0x01
 c70:	9d 01       	movw	r18, r26
 c72:	2f 5f       	subi	r18, 0xFF	; 255
 c74:	3f 4f       	sbci	r19, 0xFF	; 255
 c76:	20 83       	st	Z, r18
 c78:	31 83       	std	Z+1, r19	; 0x01
 c7a:	8c 93       	st	X, r24
 c7c:	26 81       	ldd	r18, Z+6	; 0x06
 c7e:	37 81       	ldd	r19, Z+7	; 0x07
 c80:	2f 5f       	subi	r18, 0xFF	; 255
 c82:	3f 4f       	sbci	r19, 0xFF	; 255
 c84:	26 83       	std	Z+6, r18	; 0x06
 c86:	37 83       	std	Z+7, r19	; 0x07
 c88:	14 c0       	rjmp	.+40     	; 0xcb2 <fputc+0x6e>
 c8a:	8b 01       	movw	r16, r22
 c8c:	ec 01       	movw	r28, r24
 c8e:	fb 01       	movw	r30, r22
 c90:	00 84       	ldd	r0, Z+8	; 0x08
 c92:	f1 85       	ldd	r31, Z+9	; 0x09
 c94:	e0 2d       	mov	r30, r0
 c96:	09 95       	icall
 c98:	89 2b       	or	r24, r25
 c9a:	e1 f6       	brne	.-72     	; 0xc54 <fputc+0x10>
 c9c:	d8 01       	movw	r26, r16
 c9e:	16 96       	adiw	r26, 0x06	; 6
 ca0:	8d 91       	ld	r24, X+
 ca2:	9c 91       	ld	r25, X
 ca4:	17 97       	sbiw	r26, 0x07	; 7
 ca6:	01 96       	adiw	r24, 0x01	; 1
 ca8:	16 96       	adiw	r26, 0x06	; 6
 caa:	8d 93       	st	X+, r24
 cac:	9c 93       	st	X, r25
 cae:	17 97       	sbiw	r26, 0x07	; 7
 cb0:	ce 01       	movw	r24, r28
 cb2:	df 91       	pop	r29
 cb4:	cf 91       	pop	r28
 cb6:	1f 91       	pop	r17
 cb8:	0f 91       	pop	r16
 cba:	08 95       	ret

00000cbc <__ultoa_invert>:
 cbc:	fa 01       	movw	r30, r20
 cbe:	aa 27       	eor	r26, r26
 cc0:	28 30       	cpi	r18, 0x08	; 8
 cc2:	51 f1       	breq	.+84     	; 0xd18 <__ultoa_invert+0x5c>
 cc4:	20 31       	cpi	r18, 0x10	; 16
 cc6:	81 f1       	breq	.+96     	; 0xd28 <__ultoa_invert+0x6c>
 cc8:	e8 94       	clt
 cca:	6f 93       	push	r22
 ccc:	6e 7f       	andi	r22, 0xFE	; 254
 cce:	6e 5f       	subi	r22, 0xFE	; 254
 cd0:	7f 4f       	sbci	r23, 0xFF	; 255
 cd2:	8f 4f       	sbci	r24, 0xFF	; 255
 cd4:	9f 4f       	sbci	r25, 0xFF	; 255
 cd6:	af 4f       	sbci	r26, 0xFF	; 255
 cd8:	b1 e0       	ldi	r27, 0x01	; 1
 cda:	3e d0       	rcall	.+124    	; 0xd58 <__ultoa_invert+0x9c>
 cdc:	b4 e0       	ldi	r27, 0x04	; 4
 cde:	3c d0       	rcall	.+120    	; 0xd58 <__ultoa_invert+0x9c>
 ce0:	67 0f       	add	r22, r23
 ce2:	78 1f       	adc	r23, r24
 ce4:	89 1f       	adc	r24, r25
 ce6:	9a 1f       	adc	r25, r26
 ce8:	a1 1d       	adc	r26, r1
 cea:	68 0f       	add	r22, r24
 cec:	79 1f       	adc	r23, r25
 cee:	8a 1f       	adc	r24, r26
 cf0:	91 1d       	adc	r25, r1
 cf2:	a1 1d       	adc	r26, r1
 cf4:	6a 0f       	add	r22, r26
 cf6:	71 1d       	adc	r23, r1
 cf8:	81 1d       	adc	r24, r1
 cfa:	91 1d       	adc	r25, r1
 cfc:	a1 1d       	adc	r26, r1
 cfe:	20 d0       	rcall	.+64     	; 0xd40 <__ultoa_invert+0x84>
 d00:	09 f4       	brne	.+2      	; 0xd04 <__ultoa_invert+0x48>
 d02:	68 94       	set
 d04:	3f 91       	pop	r19
 d06:	2a e0       	ldi	r18, 0x0A	; 10
 d08:	26 9f       	mul	r18, r22
 d0a:	11 24       	eor	r1, r1
 d0c:	30 19       	sub	r19, r0
 d0e:	30 5d       	subi	r19, 0xD0	; 208
 d10:	31 93       	st	Z+, r19
 d12:	de f6       	brtc	.-74     	; 0xcca <__ultoa_invert+0xe>
 d14:	cf 01       	movw	r24, r30
 d16:	08 95       	ret
 d18:	46 2f       	mov	r20, r22
 d1a:	47 70       	andi	r20, 0x07	; 7
 d1c:	40 5d       	subi	r20, 0xD0	; 208
 d1e:	41 93       	st	Z+, r20
 d20:	b3 e0       	ldi	r27, 0x03	; 3
 d22:	0f d0       	rcall	.+30     	; 0xd42 <__ultoa_invert+0x86>
 d24:	c9 f7       	brne	.-14     	; 0xd18 <__ultoa_invert+0x5c>
 d26:	f6 cf       	rjmp	.-20     	; 0xd14 <__ultoa_invert+0x58>
 d28:	46 2f       	mov	r20, r22
 d2a:	4f 70       	andi	r20, 0x0F	; 15
 d2c:	40 5d       	subi	r20, 0xD0	; 208
 d2e:	4a 33       	cpi	r20, 0x3A	; 58
 d30:	18 f0       	brcs	.+6      	; 0xd38 <__ultoa_invert+0x7c>
 d32:	49 5d       	subi	r20, 0xD9	; 217
 d34:	31 fd       	sbrc	r19, 1
 d36:	40 52       	subi	r20, 0x20	; 32
 d38:	41 93       	st	Z+, r20
 d3a:	02 d0       	rcall	.+4      	; 0xd40 <__ultoa_invert+0x84>
 d3c:	a9 f7       	brne	.-22     	; 0xd28 <__ultoa_invert+0x6c>
 d3e:	ea cf       	rjmp	.-44     	; 0xd14 <__ultoa_invert+0x58>
 d40:	b4 e0       	ldi	r27, 0x04	; 4
 d42:	a6 95       	lsr	r26
 d44:	97 95       	ror	r25
 d46:	87 95       	ror	r24
 d48:	77 95       	ror	r23
 d4a:	67 95       	ror	r22
 d4c:	ba 95       	dec	r27
 d4e:	c9 f7       	brne	.-14     	; 0xd42 <__ultoa_invert+0x86>
 d50:	00 97       	sbiw	r24, 0x00	; 0
 d52:	61 05       	cpc	r22, r1
 d54:	71 05       	cpc	r23, r1
 d56:	08 95       	ret
 d58:	9b 01       	movw	r18, r22
 d5a:	ac 01       	movw	r20, r24
 d5c:	0a 2e       	mov	r0, r26
 d5e:	06 94       	lsr	r0
 d60:	57 95       	ror	r21
 d62:	47 95       	ror	r20
 d64:	37 95       	ror	r19
 d66:	27 95       	ror	r18
 d68:	ba 95       	dec	r27
 d6a:	c9 f7       	brne	.-14     	; 0xd5e <__ultoa_invert+0xa2>
 d6c:	62 0f       	add	r22, r18
 d6e:	73 1f       	adc	r23, r19
 d70:	84 1f       	adc	r24, r20
 d72:	95 1f       	adc	r25, r21
 d74:	a0 1d       	adc	r26, r0
 d76:	08 95       	ret

00000d78 <__prologue_saves__>:
 d78:	2f 92       	push	r2
 d7a:	3f 92       	push	r3
 d7c:	4f 92       	push	r4
 d7e:	5f 92       	push	r5
 d80:	6f 92       	push	r6
 d82:	7f 92       	push	r7
 d84:	8f 92       	push	r8
 d86:	9f 92       	push	r9
 d88:	af 92       	push	r10
 d8a:	bf 92       	push	r11
 d8c:	cf 92       	push	r12
 d8e:	df 92       	push	r13
 d90:	ef 92       	push	r14
 d92:	ff 92       	push	r15
 d94:	0f 93       	push	r16
 d96:	1f 93       	push	r17
 d98:	cf 93       	push	r28
 d9a:	df 93       	push	r29
 d9c:	cd b7       	in	r28, 0x3d	; 61
 d9e:	de b7       	in	r29, 0x3e	; 62
 da0:	ca 1b       	sub	r28, r26
 da2:	db 0b       	sbc	r29, r27
 da4:	cd bf       	out	0x3d, r28	; 61
 da6:	de bf       	out	0x3e, r29	; 62
 da8:	09 94       	ijmp

00000daa <__epilogue_restores__>:
 daa:	2a 88       	ldd	r2, Y+18	; 0x12
 dac:	39 88       	ldd	r3, Y+17	; 0x11
 dae:	48 88       	ldd	r4, Y+16	; 0x10
 db0:	5f 84       	ldd	r5, Y+15	; 0x0f
 db2:	6e 84       	ldd	r6, Y+14	; 0x0e
 db4:	7d 84       	ldd	r7, Y+13	; 0x0d
 db6:	8c 84       	ldd	r8, Y+12	; 0x0c
 db8:	9b 84       	ldd	r9, Y+11	; 0x0b
 dba:	aa 84       	ldd	r10, Y+10	; 0x0a
 dbc:	b9 84       	ldd	r11, Y+9	; 0x09
 dbe:	c8 84       	ldd	r12, Y+8	; 0x08
 dc0:	df 80       	ldd	r13, Y+7	; 0x07
 dc2:	ee 80       	ldd	r14, Y+6	; 0x06
 dc4:	fd 80       	ldd	r15, Y+5	; 0x05
 dc6:	0c 81       	ldd	r16, Y+4	; 0x04
 dc8:	1b 81       	ldd	r17, Y+3	; 0x03
 dca:	aa 81       	ldd	r26, Y+2	; 0x02
 dcc:	b9 81       	ldd	r27, Y+1	; 0x01
 dce:	ce 0f       	add	r28, r30
 dd0:	d1 1d       	adc	r29, r1
 dd2:	cd bf       	out	0x3d, r28	; 61
 dd4:	de bf       	out	0x3e, r29	; 62
 dd6:	ed 01       	movw	r28, r26
 dd8:	08 95       	ret

00000dda <_exit>:
 dda:	f8 94       	cli

00000ddc <__stop_program>:
 ddc:	ff cf       	rjmp	.-2      	; 0xddc <__stop_program>
