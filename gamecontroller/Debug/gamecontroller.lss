
gamecontroller.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000f08  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000028  00802000  00000f08  00000f9c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000006  00802028  00802028  00000fc4  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000fc4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001020  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000198  00000000  00000000  00001060  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000116f  00000000  00000000  000011f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000006d0  00000000  00000000  00002367  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000019b9  00000000  00000000  00002a37  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000003a4  00000000  00000000  000043f0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00011e00  00000000  00000000  00004794  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000005da  00000000  00000000  00016594  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000108  00000000  00000000  00016b6e  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  000058d5  00000000  00000000  00016c76  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 b6 00 	jmp	0x16c	; 0x16c <__ctors_end>
   4:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
   8:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
   c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  10:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  14:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  18:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  1c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  20:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  24:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  28:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  2c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  30:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  34:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  38:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  3c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  40:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  44:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  48:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  4c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  50:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  54:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  58:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  5c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  60:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  64:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  68:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  6c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  70:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  74:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  78:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  7c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  80:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  84:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  88:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  8c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  90:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  94:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  98:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  9c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  a0:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  a4:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  a8:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  ac:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  b0:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  b4:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  b8:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  bc:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  c0:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  c4:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  c8:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  cc:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  d0:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  d4:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  d8:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  dc:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  e0:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  e4:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  e8:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  ec:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  f0:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  f4:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  f8:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  fc:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 100:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 104:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 108:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 10c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 110:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 114:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 118:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 11c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 120:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 124:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 128:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 12c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 130:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 134:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 138:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 13c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 140:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 144:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 148:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 14c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 150:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 154:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 158:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 15c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 160:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 164:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 168:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>

0000016c <__ctors_end>:
 16c:	11 24       	eor	r1, r1
 16e:	1f be       	out	0x3f, r1	; 63
 170:	cf ef       	ldi	r28, 0xFF	; 255
 172:	cd bf       	out	0x3d, r28	; 61
 174:	d7 e2       	ldi	r29, 0x27	; 39
 176:	de bf       	out	0x3e, r29	; 62

00000178 <__do_copy_data>:
 178:	10 e2       	ldi	r17, 0x20	; 32
 17a:	a0 e0       	ldi	r26, 0x00	; 0
 17c:	b0 e2       	ldi	r27, 0x20	; 32
 17e:	e8 e0       	ldi	r30, 0x08	; 8
 180:	ff e0       	ldi	r31, 0x0F	; 15
 182:	02 c0       	rjmp	.+4      	; 0x188 <__do_copy_data+0x10>
 184:	05 90       	lpm	r0, Z+
 186:	0d 92       	st	X+, r0
 188:	a8 32       	cpi	r26, 0x28	; 40
 18a:	b1 07       	cpc	r27, r17
 18c:	d9 f7       	brne	.-10     	; 0x184 <__do_copy_data+0xc>

0000018e <__do_clear_bss>:
 18e:	20 e2       	ldi	r18, 0x20	; 32
 190:	a8 e2       	ldi	r26, 0x28	; 40
 192:	b0 e2       	ldi	r27, 0x20	; 32
 194:	01 c0       	rjmp	.+2      	; 0x198 <.do_clear_bss_start>

00000196 <.do_clear_bss_loop>:
 196:	1d 92       	st	X+, r1

00000198 <.do_clear_bss_start>:
 198:	ae 32       	cpi	r26, 0x2E	; 46
 19a:	b2 07       	cpc	r27, r18
 19c:	e1 f7       	brne	.-8      	; 0x196 <.do_clear_bss_loop>
 19e:	0e 94 fd 00 	call	0x1fa	; 0x1fa <main>
 1a2:	0c 94 82 07 	jmp	0xf04	; 0xf04 <_exit>

000001a6 <__bad_interrupt>:
 1a6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001aa <AccInit>:
#include "acc.h"



void AccInit(void)
{
 1aa:	cf 93       	push	r28
 1ac:	df 93       	push	r29
 1ae:	cd b7       	in	r28, 0x3d	; 61
 1b0:	de b7       	in	r29, 0x3e	; 62

	
}
 1b2:	00 00       	nop
 1b4:	df 91       	pop	r29
 1b6:	cf 91       	pop	r28
 1b8:	08 95       	ret

000001ba <AnalogInit>:
#include "Analog.h"
#include <avr/io.h>

void AnalogInit(void)
{
 1ba:	cf 93       	push	r28
 1bc:	df 93       	push	r29
 1be:	cd b7       	in	r28, 0x3d	; 61
 1c0:	de b7       	in	r29, 0x3e	; 62

}
 1c2:	00 00       	nop
 1c4:	df 91       	pop	r29
 1c6:	cf 91       	pop	r28
 1c8:	08 95       	ret

000001ca <ClockInit>:
#pragma GCC push_options
#pragma GCC optimize ("O2") //This function must be optimized to avoid too long time interval betwee CCP write and CLK.CTRL write (4 CLK CYC max)

void ClockInit(void)
{
	OSC.XOSCCTRL=0b11001011; //Clock<=16MHz	
 1ca:	8b ec       	ldi	r24, 0xCB	; 203
 1cc:	80 93 52 00 	sts	0x0052, r24	; 0x800052 <__TEXT_REGION_LENGTH__+0x700052>
	OSC.CTRL=0b01000; //Enable oscillator	
 1d0:	88 e0       	ldi	r24, 0x08	; 8
 1d2:	80 93 50 00 	sts	0x0050, r24	; 0x800050 <__TEXT_REGION_LENGTH__+0x700050>
	while (!(OSC.STATUS&0b1000)); //Wait until XTAL osc is ready
 1d6:	80 91 51 00 	lds	r24, 0x0051	; 0x800051 <__TEXT_REGION_LENGTH__+0x700051>
 1da:	83 ff       	sbrs	r24, 3
 1dc:	fc cf       	rjmp	.-8      	; 0x1d6 <ClockInit+0xc>
	
	//Select XTAL osc as system CLK source
	CCP=0xd8;
 1de:	88 ed       	ldi	r24, 0xD8	; 216
 1e0:	84 bf       	out	0x34, r24	; 52
    CLK.CTRL=0b0011;
 1e2:	83 e0       	ldi	r24, 0x03	; 3
 1e4:	80 93 40 00 	sts	0x0040, r24	; 0x800040 <__TEXT_REGION_LENGTH__+0x700040>
 1e8:	08 95       	ret

000001ea <EncoderInit>:
#include <util/delay.h>
#include <stdio.h>
#include "encoder.h"

void EncoderInit(void)
{
 1ea:	cf 93       	push	r28
 1ec:	df 93       	push	r29
 1ee:	cd b7       	in	r28, 0x3d	; 61
 1f0:	de b7       	in	r29, 0x3e	; 62

}
 1f2:	00 00       	nop
 1f4:	df 91       	pop	r29
 1f6:	cf 91       	pop	r28
 1f8:	08 95       	ret

000001fa <main>:
	{
		//The variable text had the same address throughout the execution of the program.
		sprintf(text[a],"Counter:%d\r",a);
		puts(text[a]);
	}
}
 1fa:	cf 93       	push	r28
 1fc:	df 93       	push	r29
 1fe:	cd b7       	in	r28, 0x3d	; 61
 200:	de b7       	in	r29, 0x3e	; 62
 202:	2e 97       	sbiw	r28, 0x0e	; 14
 204:	cd bf       	out	0x3d, r28	; 61
 206:	de bf       	out	0x3e, r29	; 62
 208:	0e 94 e5 00 	call	0x1ca	; 0x1ca <ClockInit>
 20c:	0e 94 de 02 	call	0x5bc	; 0x5bc <USARTInit>
 210:	0e 94 dd 00 	call	0x1ba	; 0x1ba <AnalogInit>
 214:	0e 94 d5 00 	call	0x1aa	; 0x1aa <AccInit>
 218:	0e 94 48 02 	call	0x490	; 0x490 <LEDInit>
 21c:	0e 94 95 02 	call	0x52a	; 0x52a <SwitchInit>
 220:	0e 94 f5 00 	call	0x1ea	; 0x1ea <EncoderInit>
 224:	0e 94 8d 02 	call	0x51a	; 0x51a <SpeakerInit>
 228:	80 ea       	ldi	r24, 0xA0	; 160
 22a:	90 e0       	ldi	r25, 0x00	; 0
 22c:	20 ea       	ldi	r18, 0xA0	; 160
 22e:	30 e0       	ldi	r19, 0x00	; 0
 230:	f9 01       	movw	r30, r18
 232:	22 81       	ldd	r18, Z+2	; 0x02
 234:	27 60       	ori	r18, 0x07	; 7
 236:	fc 01       	movw	r30, r24
 238:	22 83       	std	Z+2, r18	; 0x02
 23a:	8f e3       	ldi	r24, 0x3F	; 63
 23c:	90 e0       	ldi	r25, 0x00	; 0
 23e:	2f e3       	ldi	r18, 0x3F	; 63
 240:	30 e0       	ldi	r19, 0x00	; 0
 242:	f9 01       	movw	r30, r18
 244:	20 81       	ld	r18, Z
 246:	20 68       	ori	r18, 0x80	; 128
 248:	fc 01       	movw	r30, r24
 24a:	20 83       	st	Z, r18
 24c:	80 e0       	ldi	r24, 0x00	; 0
 24e:	90 e0       	ldi	r25, 0x00	; 0
 250:	aa ef       	ldi	r26, 0xFA	; 250
 252:	b3 e4       	ldi	r27, 0x43	; 67
 254:	89 83       	std	Y+1, r24	; 0x01
 256:	9a 83       	std	Y+2, r25	; 0x02
 258:	ab 83       	std	Y+3, r26	; 0x03
 25a:	bc 83       	std	Y+4, r27	; 0x04
 25c:	20 e0       	ldi	r18, 0x00	; 0
 25e:	30 e0       	ldi	r19, 0x00	; 0
 260:	4a e7       	ldi	r20, 0x7A	; 122
 262:	55 e4       	ldi	r21, 0x45	; 69
 264:	69 81       	ldd	r22, Y+1	; 0x01
 266:	7a 81       	ldd	r23, Y+2	; 0x02
 268:	8b 81       	ldd	r24, Y+3	; 0x03
 26a:	9c 81       	ldd	r25, Y+4	; 0x04
 26c:	0e 94 d9 03 	call	0x7b2	; 0x7b2 <__mulsf3>
 270:	dc 01       	movw	r26, r24
 272:	cb 01       	movw	r24, r22
 274:	8d 83       	std	Y+5, r24	; 0x05
 276:	9e 83       	std	Y+6, r25	; 0x06
 278:	af 83       	std	Y+7, r26	; 0x07
 27a:	b8 87       	std	Y+8, r27	; 0x08
 27c:	20 e0       	ldi	r18, 0x00	; 0
 27e:	30 e0       	ldi	r19, 0x00	; 0
 280:	40 e8       	ldi	r20, 0x80	; 128
 282:	5f e3       	ldi	r21, 0x3F	; 63
 284:	6d 81       	ldd	r22, Y+5	; 0x05
 286:	7e 81       	ldd	r23, Y+6	; 0x06
 288:	8f 81       	ldd	r24, Y+7	; 0x07
 28a:	98 85       	ldd	r25, Y+8	; 0x08
 28c:	0e 94 53 03 	call	0x6a6	; 0x6a6 <__cmpsf2>
 290:	88 23       	and	r24, r24
 292:	2c f4       	brge	.+10     	; 0x29e <main+0xa4>
 294:	81 e0       	ldi	r24, 0x01	; 1
 296:	90 e0       	ldi	r25, 0x00	; 0
 298:	89 87       	std	Y+9, r24	; 0x09
 29a:	9a 87       	std	Y+10, r25	; 0x0a
 29c:	3f c0       	rjmp	.+126    	; 0x31c <main+0x122>
 29e:	20 e0       	ldi	r18, 0x00	; 0
 2a0:	3f ef       	ldi	r19, 0xFF	; 255
 2a2:	4f e7       	ldi	r20, 0x7F	; 127
 2a4:	57 e4       	ldi	r21, 0x47	; 71
 2a6:	6d 81       	ldd	r22, Y+5	; 0x05
 2a8:	7e 81       	ldd	r23, Y+6	; 0x06
 2aa:	8f 81       	ldd	r24, Y+7	; 0x07
 2ac:	98 85       	ldd	r25, Y+8	; 0x08
 2ae:	0e 94 d4 03 	call	0x7a8	; 0x7a8 <__gesf2>
 2b2:	18 16       	cp	r1, r24
 2b4:	4c f5       	brge	.+82     	; 0x308 <main+0x10e>
 2b6:	20 e0       	ldi	r18, 0x00	; 0
 2b8:	30 e0       	ldi	r19, 0x00	; 0
 2ba:	40 e2       	ldi	r20, 0x20	; 32
 2bc:	51 e4       	ldi	r21, 0x41	; 65
 2be:	69 81       	ldd	r22, Y+1	; 0x01
 2c0:	7a 81       	ldd	r23, Y+2	; 0x02
 2c2:	8b 81       	ldd	r24, Y+3	; 0x03
 2c4:	9c 81       	ldd	r25, Y+4	; 0x04
 2c6:	0e 94 d9 03 	call	0x7b2	; 0x7b2 <__mulsf3>
 2ca:	dc 01       	movw	r26, r24
 2cc:	cb 01       	movw	r24, r22
 2ce:	bc 01       	movw	r22, r24
 2d0:	cd 01       	movw	r24, r26
 2d2:	0e 94 58 03 	call	0x6b0	; 0x6b0 <__fixunssfsi>
 2d6:	dc 01       	movw	r26, r24
 2d8:	cb 01       	movw	r24, r22
 2da:	89 87       	std	Y+9, r24	; 0x09
 2dc:	9a 87       	std	Y+10, r25	; 0x0a
 2de:	0f c0       	rjmp	.+30     	; 0x2fe <main+0x104>
 2e0:	80 e9       	ldi	r24, 0x90	; 144
 2e2:	91 e0       	ldi	r25, 0x01	; 1
 2e4:	8b 87       	std	Y+11, r24	; 0x0b
 2e6:	9c 87       	std	Y+12, r25	; 0x0c
 2e8:	8b 85       	ldd	r24, Y+11	; 0x0b
 2ea:	9c 85       	ldd	r25, Y+12	; 0x0c
 2ec:	01 97       	sbiw	r24, 0x01	; 1
 2ee:	f1 f7       	brne	.-4      	; 0x2ec <main+0xf2>
 2f0:	8b 87       	std	Y+11, r24	; 0x0b
 2f2:	9c 87       	std	Y+12, r25	; 0x0c
 2f4:	89 85       	ldd	r24, Y+9	; 0x09
 2f6:	9a 85       	ldd	r25, Y+10	; 0x0a
 2f8:	01 97       	sbiw	r24, 0x01	; 1
 2fa:	89 87       	std	Y+9, r24	; 0x09
 2fc:	9a 87       	std	Y+10, r25	; 0x0a
 2fe:	89 85       	ldd	r24, Y+9	; 0x09
 300:	9a 85       	ldd	r25, Y+10	; 0x0a
 302:	89 2b       	or	r24, r25
 304:	69 f7       	brne	.-38     	; 0x2e0 <main+0xe6>
 306:	14 c0       	rjmp	.+40     	; 0x330 <main+0x136>
 308:	6d 81       	ldd	r22, Y+5	; 0x05
 30a:	7e 81       	ldd	r23, Y+6	; 0x06
 30c:	8f 81       	ldd	r24, Y+7	; 0x07
 30e:	98 85       	ldd	r25, Y+8	; 0x08
 310:	0e 94 58 03 	call	0x6b0	; 0x6b0 <__fixunssfsi>
 314:	dc 01       	movw	r26, r24
 316:	cb 01       	movw	r24, r22
 318:	89 87       	std	Y+9, r24	; 0x09
 31a:	9a 87       	std	Y+10, r25	; 0x0a
 31c:	89 85       	ldd	r24, Y+9	; 0x09
 31e:	9a 85       	ldd	r25, Y+10	; 0x0a
 320:	8d 87       	std	Y+13, r24	; 0x0d
 322:	9e 87       	std	Y+14, r25	; 0x0e
 324:	8d 85       	ldd	r24, Y+13	; 0x0d
 326:	9e 85       	ldd	r25, Y+14	; 0x0e
 328:	01 97       	sbiw	r24, 0x01	; 1
 32a:	f1 f7       	brne	.-4      	; 0x328 <main+0x12e>
 32c:	8d 87       	std	Y+13, r24	; 0x0d
 32e:	9e 87       	std	Y+14, r25	; 0x0e
 330:	0e 94 9b 01 	call	0x336	; 0x336 <LightLoop>
 334:	ff cf       	rjmp	.-2      	; 0x334 <main+0x13a>

00000336 <LightLoop>:

void LightLoop(void)
{
 336:	cf 93       	push	r28
 338:	df 93       	push	r29
 33a:	cd b7       	in	r28, 0x3d	; 61
 33c:	de b7       	in	r29, 0x3e	; 62
 33e:	68 97       	sbiw	r28, 0x18	; 24
 340:	cd bf       	out	0x3d, r28	; 61
 342:	de bf       	out	0x3e, r29	; 62
	char bitmask = 0b00000001;
 344:	81 e0       	ldi	r24, 0x01	; 1
 346:	89 83       	std	Y+1, r24	; 0x01
			
	while (1)
	{
		LEDSet(bitmask);
 348:	89 81       	ldd	r24, Y+1	; 0x01
 34a:	0e 94 6d 02 	call	0x4da	; 0x4da <LEDSet>
		if(bitmask == 0b00001000){
 34e:	89 81       	ldd	r24, Y+1	; 0x01
 350:	88 30       	cpi	r24, 0x08	; 8
 352:	31 f4       	brne	.+12     	; 0x360 <LightLoop+0x2a>
			bitmask >>= 3; //terug eerste led
 354:	89 81       	ldd	r24, Y+1	; 0x01
 356:	86 95       	lsr	r24
 358:	86 95       	lsr	r24
 35a:	86 95       	lsr	r24
 35c:	89 83       	std	Y+1, r24	; 0x01
 35e:	03 c0       	rjmp	.+6      	; 0x366 <LightLoop+0x30>
		} else {
			bitmask <<= 1; //bitshift naar volgende led
 360:	89 81       	ldd	r24, Y+1	; 0x01
 362:	88 0f       	add	r24, r24
 364:	89 83       	std	Y+1, r24	; 0x01
 366:	80 e0       	ldi	r24, 0x00	; 0
 368:	90 e0       	ldi	r25, 0x00	; 0
 36a:	aa ef       	ldi	r26, 0xFA	; 250
 36c:	b3 e4       	ldi	r27, 0x43	; 67
 36e:	8b 83       	std	Y+3, r24	; 0x03
 370:	9c 83       	std	Y+4, r25	; 0x04
 372:	ad 83       	std	Y+5, r26	; 0x05
 374:	be 83       	std	Y+6, r27	; 0x06

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
 376:	20 e0       	ldi	r18, 0x00	; 0
 378:	30 e0       	ldi	r19, 0x00	; 0
 37a:	4a e7       	ldi	r20, 0x7A	; 122
 37c:	55 e4       	ldi	r21, 0x45	; 69
 37e:	6b 81       	ldd	r22, Y+3	; 0x03
 380:	7c 81       	ldd	r23, Y+4	; 0x04
 382:	8d 81       	ldd	r24, Y+5	; 0x05
 384:	9e 81       	ldd	r25, Y+6	; 0x06
 386:	0e 94 d9 03 	call	0x7b2	; 0x7b2 <__mulsf3>
 38a:	dc 01       	movw	r26, r24
 38c:	cb 01       	movw	r24, r22
 38e:	8f 83       	std	Y+7, r24	; 0x07
 390:	98 87       	std	Y+8, r25	; 0x08
 392:	a9 87       	std	Y+9, r26	; 0x09
 394:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
 396:	20 e0       	ldi	r18, 0x00	; 0
 398:	30 e0       	ldi	r19, 0x00	; 0
 39a:	40 e8       	ldi	r20, 0x80	; 128
 39c:	5f e3       	ldi	r21, 0x3F	; 63
 39e:	6f 81       	ldd	r22, Y+7	; 0x07
 3a0:	78 85       	ldd	r23, Y+8	; 0x08
 3a2:	89 85       	ldd	r24, Y+9	; 0x09
 3a4:	9a 85       	ldd	r25, Y+10	; 0x0a
 3a6:	0e 94 53 03 	call	0x6a6	; 0x6a6 <__cmpsf2>
 3aa:	88 23       	and	r24, r24
 3ac:	2c f4       	brge	.+10     	; 0x3b8 <LightLoop+0x82>
		__ticks = 1;
 3ae:	81 e0       	ldi	r24, 0x01	; 1
 3b0:	90 e0       	ldi	r25, 0x00	; 0
 3b2:	8b 87       	std	Y+11, r24	; 0x0b
 3b4:	9c 87       	std	Y+12, r25	; 0x0c
 3b6:	3f c0       	rjmp	.+126    	; 0x436 <__FUSE_REGION_LENGTH__+0x36>
	else if (__tmp > 65535)
 3b8:	20 e0       	ldi	r18, 0x00	; 0
 3ba:	3f ef       	ldi	r19, 0xFF	; 255
 3bc:	4f e7       	ldi	r20, 0x7F	; 127
 3be:	57 e4       	ldi	r21, 0x47	; 71
 3c0:	6f 81       	ldd	r22, Y+7	; 0x07
 3c2:	78 85       	ldd	r23, Y+8	; 0x08
 3c4:	89 85       	ldd	r24, Y+9	; 0x09
 3c6:	9a 85       	ldd	r25, Y+10	; 0x0a
 3c8:	0e 94 d4 03 	call	0x7a8	; 0x7a8 <__gesf2>
 3cc:	18 16       	cp	r1, r24
 3ce:	4c f5       	brge	.+82     	; 0x422 <__FUSE_REGION_LENGTH__+0x22>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 3d0:	20 e0       	ldi	r18, 0x00	; 0
 3d2:	30 e0       	ldi	r19, 0x00	; 0
 3d4:	40 e2       	ldi	r20, 0x20	; 32
 3d6:	51 e4       	ldi	r21, 0x41	; 65
 3d8:	6b 81       	ldd	r22, Y+3	; 0x03
 3da:	7c 81       	ldd	r23, Y+4	; 0x04
 3dc:	8d 81       	ldd	r24, Y+5	; 0x05
 3de:	9e 81       	ldd	r25, Y+6	; 0x06
 3e0:	0e 94 d9 03 	call	0x7b2	; 0x7b2 <__mulsf3>
 3e4:	dc 01       	movw	r26, r24
 3e6:	cb 01       	movw	r24, r22
 3e8:	bc 01       	movw	r22, r24
 3ea:	cd 01       	movw	r24, r26
 3ec:	0e 94 58 03 	call	0x6b0	; 0x6b0 <__fixunssfsi>
 3f0:	dc 01       	movw	r26, r24
 3f2:	cb 01       	movw	r24, r22
 3f4:	8b 87       	std	Y+11, r24	; 0x0b
 3f6:	9c 87       	std	Y+12, r25	; 0x0c
 3f8:	0f c0       	rjmp	.+30     	; 0x418 <__FUSE_REGION_LENGTH__+0x18>
 3fa:	80 e9       	ldi	r24, 0x90	; 144
 3fc:	91 e0       	ldi	r25, 0x01	; 1
 3fe:	8d 87       	std	Y+13, r24	; 0x0d
 400:	9e 87       	std	Y+14, r25	; 0x0e
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
 402:	8d 85       	ldd	r24, Y+13	; 0x0d
 404:	9e 85       	ldd	r25, Y+14	; 0x0e
 406:	01 97       	sbiw	r24, 0x01	; 1
 408:	f1 f7       	brne	.-4      	; 0x406 <__FUSE_REGION_LENGTH__+0x6>
 40a:	8d 87       	std	Y+13, r24	; 0x0d
 40c:	9e 87       	std	Y+14, r25	; 0x0e
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 40e:	8b 85       	ldd	r24, Y+11	; 0x0b
 410:	9c 85       	ldd	r25, Y+12	; 0x0c
 412:	01 97       	sbiw	r24, 0x01	; 1
 414:	8b 87       	std	Y+11, r24	; 0x0b
 416:	9c 87       	std	Y+12, r25	; 0x0c
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 418:	8b 85       	ldd	r24, Y+11	; 0x0b
 41a:	9c 85       	ldd	r25, Y+12	; 0x0c
 41c:	89 2b       	or	r24, r25
 41e:	69 f7       	brne	.-38     	; 0x3fa <LightLoop+0xc4>
 420:	14 c0       	rjmp	.+40     	; 0x44a <__FUSE_REGION_LENGTH__+0x4a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 422:	6f 81       	ldd	r22, Y+7	; 0x07
 424:	78 85       	ldd	r23, Y+8	; 0x08
 426:	89 85       	ldd	r24, Y+9	; 0x09
 428:	9a 85       	ldd	r25, Y+10	; 0x0a
 42a:	0e 94 58 03 	call	0x6b0	; 0x6b0 <__fixunssfsi>
 42e:	dc 01       	movw	r26, r24
 430:	cb 01       	movw	r24, r22
 432:	8b 87       	std	Y+11, r24	; 0x0b
 434:	9c 87       	std	Y+12, r25	; 0x0c
 436:	8b 85       	ldd	r24, Y+11	; 0x0b
 438:	9c 85       	ldd	r25, Y+12	; 0x0c
 43a:	8f 87       	std	Y+15, r24	; 0x0f
 43c:	98 8b       	std	Y+16, r25	; 0x10
 43e:	8f 85       	ldd	r24, Y+15	; 0x0f
 440:	98 89       	ldd	r25, Y+16	; 0x10
 442:	01 97       	sbiw	r24, 0x01	; 1
 444:	f1 f7       	brne	.-4      	; 0x442 <__FUSE_REGION_LENGTH__+0x42>
 446:	8f 87       	std	Y+15, r24	; 0x0f
 448:	98 8b       	std	Y+16, r25	; 0x10
		
		//GPIO INPUT of switch:
		//printf("$SWITCH %d\r\n", SwitchGet());
		
		char switch_out[8];
		char test = SwitchGet();
 44a:	0e 94 bf 02 	call	0x57e	; 0x57e <SwitchGet>
 44e:	8a 83       	std	Y+2, r24	; 0x02
		
		sprintf(switch_out, "$SWITCH %d\r\n", SwitchGet());
 450:	0e 94 bf 02 	call	0x57e	; 0x57e <SwitchGet>
 454:	88 2f       	mov	r24, r24
 456:	90 e0       	ldi	r25, 0x00	; 0
 458:	29 2f       	mov	r18, r25
 45a:	2f 93       	push	r18
 45c:	8f 93       	push	r24
 45e:	8a e1       	ldi	r24, 0x1A	; 26
 460:	90 e2       	ldi	r25, 0x20	; 32
 462:	89 2f       	mov	r24, r25
 464:	8f 93       	push	r24
 466:	8a e1       	ldi	r24, 0x1A	; 26
 468:	90 e2       	ldi	r25, 0x20	; 32
 46a:	8f 93       	push	r24
 46c:	ce 01       	movw	r24, r28
 46e:	41 96       	adiw	r24, 0x11	; 17
 470:	29 2f       	mov	r18, r25
 472:	2f 93       	push	r18
 474:	8f 93       	push	r24
 476:	0e 94 9e 04 	call	0x93c	; 0x93c <sprintf>
 47a:	0f 90       	pop	r0
 47c:	0f 90       	pop	r0
 47e:	0f 90       	pop	r0
 480:	0f 90       	pop	r0
 482:	0f 90       	pop	r0
 484:	0f 90       	pop	r0
		puts(0x000002c0);
 486:	80 ec       	ldi	r24, 0xC0	; 192
 488:	92 e0       	ldi	r25, 0x02	; 2
 48a:	0e 94 6e 04 	call	0x8dc	; 0x8dc <puts>
		//puts(switch_out);
	};
 48e:	5c cf       	rjmp	.-328    	; 0x348 <LightLoop+0x12>

00000490 <LEDInit>:
#include "LED.h"
#include <avr/io.h>

void LEDInit(void)
{
 490:	cf 93       	push	r28
 492:	df 93       	push	r29
 494:	cd b7       	in	r28, 0x3d	; 61
 496:	de b7       	in	r29, 0x3e	; 62
	PORTE.DIRSET |= 0b00001111; //dir = 1 --> output
 498:	80 e8       	ldi	r24, 0x80	; 128
 49a:	96 e0       	ldi	r25, 0x06	; 6
 49c:	20 e8       	ldi	r18, 0x80	; 128
 49e:	36 e0       	ldi	r19, 0x06	; 6
 4a0:	f9 01       	movw	r30, r18
 4a2:	21 81       	ldd	r18, Z+1	; 0x01
 4a4:	2f 60       	ori	r18, 0x0F	; 15
 4a6:	fc 01       	movw	r30, r24
 4a8:	21 83       	std	Z+1, r18	; 0x01
	PORTE.PIN0CTRL=PORT_OPC_PULLUP_gc; //enkel belangrijk on input
 4aa:	80 e8       	ldi	r24, 0x80	; 128
 4ac:	96 e0       	ldi	r25, 0x06	; 6
 4ae:	28 e1       	ldi	r18, 0x18	; 24
 4b0:	fc 01       	movw	r30, r24
 4b2:	20 8b       	std	Z+16, r18	; 0x10
	PORTE.PIN1CTRL=PORT_OPC_PULLUP_gc;
 4b4:	80 e8       	ldi	r24, 0x80	; 128
 4b6:	96 e0       	ldi	r25, 0x06	; 6
 4b8:	28 e1       	ldi	r18, 0x18	; 24
 4ba:	fc 01       	movw	r30, r24
 4bc:	21 8b       	std	Z+17, r18	; 0x11
	PORTE.PIN2CTRL=PORT_OPC_PULLUP_gc;
 4be:	80 e8       	ldi	r24, 0x80	; 128
 4c0:	96 e0       	ldi	r25, 0x06	; 6
 4c2:	28 e1       	ldi	r18, 0x18	; 24
 4c4:	fc 01       	movw	r30, r24
 4c6:	22 8b       	std	Z+18, r18	; 0x12
	PORTE.PIN3CTRL=PORT_OPC_PULLUP_gc;
 4c8:	80 e8       	ldi	r24, 0x80	; 128
 4ca:	96 e0       	ldi	r25, 0x06	; 6
 4cc:	28 e1       	ldi	r18, 0x18	; 24
 4ce:	fc 01       	movw	r30, r24
 4d0:	23 8b       	std	Z+19, r18	; 0x13
}
 4d2:	00 00       	nop
 4d4:	df 91       	pop	r29
 4d6:	cf 91       	pop	r28
 4d8:	08 95       	ret

000004da <LEDSet>:

void LEDSet(char bitmask)
{
 4da:	cf 93       	push	r28
 4dc:	df 93       	push	r29
 4de:	1f 92       	push	r1
 4e0:	cd b7       	in	r28, 0x3d	; 61
 4e2:	de b7       	in	r29, 0x3e	; 62
 4e4:	89 83       	std	Y+1, r24	; 0x01
	PORTE.OUT &= 0b11110000; //4 ledbits op 0, rest blijft ongewijzigd
 4e6:	80 e8       	ldi	r24, 0x80	; 128
 4e8:	96 e0       	ldi	r25, 0x06	; 6
 4ea:	20 e8       	ldi	r18, 0x80	; 128
 4ec:	36 e0       	ldi	r19, 0x06	; 6
 4ee:	f9 01       	movw	r30, r18
 4f0:	24 81       	ldd	r18, Z+4	; 0x04
 4f2:	20 7f       	andi	r18, 0xF0	; 240
 4f4:	fc 01       	movw	r30, r24
 4f6:	24 83       	std	Z+4, r18	; 0x04
	PORTE.OUT |= ~bitmask; //juiste ledbit wordt op 1 gezet
 4f8:	80 e8       	ldi	r24, 0x80	; 128
 4fa:	96 e0       	ldi	r25, 0x06	; 6
 4fc:	20 e8       	ldi	r18, 0x80	; 128
 4fe:	36 e0       	ldi	r19, 0x06	; 6
 500:	f9 01       	movw	r30, r18
 502:	24 81       	ldd	r18, Z+4	; 0x04
 504:	32 2f       	mov	r19, r18
 506:	29 81       	ldd	r18, Y+1	; 0x01
 508:	20 95       	com	r18
 50a:	23 2b       	or	r18, r19
 50c:	fc 01       	movw	r30, r24
 50e:	24 83       	std	Z+4, r18	; 0x04
 510:	00 00       	nop
 512:	0f 90       	pop	r0
 514:	df 91       	pop	r29
 516:	cf 91       	pop	r28
 518:	08 95       	ret

0000051a <SpeakerInit>:
#include <avr/io.h>
#include <avr/interrupt.h>
#include "speaker.h"

void SpeakerInit(void)
{
 51a:	cf 93       	push	r28
 51c:	df 93       	push	r29
 51e:	cd b7       	in	r28, 0x3d	; 61
 520:	de b7       	in	r29, 0x3e	; 62
		//TCC1.CTRLB=
		//TCC1.CTRLC=
		//TCC1.CTRLD=
		//TCC1.CTRLE=
		
}
 522:	00 00       	nop
 524:	df 91       	pop	r29
 526:	cf 91       	pop	r28
 528:	08 95       	ret

0000052a <SwitchInit>:
#include "switch.h"
#include <avr/io.h>

void SwitchInit(void)
{
 52a:	cf 93       	push	r28
 52c:	df 93       	push	r29
 52e:	cd b7       	in	r28, 0x3d	; 61
 530:	de b7       	in	r29, 0x3e	; 62
	
	//This register sets the data direction for the individual pins of the port. If DIRn is written to one,
	//pin n is configured as an output pin. If DIRn is written to zero, pin n is configured as an input pin
	//PORTD.DIR &= 0b00001110; 
	PORTD.DIRSET |= 0b00001110; 
 532:	80 e6       	ldi	r24, 0x60	; 96
 534:	96 e0       	ldi	r25, 0x06	; 6
 536:	20 e6       	ldi	r18, 0x60	; 96
 538:	36 e0       	ldi	r19, 0x06	; 6
 53a:	f9 01       	movw	r30, r18
 53c:	21 81       	ldd	r18, Z+1	; 0x01
 53e:	2e 60       	ori	r18, 0x0E	; 14
 540:	fc 01       	movw	r30, r24
 542:	21 83       	std	Z+1, r18	; 0x01

	//11.13.15 p124
	PORTD.PIN0CTRL= 0b01011001;		//Center
 544:	80 e6       	ldi	r24, 0x60	; 96
 546:	96 e0       	ldi	r25, 0x06	; 6
 548:	29 e5       	ldi	r18, 0x59	; 89
 54a:	fc 01       	movw	r30, r24
 54c:	20 8b       	std	Z+16, r18	; 0x10
	PORTD.PIN4CTRL= 0b01011001;		//Right
 54e:	80 e6       	ldi	r24, 0x60	; 96
 550:	96 e0       	ldi	r25, 0x06	; 6
 552:	29 e5       	ldi	r18, 0x59	; 89
 554:	fc 01       	movw	r30, r24
 556:	24 8b       	std	Z+20, r18	; 0x14
	PORTD.PIN5CTRL= 0b01011001;		//Down
 558:	80 e6       	ldi	r24, 0x60	; 96
 55a:	96 e0       	ldi	r25, 0x06	; 6
 55c:	29 e5       	ldi	r18, 0x59	; 89
 55e:	fc 01       	movw	r30, r24
 560:	25 8b       	std	Z+21, r18	; 0x15
	PORTD.PIN6CTRL= 0b01011001;		//Left
 562:	80 e6       	ldi	r24, 0x60	; 96
 564:	96 e0       	ldi	r25, 0x06	; 6
 566:	29 e5       	ldi	r18, 0x59	; 89
 568:	fc 01       	movw	r30, r24
 56a:	26 8b       	std	Z+22, r18	; 0x16
	PORTD.PIN7CTRL= 0b01011001;		//Up
 56c:	80 e6       	ldi	r24, 0x60	; 96
 56e:	96 e0       	ldi	r25, 0x06	; 6
 570:	29 e5       	ldi	r18, 0x59	; 89
 572:	fc 01       	movw	r30, r24
 574:	27 8b       	std	Z+23, r18	; 0x17
}
 576:	00 00       	nop
 578:	df 91       	pop	r29
 57a:	cf 91       	pop	r28
 57c:	08 95       	ret

0000057e <SwitchGet>:


char SwitchGet(void)
{
 57e:	cf 93       	push	r28
 580:	df 93       	push	r29
 582:	1f 92       	push	r1
 584:	cd b7       	in	r28, 0x3d	; 61
 586:	de b7       	in	r29, 0x3e	; 62
	char input = PORTD.IN; 
 588:	80 e6       	ldi	r24, 0x60	; 96
 58a:	96 e0       	ldi	r25, 0x06	; 6
 58c:	fc 01       	movw	r30, r24
 58e:	80 85       	ldd	r24, Z+8	; 0x08
 590:	89 83       	std	Y+1, r24	; 0x01
	//PORTDIN looks like 11110001 'if everything would be pressed', the wanted format for ex.: xxx11111
	//To achieve this bitshift first 4 bits , 3 to the right and the bit on the right stays at the same place
	input = ((input & 0b11110000) >> 3) | (input & 0b00000001);
 592:	89 81       	ldd	r24, Y+1	; 0x01
 594:	88 2f       	mov	r24, r24
 596:	90 e0       	ldi	r25, 0x00	; 0
 598:	80 7f       	andi	r24, 0xF0	; 240
 59a:	99 27       	eor	r25, r25
 59c:	95 95       	asr	r25
 59e:	87 95       	ror	r24
 5a0:	95 95       	asr	r25
 5a2:	87 95       	ror	r24
 5a4:	95 95       	asr	r25
 5a6:	87 95       	ror	r24
 5a8:	98 2f       	mov	r25, r24
 5aa:	89 81       	ldd	r24, Y+1	; 0x01
 5ac:	81 70       	andi	r24, 0x01	; 1
 5ae:	89 2b       	or	r24, r25
 5b0:	89 83       	std	Y+1, r24	; 0x01
	return input;
 5b2:	89 81       	ldd	r24, Y+1	; 0x01
}
 5b4:	0f 90       	pop	r0
 5b6:	df 91       	pop	r29
 5b8:	cf 91       	pop	r28
 5ba:	08 95       	ret

000005bc <USARTInit>:
static int stdio_putchar(char c, FILE * stream);
static int stdio_getchar(FILE *stream);
static FILE UsartStdio = FDEV_SETUP_STREAM(stdio_putchar, stdio_getchar,_FDEV_SETUP_WRITE);

void USARTInit(void)
{
 5bc:	cf 93       	push	r28
 5be:	df 93       	push	r29
 5c0:	cd b7       	in	r28, 0x3d	; 61
 5c2:	de b7       	in	r29, 0x3e	; 62
	USART_PORT.DIRSET=0b00001000;	//transmitlijn als output, receive lijn als input
 5c4:	80 e6       	ldi	r24, 0x60	; 96
 5c6:	96 e0       	ldi	r25, 0x06	; 6
 5c8:	28 e0       	ldi	r18, 0x08	; 8
 5ca:	fc 01       	movw	r30, r24
 5cc:	21 83       	std	Z+1, r18	; 0x01
	USART_PORT.DIRCLR=0b00000100;
 5ce:	80 e6       	ldi	r24, 0x60	; 96
 5d0:	96 e0       	ldi	r25, 0x06	; 6
 5d2:	24 e0       	ldi	r18, 0x04	; 4
 5d4:	fc 01       	movw	r30, r24
 5d6:	22 83       	std	Z+2, r18	; 0x02
	
	USART.CTRLA=0b00000000; //polled mode = interrupts uitgeschakeld
 5d8:	80 ea       	ldi	r24, 0xA0	; 160
 5da:	99 e0       	ldi	r25, 0x09	; 9
 5dc:	fc 01       	movw	r30, r24
 5de:	13 82       	std	Z+3, r1	; 0x03
	USART.CTRLB=0b00011000; //transmitter en reveicer aan, double speed comm uit
 5e0:	80 ea       	ldi	r24, 0xA0	; 160
 5e2:	99 e0       	ldi	r25, 0x09	; 9
 5e4:	28 e1       	ldi	r18, 0x18	; 24
 5e6:	fc 01       	movw	r30, r24
 5e8:	24 83       	std	Z+4, r18	; 0x04
	USART.CTRLC=0b00000011; // USART in async mode
 5ea:	80 ea       	ldi	r24, 0xA0	; 160
 5ec:	99 e0       	ldi	r25, 0x09	; 9
 5ee:	23 e0       	ldi	r18, 0x03	; 3
 5f0:	fc 01       	movw	r30, r24
 5f2:	25 83       	std	Z+5, r18	; 0x05
	
	//USART.BAUDCTRLA=0xE5; //BSEL=3301, BSCALE=-5 9600 baud
	//USART.BAUDCTRLB=0xBC; 

	//BSEL=983=0011 1101 0111, BSCALE=-7=1001 --> 115200 baud [afwijking: 115211 baud]
	USART.BAUDCTRLA=0xD7; //1101 0111
 5f4:	80 ea       	ldi	r24, 0xA0	; 160
 5f6:	99 e0       	ldi	r25, 0x09	; 9
 5f8:	27 ed       	ldi	r18, 0xD7	; 215
 5fa:	fc 01       	movw	r30, r24
 5fc:	26 83       	std	Z+6, r18	; 0x06
	USART.BAUDCTRLB=0x93; //1001 0011
 5fe:	80 ea       	ldi	r24, 0xA0	; 160
 600:	99 e0       	ldi	r25, 0x09	; 9
 602:	23 e9       	ldi	r18, 0x93	; 147
 604:	fc 01       	movw	r30, r24
 606:	27 83       	std	Z+7, r18	; 0x07
	
	stdout=&UsartStdio; // koppeling tussen drivercode en stdio lib
 608:	80 e0       	ldi	r24, 0x00	; 0
 60a:	90 e2       	ldi	r25, 0x20	; 32
 60c:	80 93 2a 20 	sts	0x202A, r24	; 0x80202a <__data_end+0x2>
 610:	90 93 2b 20 	sts	0x202B, r25	; 0x80202b <__data_end+0x3>
	stdin=&UsartStdio;
 614:	80 e0       	ldi	r24, 0x00	; 0
 616:	90 e2       	ldi	r25, 0x20	; 32
 618:	80 93 28 20 	sts	0x2028, r24	; 0x802028 <__data_end>
 61c:	90 93 29 20 	sts	0x2029, r25	; 0x802029 <__data_end+0x1>
}
 620:	00 00       	nop
 622:	df 91       	pop	r29
 624:	cf 91       	pop	r28
 626:	08 95       	ret

00000628 <stdio_putchar>:

//vormt onderste laag van stdio lib
static int stdio_putchar(char c, FILE * stream) //1 byte over USART
{
 628:	cf 93       	push	r28
 62a:	df 93       	push	r29
 62c:	00 d0       	rcall	.+0      	; 0x62e <stdio_putchar+0x6>
 62e:	1f 92       	push	r1
 630:	cd b7       	in	r28, 0x3d	; 61
 632:	de b7       	in	r29, 0x3e	; 62
 634:	89 83       	std	Y+1, r24	; 0x01
 636:	6a 83       	std	Y+2, r22	; 0x02
 638:	7b 83       	std	Y+3, r23	; 0x03
	USART.DATA = 0x55;//USARTD --> c, USARTC --> 0x55 = 0101 0101
 63a:	80 ea       	ldi	r24, 0xA0	; 160
 63c:	99 e0       	ldi	r25, 0x09	; 9
 63e:	25 e5       	ldi	r18, 0x55	; 85
 640:	fc 01       	movw	r30, r24
 642:	20 83       	st	Z, r18
	while (!(USART.STATUS & 0b01000000)); //wachten op TXCIF (Transmit Complete interrupt flag) = byte verzonden
 644:	00 00       	nop
 646:	80 ea       	ldi	r24, 0xA0	; 160
 648:	99 e0       	ldi	r25, 0x09	; 9
 64a:	fc 01       	movw	r30, r24
 64c:	81 81       	ldd	r24, Z+1	; 0x01
 64e:	88 2f       	mov	r24, r24
 650:	90 e0       	ldi	r25, 0x00	; 0
 652:	80 74       	andi	r24, 0x40	; 64
 654:	99 27       	eor	r25, r25
 656:	89 2b       	or	r24, r25
 658:	b1 f3       	breq	.-20     	; 0x646 <stdio_putchar+0x1e>
	USART.STATUS=0b01000000; //vlag op 0 voor volgende datatransfer
 65a:	80 ea       	ldi	r24, 0xA0	; 160
 65c:	99 e0       	ldi	r25, 0x09	; 9
 65e:	20 e4       	ldi	r18, 0x40	; 64
 660:	fc 01       	movw	r30, r24
 662:	21 83       	std	Z+1, r18	; 0x01
	return 0;
 664:	80 e0       	ldi	r24, 0x00	; 0
 666:	90 e0       	ldi	r25, 0x00	; 0
}
 668:	23 96       	adiw	r28, 0x03	; 3
 66a:	cd bf       	out	0x3d, r28	; 61
 66c:	de bf       	out	0x3e, r29	; 62
 66e:	df 91       	pop	r29
 670:	cf 91       	pop	r28
 672:	08 95       	ret

00000674 <stdio_getchar>:
	
static int stdio_getchar(FILE *stream)
{
 674:	cf 93       	push	r28
 676:	df 93       	push	r29
 678:	00 d0       	rcall	.+0      	; 0x67a <stdio_getchar+0x6>
 67a:	cd b7       	in	r28, 0x3d	; 61
 67c:	de b7       	in	r29, 0x3e	; 62
 67e:	89 83       	std	Y+1, r24	; 0x01
 680:	9a 83       	std	Y+2, r25	; 0x02
	while (!(USART.STATUS & 0b10000000)); //wacht tot er een byte in de receive buffer zit
 682:	00 00       	nop
 684:	80 ea       	ldi	r24, 0xA0	; 160
 686:	99 e0       	ldi	r25, 0x09	; 9
 688:	fc 01       	movw	r30, r24
 68a:	81 81       	ldd	r24, Z+1	; 0x01
 68c:	88 23       	and	r24, r24
 68e:	d4 f7       	brge	.-12     	; 0x684 <stdio_getchar+0x10>
	return USART.DATA;
 690:	80 ea       	ldi	r24, 0xA0	; 160
 692:	99 e0       	ldi	r25, 0x09	; 9
 694:	fc 01       	movw	r30, r24
 696:	80 81       	ld	r24, Z
 698:	88 2f       	mov	r24, r24
 69a:	90 e0       	ldi	r25, 0x00	; 0
}
 69c:	0f 90       	pop	r0
 69e:	0f 90       	pop	r0
 6a0:	df 91       	pop	r29
 6a2:	cf 91       	pop	r28
 6a4:	08 95       	ret

000006a6 <__cmpsf2>:
 6a6:	0e 94 87 03 	call	0x70e	; 0x70e <__fp_cmp>
 6aa:	08 f4       	brcc	.+2      	; 0x6ae <__cmpsf2+0x8>
 6ac:	81 e0       	ldi	r24, 0x01	; 1
 6ae:	08 95       	ret

000006b0 <__fixunssfsi>:
 6b0:	0e 94 b3 03 	call	0x766	; 0x766 <__fp_splitA>
 6b4:	88 f0       	brcs	.+34     	; 0x6d8 <__fixunssfsi+0x28>
 6b6:	9f 57       	subi	r25, 0x7F	; 127
 6b8:	98 f0       	brcs	.+38     	; 0x6e0 <__fixunssfsi+0x30>
 6ba:	b9 2f       	mov	r27, r25
 6bc:	99 27       	eor	r25, r25
 6be:	b7 51       	subi	r27, 0x17	; 23
 6c0:	b0 f0       	brcs	.+44     	; 0x6ee <__fixunssfsi+0x3e>
 6c2:	e1 f0       	breq	.+56     	; 0x6fc <__fixunssfsi+0x4c>
 6c4:	66 0f       	add	r22, r22
 6c6:	77 1f       	adc	r23, r23
 6c8:	88 1f       	adc	r24, r24
 6ca:	99 1f       	adc	r25, r25
 6cc:	1a f0       	brmi	.+6      	; 0x6d4 <__fixunssfsi+0x24>
 6ce:	ba 95       	dec	r27
 6d0:	c9 f7       	brne	.-14     	; 0x6c4 <__fixunssfsi+0x14>
 6d2:	14 c0       	rjmp	.+40     	; 0x6fc <__fixunssfsi+0x4c>
 6d4:	b1 30       	cpi	r27, 0x01	; 1
 6d6:	91 f0       	breq	.+36     	; 0x6fc <__fixunssfsi+0x4c>
 6d8:	0e 94 cd 03 	call	0x79a	; 0x79a <__fp_zero>
 6dc:	b1 e0       	ldi	r27, 0x01	; 1
 6de:	08 95       	ret
 6e0:	0c 94 cd 03 	jmp	0x79a	; 0x79a <__fp_zero>
 6e4:	67 2f       	mov	r22, r23
 6e6:	78 2f       	mov	r23, r24
 6e8:	88 27       	eor	r24, r24
 6ea:	b8 5f       	subi	r27, 0xF8	; 248
 6ec:	39 f0       	breq	.+14     	; 0x6fc <__fixunssfsi+0x4c>
 6ee:	b9 3f       	cpi	r27, 0xF9	; 249
 6f0:	cc f3       	brlt	.-14     	; 0x6e4 <__fixunssfsi+0x34>
 6f2:	86 95       	lsr	r24
 6f4:	77 95       	ror	r23
 6f6:	67 95       	ror	r22
 6f8:	b3 95       	inc	r27
 6fa:	d9 f7       	brne	.-10     	; 0x6f2 <__fixunssfsi+0x42>
 6fc:	3e f4       	brtc	.+14     	; 0x70c <__fixunssfsi+0x5c>
 6fe:	90 95       	com	r25
 700:	80 95       	com	r24
 702:	70 95       	com	r23
 704:	61 95       	neg	r22
 706:	7f 4f       	sbci	r23, 0xFF	; 255
 708:	8f 4f       	sbci	r24, 0xFF	; 255
 70a:	9f 4f       	sbci	r25, 0xFF	; 255
 70c:	08 95       	ret

0000070e <__fp_cmp>:
 70e:	99 0f       	add	r25, r25
 710:	00 08       	sbc	r0, r0
 712:	55 0f       	add	r21, r21
 714:	aa 0b       	sbc	r26, r26
 716:	e0 e8       	ldi	r30, 0x80	; 128
 718:	fe ef       	ldi	r31, 0xFE	; 254
 71a:	16 16       	cp	r1, r22
 71c:	17 06       	cpc	r1, r23
 71e:	e8 07       	cpc	r30, r24
 720:	f9 07       	cpc	r31, r25
 722:	c0 f0       	brcs	.+48     	; 0x754 <__fp_cmp+0x46>
 724:	12 16       	cp	r1, r18
 726:	13 06       	cpc	r1, r19
 728:	e4 07       	cpc	r30, r20
 72a:	f5 07       	cpc	r31, r21
 72c:	98 f0       	brcs	.+38     	; 0x754 <__fp_cmp+0x46>
 72e:	62 1b       	sub	r22, r18
 730:	73 0b       	sbc	r23, r19
 732:	84 0b       	sbc	r24, r20
 734:	95 0b       	sbc	r25, r21
 736:	39 f4       	brne	.+14     	; 0x746 <__fp_cmp+0x38>
 738:	0a 26       	eor	r0, r26
 73a:	61 f0       	breq	.+24     	; 0x754 <__fp_cmp+0x46>
 73c:	23 2b       	or	r18, r19
 73e:	24 2b       	or	r18, r20
 740:	25 2b       	or	r18, r21
 742:	21 f4       	brne	.+8      	; 0x74c <__fp_cmp+0x3e>
 744:	08 95       	ret
 746:	0a 26       	eor	r0, r26
 748:	09 f4       	brne	.+2      	; 0x74c <__fp_cmp+0x3e>
 74a:	a1 40       	sbci	r26, 0x01	; 1
 74c:	a6 95       	lsr	r26
 74e:	8f ef       	ldi	r24, 0xFF	; 255
 750:	81 1d       	adc	r24, r1
 752:	81 1d       	adc	r24, r1
 754:	08 95       	ret

00000756 <__fp_split3>:
 756:	57 fd       	sbrc	r21, 7
 758:	90 58       	subi	r25, 0x80	; 128
 75a:	44 0f       	add	r20, r20
 75c:	55 1f       	adc	r21, r21
 75e:	59 f0       	breq	.+22     	; 0x776 <__fp_splitA+0x10>
 760:	5f 3f       	cpi	r21, 0xFF	; 255
 762:	71 f0       	breq	.+28     	; 0x780 <__fp_splitA+0x1a>
 764:	47 95       	ror	r20

00000766 <__fp_splitA>:
 766:	88 0f       	add	r24, r24
 768:	97 fb       	bst	r25, 7
 76a:	99 1f       	adc	r25, r25
 76c:	61 f0       	breq	.+24     	; 0x786 <__fp_splitA+0x20>
 76e:	9f 3f       	cpi	r25, 0xFF	; 255
 770:	79 f0       	breq	.+30     	; 0x790 <__fp_splitA+0x2a>
 772:	87 95       	ror	r24
 774:	08 95       	ret
 776:	12 16       	cp	r1, r18
 778:	13 06       	cpc	r1, r19
 77a:	14 06       	cpc	r1, r20
 77c:	55 1f       	adc	r21, r21
 77e:	f2 cf       	rjmp	.-28     	; 0x764 <__fp_split3+0xe>
 780:	46 95       	lsr	r20
 782:	f1 df       	rcall	.-30     	; 0x766 <__fp_splitA>
 784:	08 c0       	rjmp	.+16     	; 0x796 <__fp_splitA+0x30>
 786:	16 16       	cp	r1, r22
 788:	17 06       	cpc	r1, r23
 78a:	18 06       	cpc	r1, r24
 78c:	99 1f       	adc	r25, r25
 78e:	f1 cf       	rjmp	.-30     	; 0x772 <__fp_splitA+0xc>
 790:	86 95       	lsr	r24
 792:	71 05       	cpc	r23, r1
 794:	61 05       	cpc	r22, r1
 796:	08 94       	sec
 798:	08 95       	ret

0000079a <__fp_zero>:
 79a:	e8 94       	clt

0000079c <__fp_szero>:
 79c:	bb 27       	eor	r27, r27
 79e:	66 27       	eor	r22, r22
 7a0:	77 27       	eor	r23, r23
 7a2:	cb 01       	movw	r24, r22
 7a4:	97 f9       	bld	r25, 7
 7a6:	08 95       	ret

000007a8 <__gesf2>:
 7a8:	0e 94 87 03 	call	0x70e	; 0x70e <__fp_cmp>
 7ac:	08 f4       	brcc	.+2      	; 0x7b0 <__gesf2+0x8>
 7ae:	8f ef       	ldi	r24, 0xFF	; 255
 7b0:	08 95       	ret

000007b2 <__mulsf3>:
 7b2:	0e 94 ec 03 	call	0x7d8	; 0x7d8 <__mulsf3x>
 7b6:	0c 94 5d 04 	jmp	0x8ba	; 0x8ba <__fp_round>
 7ba:	0e 94 4f 04 	call	0x89e	; 0x89e <__fp_pscA>
 7be:	38 f0       	brcs	.+14     	; 0x7ce <__mulsf3+0x1c>
 7c0:	0e 94 56 04 	call	0x8ac	; 0x8ac <__fp_pscB>
 7c4:	20 f0       	brcs	.+8      	; 0x7ce <__mulsf3+0x1c>
 7c6:	95 23       	and	r25, r21
 7c8:	11 f0       	breq	.+4      	; 0x7ce <__mulsf3+0x1c>
 7ca:	0c 94 46 04 	jmp	0x88c	; 0x88c <__fp_inf>
 7ce:	0c 94 4c 04 	jmp	0x898	; 0x898 <__fp_nan>
 7d2:	11 24       	eor	r1, r1
 7d4:	0c 94 ce 03 	jmp	0x79c	; 0x79c <__fp_szero>

000007d8 <__mulsf3x>:
 7d8:	0e 94 ab 03 	call	0x756	; 0x756 <__fp_split3>
 7dc:	70 f3       	brcs	.-36     	; 0x7ba <__mulsf3+0x8>

000007de <__mulsf3_pse>:
 7de:	95 9f       	mul	r25, r21
 7e0:	c1 f3       	breq	.-16     	; 0x7d2 <__mulsf3+0x20>
 7e2:	95 0f       	add	r25, r21
 7e4:	50 e0       	ldi	r21, 0x00	; 0
 7e6:	55 1f       	adc	r21, r21
 7e8:	62 9f       	mul	r22, r18
 7ea:	f0 01       	movw	r30, r0
 7ec:	72 9f       	mul	r23, r18
 7ee:	bb 27       	eor	r27, r27
 7f0:	f0 0d       	add	r31, r0
 7f2:	b1 1d       	adc	r27, r1
 7f4:	63 9f       	mul	r22, r19
 7f6:	aa 27       	eor	r26, r26
 7f8:	f0 0d       	add	r31, r0
 7fa:	b1 1d       	adc	r27, r1
 7fc:	aa 1f       	adc	r26, r26
 7fe:	64 9f       	mul	r22, r20
 800:	66 27       	eor	r22, r22
 802:	b0 0d       	add	r27, r0
 804:	a1 1d       	adc	r26, r1
 806:	66 1f       	adc	r22, r22
 808:	82 9f       	mul	r24, r18
 80a:	22 27       	eor	r18, r18
 80c:	b0 0d       	add	r27, r0
 80e:	a1 1d       	adc	r26, r1
 810:	62 1f       	adc	r22, r18
 812:	73 9f       	mul	r23, r19
 814:	b0 0d       	add	r27, r0
 816:	a1 1d       	adc	r26, r1
 818:	62 1f       	adc	r22, r18
 81a:	83 9f       	mul	r24, r19
 81c:	a0 0d       	add	r26, r0
 81e:	61 1d       	adc	r22, r1
 820:	22 1f       	adc	r18, r18
 822:	74 9f       	mul	r23, r20
 824:	33 27       	eor	r19, r19
 826:	a0 0d       	add	r26, r0
 828:	61 1d       	adc	r22, r1
 82a:	23 1f       	adc	r18, r19
 82c:	84 9f       	mul	r24, r20
 82e:	60 0d       	add	r22, r0
 830:	21 1d       	adc	r18, r1
 832:	82 2f       	mov	r24, r18
 834:	76 2f       	mov	r23, r22
 836:	6a 2f       	mov	r22, r26
 838:	11 24       	eor	r1, r1
 83a:	9f 57       	subi	r25, 0x7F	; 127
 83c:	50 40       	sbci	r21, 0x00	; 0
 83e:	9a f0       	brmi	.+38     	; 0x866 <__mulsf3_pse+0x88>
 840:	f1 f0       	breq	.+60     	; 0x87e <__mulsf3_pse+0xa0>
 842:	88 23       	and	r24, r24
 844:	4a f0       	brmi	.+18     	; 0x858 <__mulsf3_pse+0x7a>
 846:	ee 0f       	add	r30, r30
 848:	ff 1f       	adc	r31, r31
 84a:	bb 1f       	adc	r27, r27
 84c:	66 1f       	adc	r22, r22
 84e:	77 1f       	adc	r23, r23
 850:	88 1f       	adc	r24, r24
 852:	91 50       	subi	r25, 0x01	; 1
 854:	50 40       	sbci	r21, 0x00	; 0
 856:	a9 f7       	brne	.-22     	; 0x842 <__mulsf3_pse+0x64>
 858:	9e 3f       	cpi	r25, 0xFE	; 254
 85a:	51 05       	cpc	r21, r1
 85c:	80 f0       	brcs	.+32     	; 0x87e <__mulsf3_pse+0xa0>
 85e:	0c 94 46 04 	jmp	0x88c	; 0x88c <__fp_inf>
 862:	0c 94 ce 03 	jmp	0x79c	; 0x79c <__fp_szero>
 866:	5f 3f       	cpi	r21, 0xFF	; 255
 868:	e4 f3       	brlt	.-8      	; 0x862 <__mulsf3_pse+0x84>
 86a:	98 3e       	cpi	r25, 0xE8	; 232
 86c:	d4 f3       	brlt	.-12     	; 0x862 <__mulsf3_pse+0x84>
 86e:	86 95       	lsr	r24
 870:	77 95       	ror	r23
 872:	67 95       	ror	r22
 874:	b7 95       	ror	r27
 876:	f7 95       	ror	r31
 878:	e7 95       	ror	r30
 87a:	9f 5f       	subi	r25, 0xFF	; 255
 87c:	c1 f7       	brne	.-16     	; 0x86e <__mulsf3_pse+0x90>
 87e:	fe 2b       	or	r31, r30
 880:	88 0f       	add	r24, r24
 882:	91 1d       	adc	r25, r1
 884:	96 95       	lsr	r25
 886:	87 95       	ror	r24
 888:	97 f9       	bld	r25, 7
 88a:	08 95       	ret

0000088c <__fp_inf>:
 88c:	97 f9       	bld	r25, 7
 88e:	9f 67       	ori	r25, 0x7F	; 127
 890:	80 e8       	ldi	r24, 0x80	; 128
 892:	70 e0       	ldi	r23, 0x00	; 0
 894:	60 e0       	ldi	r22, 0x00	; 0
 896:	08 95       	ret

00000898 <__fp_nan>:
 898:	9f ef       	ldi	r25, 0xFF	; 255
 89a:	80 ec       	ldi	r24, 0xC0	; 192
 89c:	08 95       	ret

0000089e <__fp_pscA>:
 89e:	00 24       	eor	r0, r0
 8a0:	0a 94       	dec	r0
 8a2:	16 16       	cp	r1, r22
 8a4:	17 06       	cpc	r1, r23
 8a6:	18 06       	cpc	r1, r24
 8a8:	09 06       	cpc	r0, r25
 8aa:	08 95       	ret

000008ac <__fp_pscB>:
 8ac:	00 24       	eor	r0, r0
 8ae:	0a 94       	dec	r0
 8b0:	12 16       	cp	r1, r18
 8b2:	13 06       	cpc	r1, r19
 8b4:	14 06       	cpc	r1, r20
 8b6:	05 06       	cpc	r0, r21
 8b8:	08 95       	ret

000008ba <__fp_round>:
 8ba:	09 2e       	mov	r0, r25
 8bc:	03 94       	inc	r0
 8be:	00 0c       	add	r0, r0
 8c0:	11 f4       	brne	.+4      	; 0x8c6 <__fp_round+0xc>
 8c2:	88 23       	and	r24, r24
 8c4:	52 f0       	brmi	.+20     	; 0x8da <__fp_round+0x20>
 8c6:	bb 0f       	add	r27, r27
 8c8:	40 f4       	brcc	.+16     	; 0x8da <__fp_round+0x20>
 8ca:	bf 2b       	or	r27, r31
 8cc:	11 f4       	brne	.+4      	; 0x8d2 <__fp_round+0x18>
 8ce:	60 ff       	sbrs	r22, 0
 8d0:	04 c0       	rjmp	.+8      	; 0x8da <__fp_round+0x20>
 8d2:	6f 5f       	subi	r22, 0xFF	; 255
 8d4:	7f 4f       	sbci	r23, 0xFF	; 255
 8d6:	8f 4f       	sbci	r24, 0xFF	; 255
 8d8:	9f 4f       	sbci	r25, 0xFF	; 255
 8da:	08 95       	ret

000008dc <puts>:
 8dc:	0f 93       	push	r16
 8de:	1f 93       	push	r17
 8e0:	cf 93       	push	r28
 8e2:	df 93       	push	r29
 8e4:	e0 91 2a 20 	lds	r30, 0x202A	; 0x80202a <__data_end+0x2>
 8e8:	f0 91 2b 20 	lds	r31, 0x202B	; 0x80202b <__data_end+0x3>
 8ec:	23 81       	ldd	r18, Z+3	; 0x03
 8ee:	21 ff       	sbrs	r18, 1
 8f0:	1b c0       	rjmp	.+54     	; 0x928 <puts+0x4c>
 8f2:	8c 01       	movw	r16, r24
 8f4:	d0 e0       	ldi	r29, 0x00	; 0
 8f6:	c0 e0       	ldi	r28, 0x00	; 0
 8f8:	f8 01       	movw	r30, r16
 8fa:	81 91       	ld	r24, Z+
 8fc:	8f 01       	movw	r16, r30
 8fe:	60 91 2a 20 	lds	r22, 0x202A	; 0x80202a <__data_end+0x2>
 902:	70 91 2b 20 	lds	r23, 0x202B	; 0x80202b <__data_end+0x3>
 906:	db 01       	movw	r26, r22
 908:	18 96       	adiw	r26, 0x08	; 8
 90a:	ed 91       	ld	r30, X+
 90c:	fc 91       	ld	r31, X
 90e:	19 97       	sbiw	r26, 0x09	; 9
 910:	88 23       	and	r24, r24
 912:	31 f0       	breq	.+12     	; 0x920 <puts+0x44>
 914:	09 95       	icall
 916:	89 2b       	or	r24, r25
 918:	79 f3       	breq	.-34     	; 0x8f8 <puts+0x1c>
 91a:	df ef       	ldi	r29, 0xFF	; 255
 91c:	cf ef       	ldi	r28, 0xFF	; 255
 91e:	ec cf       	rjmp	.-40     	; 0x8f8 <puts+0x1c>
 920:	8a e0       	ldi	r24, 0x0A	; 10
 922:	09 95       	icall
 924:	89 2b       	or	r24, r25
 926:	19 f0       	breq	.+6      	; 0x92e <puts+0x52>
 928:	8f ef       	ldi	r24, 0xFF	; 255
 92a:	9f ef       	ldi	r25, 0xFF	; 255
 92c:	02 c0       	rjmp	.+4      	; 0x932 <puts+0x56>
 92e:	8d 2f       	mov	r24, r29
 930:	9c 2f       	mov	r25, r28
 932:	df 91       	pop	r29
 934:	cf 91       	pop	r28
 936:	1f 91       	pop	r17
 938:	0f 91       	pop	r16
 93a:	08 95       	ret

0000093c <sprintf>:
 93c:	ae e0       	ldi	r26, 0x0E	; 14
 93e:	b0 e0       	ldi	r27, 0x00	; 0
 940:	e4 ea       	ldi	r30, 0xA4	; 164
 942:	f4 e0       	ldi	r31, 0x04	; 4
 944:	0c 94 5f 07 	jmp	0xebe	; 0xebe <__prologue_saves__+0x1c>
 948:	0d 89       	ldd	r16, Y+21	; 0x15
 94a:	1e 89       	ldd	r17, Y+22	; 0x16
 94c:	86 e0       	ldi	r24, 0x06	; 6
 94e:	8c 83       	std	Y+4, r24	; 0x04
 950:	09 83       	std	Y+1, r16	; 0x01
 952:	1a 83       	std	Y+2, r17	; 0x02
 954:	8f ef       	ldi	r24, 0xFF	; 255
 956:	9f e7       	ldi	r25, 0x7F	; 127
 958:	8d 83       	std	Y+5, r24	; 0x05
 95a:	9e 83       	std	Y+6, r25	; 0x06
 95c:	ae 01       	movw	r20, r28
 95e:	47 5e       	subi	r20, 0xE7	; 231
 960:	5f 4f       	sbci	r21, 0xFF	; 255
 962:	6f 89       	ldd	r22, Y+23	; 0x17
 964:	78 8d       	ldd	r23, Y+24	; 0x18
 966:	ce 01       	movw	r24, r28
 968:	01 96       	adiw	r24, 0x01	; 1
 96a:	0e 94 c0 04 	call	0x980	; 0x980 <vfprintf>
 96e:	ef 81       	ldd	r30, Y+7	; 0x07
 970:	f8 85       	ldd	r31, Y+8	; 0x08
 972:	e0 0f       	add	r30, r16
 974:	f1 1f       	adc	r31, r17
 976:	10 82       	st	Z, r1
 978:	2e 96       	adiw	r28, 0x0e	; 14
 97a:	e4 e0       	ldi	r30, 0x04	; 4
 97c:	0c 94 78 07 	jmp	0xef0	; 0xef0 <__epilogue_restores__+0x1c>

00000980 <vfprintf>:
 980:	ab e0       	ldi	r26, 0x0B	; 11
 982:	b0 e0       	ldi	r27, 0x00	; 0
 984:	e6 ec       	ldi	r30, 0xC6	; 198
 986:	f4 e0       	ldi	r31, 0x04	; 4
 988:	0c 94 51 07 	jmp	0xea2	; 0xea2 <__prologue_saves__>
 98c:	6c 01       	movw	r12, r24
 98e:	7b 01       	movw	r14, r22
 990:	8a 01       	movw	r16, r20
 992:	fc 01       	movw	r30, r24
 994:	16 82       	std	Z+6, r1	; 0x06
 996:	17 82       	std	Z+7, r1	; 0x07
 998:	83 81       	ldd	r24, Z+3	; 0x03
 99a:	81 ff       	sbrs	r24, 1
 99c:	cc c1       	rjmp	.+920    	; 0xd36 <vfprintf+0x3b6>
 99e:	ce 01       	movw	r24, r28
 9a0:	01 96       	adiw	r24, 0x01	; 1
 9a2:	3c 01       	movw	r6, r24
 9a4:	f6 01       	movw	r30, r12
 9a6:	93 81       	ldd	r25, Z+3	; 0x03
 9a8:	f7 01       	movw	r30, r14
 9aa:	93 fd       	sbrc	r25, 3
 9ac:	85 91       	lpm	r24, Z+
 9ae:	93 ff       	sbrs	r25, 3
 9b0:	81 91       	ld	r24, Z+
 9b2:	7f 01       	movw	r14, r30
 9b4:	88 23       	and	r24, r24
 9b6:	09 f4       	brne	.+2      	; 0x9ba <vfprintf+0x3a>
 9b8:	ba c1       	rjmp	.+884    	; 0xd2e <vfprintf+0x3ae>
 9ba:	85 32       	cpi	r24, 0x25	; 37
 9bc:	39 f4       	brne	.+14     	; 0x9cc <vfprintf+0x4c>
 9be:	93 fd       	sbrc	r25, 3
 9c0:	85 91       	lpm	r24, Z+
 9c2:	93 ff       	sbrs	r25, 3
 9c4:	81 91       	ld	r24, Z+
 9c6:	7f 01       	movw	r14, r30
 9c8:	85 32       	cpi	r24, 0x25	; 37
 9ca:	29 f4       	brne	.+10     	; 0x9d6 <vfprintf+0x56>
 9cc:	b6 01       	movw	r22, r12
 9ce:	90 e0       	ldi	r25, 0x00	; 0
 9d0:	0e 94 b7 06 	call	0xd6e	; 0xd6e <fputc>
 9d4:	e7 cf       	rjmp	.-50     	; 0x9a4 <vfprintf+0x24>
 9d6:	91 2c       	mov	r9, r1
 9d8:	21 2c       	mov	r2, r1
 9da:	31 2c       	mov	r3, r1
 9dc:	ff e1       	ldi	r31, 0x1F	; 31
 9de:	f3 15       	cp	r31, r3
 9e0:	d8 f0       	brcs	.+54     	; 0xa18 <vfprintf+0x98>
 9e2:	8b 32       	cpi	r24, 0x2B	; 43
 9e4:	79 f0       	breq	.+30     	; 0xa04 <vfprintf+0x84>
 9e6:	38 f4       	brcc	.+14     	; 0x9f6 <vfprintf+0x76>
 9e8:	80 32       	cpi	r24, 0x20	; 32
 9ea:	79 f0       	breq	.+30     	; 0xa0a <vfprintf+0x8a>
 9ec:	83 32       	cpi	r24, 0x23	; 35
 9ee:	a1 f4       	brne	.+40     	; 0xa18 <vfprintf+0x98>
 9f0:	23 2d       	mov	r18, r3
 9f2:	20 61       	ori	r18, 0x10	; 16
 9f4:	1d c0       	rjmp	.+58     	; 0xa30 <vfprintf+0xb0>
 9f6:	8d 32       	cpi	r24, 0x2D	; 45
 9f8:	61 f0       	breq	.+24     	; 0xa12 <vfprintf+0x92>
 9fa:	80 33       	cpi	r24, 0x30	; 48
 9fc:	69 f4       	brne	.+26     	; 0xa18 <vfprintf+0x98>
 9fe:	23 2d       	mov	r18, r3
 a00:	21 60       	ori	r18, 0x01	; 1
 a02:	16 c0       	rjmp	.+44     	; 0xa30 <vfprintf+0xb0>
 a04:	83 2d       	mov	r24, r3
 a06:	82 60       	ori	r24, 0x02	; 2
 a08:	38 2e       	mov	r3, r24
 a0a:	e3 2d       	mov	r30, r3
 a0c:	e4 60       	ori	r30, 0x04	; 4
 a0e:	3e 2e       	mov	r3, r30
 a10:	2a c0       	rjmp	.+84     	; 0xa66 <vfprintf+0xe6>
 a12:	f3 2d       	mov	r31, r3
 a14:	f8 60       	ori	r31, 0x08	; 8
 a16:	1d c0       	rjmp	.+58     	; 0xa52 <vfprintf+0xd2>
 a18:	37 fc       	sbrc	r3, 7
 a1a:	2d c0       	rjmp	.+90     	; 0xa76 <vfprintf+0xf6>
 a1c:	20 ed       	ldi	r18, 0xD0	; 208
 a1e:	28 0f       	add	r18, r24
 a20:	2a 30       	cpi	r18, 0x0A	; 10
 a22:	40 f0       	brcs	.+16     	; 0xa34 <vfprintf+0xb4>
 a24:	8e 32       	cpi	r24, 0x2E	; 46
 a26:	b9 f4       	brne	.+46     	; 0xa56 <vfprintf+0xd6>
 a28:	36 fc       	sbrc	r3, 6
 a2a:	81 c1       	rjmp	.+770    	; 0xd2e <vfprintf+0x3ae>
 a2c:	23 2d       	mov	r18, r3
 a2e:	20 64       	ori	r18, 0x40	; 64
 a30:	32 2e       	mov	r3, r18
 a32:	19 c0       	rjmp	.+50     	; 0xa66 <vfprintf+0xe6>
 a34:	36 fe       	sbrs	r3, 6
 a36:	06 c0       	rjmp	.+12     	; 0xa44 <vfprintf+0xc4>
 a38:	8a e0       	ldi	r24, 0x0A	; 10
 a3a:	98 9e       	mul	r9, r24
 a3c:	20 0d       	add	r18, r0
 a3e:	11 24       	eor	r1, r1
 a40:	92 2e       	mov	r9, r18
 a42:	11 c0       	rjmp	.+34     	; 0xa66 <vfprintf+0xe6>
 a44:	ea e0       	ldi	r30, 0x0A	; 10
 a46:	2e 9e       	mul	r2, r30
 a48:	20 0d       	add	r18, r0
 a4a:	11 24       	eor	r1, r1
 a4c:	22 2e       	mov	r2, r18
 a4e:	f3 2d       	mov	r31, r3
 a50:	f0 62       	ori	r31, 0x20	; 32
 a52:	3f 2e       	mov	r3, r31
 a54:	08 c0       	rjmp	.+16     	; 0xa66 <vfprintf+0xe6>
 a56:	8c 36       	cpi	r24, 0x6C	; 108
 a58:	21 f4       	brne	.+8      	; 0xa62 <vfprintf+0xe2>
 a5a:	83 2d       	mov	r24, r3
 a5c:	80 68       	ori	r24, 0x80	; 128
 a5e:	38 2e       	mov	r3, r24
 a60:	02 c0       	rjmp	.+4      	; 0xa66 <vfprintf+0xe6>
 a62:	88 36       	cpi	r24, 0x68	; 104
 a64:	41 f4       	brne	.+16     	; 0xa76 <vfprintf+0xf6>
 a66:	f7 01       	movw	r30, r14
 a68:	93 fd       	sbrc	r25, 3
 a6a:	85 91       	lpm	r24, Z+
 a6c:	93 ff       	sbrs	r25, 3
 a6e:	81 91       	ld	r24, Z+
 a70:	7f 01       	movw	r14, r30
 a72:	81 11       	cpse	r24, r1
 a74:	b3 cf       	rjmp	.-154    	; 0x9dc <vfprintf+0x5c>
 a76:	98 2f       	mov	r25, r24
 a78:	9f 7d       	andi	r25, 0xDF	; 223
 a7a:	95 54       	subi	r25, 0x45	; 69
 a7c:	93 30       	cpi	r25, 0x03	; 3
 a7e:	28 f4       	brcc	.+10     	; 0xa8a <vfprintf+0x10a>
 a80:	0c 5f       	subi	r16, 0xFC	; 252
 a82:	1f 4f       	sbci	r17, 0xFF	; 255
 a84:	9f e3       	ldi	r25, 0x3F	; 63
 a86:	99 83       	std	Y+1, r25	; 0x01
 a88:	0d c0       	rjmp	.+26     	; 0xaa4 <vfprintf+0x124>
 a8a:	83 36       	cpi	r24, 0x63	; 99
 a8c:	31 f0       	breq	.+12     	; 0xa9a <vfprintf+0x11a>
 a8e:	83 37       	cpi	r24, 0x73	; 115
 a90:	71 f0       	breq	.+28     	; 0xaae <vfprintf+0x12e>
 a92:	83 35       	cpi	r24, 0x53	; 83
 a94:	09 f0       	breq	.+2      	; 0xa98 <vfprintf+0x118>
 a96:	59 c0       	rjmp	.+178    	; 0xb4a <vfprintf+0x1ca>
 a98:	21 c0       	rjmp	.+66     	; 0xadc <vfprintf+0x15c>
 a9a:	f8 01       	movw	r30, r16
 a9c:	80 81       	ld	r24, Z
 a9e:	89 83       	std	Y+1, r24	; 0x01
 aa0:	0e 5f       	subi	r16, 0xFE	; 254
 aa2:	1f 4f       	sbci	r17, 0xFF	; 255
 aa4:	88 24       	eor	r8, r8
 aa6:	83 94       	inc	r8
 aa8:	91 2c       	mov	r9, r1
 aaa:	53 01       	movw	r10, r6
 aac:	13 c0       	rjmp	.+38     	; 0xad4 <vfprintf+0x154>
 aae:	28 01       	movw	r4, r16
 ab0:	f2 e0       	ldi	r31, 0x02	; 2
 ab2:	4f 0e       	add	r4, r31
 ab4:	51 1c       	adc	r5, r1
 ab6:	f8 01       	movw	r30, r16
 ab8:	a0 80       	ld	r10, Z
 aba:	b1 80       	ldd	r11, Z+1	; 0x01
 abc:	36 fe       	sbrs	r3, 6
 abe:	03 c0       	rjmp	.+6      	; 0xac6 <vfprintf+0x146>
 ac0:	69 2d       	mov	r22, r9
 ac2:	70 e0       	ldi	r23, 0x00	; 0
 ac4:	02 c0       	rjmp	.+4      	; 0xaca <vfprintf+0x14a>
 ac6:	6f ef       	ldi	r22, 0xFF	; 255
 ac8:	7f ef       	ldi	r23, 0xFF	; 255
 aca:	c5 01       	movw	r24, r10
 acc:	0e 94 ac 06 	call	0xd58	; 0xd58 <strnlen>
 ad0:	4c 01       	movw	r8, r24
 ad2:	82 01       	movw	r16, r4
 ad4:	f3 2d       	mov	r31, r3
 ad6:	ff 77       	andi	r31, 0x7F	; 127
 ad8:	3f 2e       	mov	r3, r31
 ada:	16 c0       	rjmp	.+44     	; 0xb08 <vfprintf+0x188>
 adc:	28 01       	movw	r4, r16
 ade:	22 e0       	ldi	r18, 0x02	; 2
 ae0:	42 0e       	add	r4, r18
 ae2:	51 1c       	adc	r5, r1
 ae4:	f8 01       	movw	r30, r16
 ae6:	a0 80       	ld	r10, Z
 ae8:	b1 80       	ldd	r11, Z+1	; 0x01
 aea:	36 fe       	sbrs	r3, 6
 aec:	03 c0       	rjmp	.+6      	; 0xaf4 <vfprintf+0x174>
 aee:	69 2d       	mov	r22, r9
 af0:	70 e0       	ldi	r23, 0x00	; 0
 af2:	02 c0       	rjmp	.+4      	; 0xaf8 <vfprintf+0x178>
 af4:	6f ef       	ldi	r22, 0xFF	; 255
 af6:	7f ef       	ldi	r23, 0xFF	; 255
 af8:	c5 01       	movw	r24, r10
 afa:	0e 94 a1 06 	call	0xd42	; 0xd42 <strnlen_P>
 afe:	4c 01       	movw	r8, r24
 b00:	f3 2d       	mov	r31, r3
 b02:	f0 68       	ori	r31, 0x80	; 128
 b04:	3f 2e       	mov	r3, r31
 b06:	82 01       	movw	r16, r4
 b08:	33 fc       	sbrc	r3, 3
 b0a:	1b c0       	rjmp	.+54     	; 0xb42 <vfprintf+0x1c2>
 b0c:	82 2d       	mov	r24, r2
 b0e:	90 e0       	ldi	r25, 0x00	; 0
 b10:	88 16       	cp	r8, r24
 b12:	99 06       	cpc	r9, r25
 b14:	b0 f4       	brcc	.+44     	; 0xb42 <vfprintf+0x1c2>
 b16:	b6 01       	movw	r22, r12
 b18:	80 e2       	ldi	r24, 0x20	; 32
 b1a:	90 e0       	ldi	r25, 0x00	; 0
 b1c:	0e 94 b7 06 	call	0xd6e	; 0xd6e <fputc>
 b20:	2a 94       	dec	r2
 b22:	f4 cf       	rjmp	.-24     	; 0xb0c <vfprintf+0x18c>
 b24:	f5 01       	movw	r30, r10
 b26:	37 fc       	sbrc	r3, 7
 b28:	85 91       	lpm	r24, Z+
 b2a:	37 fe       	sbrs	r3, 7
 b2c:	81 91       	ld	r24, Z+
 b2e:	5f 01       	movw	r10, r30
 b30:	b6 01       	movw	r22, r12
 b32:	90 e0       	ldi	r25, 0x00	; 0
 b34:	0e 94 b7 06 	call	0xd6e	; 0xd6e <fputc>
 b38:	21 10       	cpse	r2, r1
 b3a:	2a 94       	dec	r2
 b3c:	21 e0       	ldi	r18, 0x01	; 1
 b3e:	82 1a       	sub	r8, r18
 b40:	91 08       	sbc	r9, r1
 b42:	81 14       	cp	r8, r1
 b44:	91 04       	cpc	r9, r1
 b46:	71 f7       	brne	.-36     	; 0xb24 <vfprintf+0x1a4>
 b48:	e8 c0       	rjmp	.+464    	; 0xd1a <vfprintf+0x39a>
 b4a:	84 36       	cpi	r24, 0x64	; 100
 b4c:	11 f0       	breq	.+4      	; 0xb52 <vfprintf+0x1d2>
 b4e:	89 36       	cpi	r24, 0x69	; 105
 b50:	41 f5       	brne	.+80     	; 0xba2 <vfprintf+0x222>
 b52:	f8 01       	movw	r30, r16
 b54:	37 fe       	sbrs	r3, 7
 b56:	07 c0       	rjmp	.+14     	; 0xb66 <vfprintf+0x1e6>
 b58:	60 81       	ld	r22, Z
 b5a:	71 81       	ldd	r23, Z+1	; 0x01
 b5c:	82 81       	ldd	r24, Z+2	; 0x02
 b5e:	93 81       	ldd	r25, Z+3	; 0x03
 b60:	0c 5f       	subi	r16, 0xFC	; 252
 b62:	1f 4f       	sbci	r17, 0xFF	; 255
 b64:	08 c0       	rjmp	.+16     	; 0xb76 <vfprintf+0x1f6>
 b66:	60 81       	ld	r22, Z
 b68:	71 81       	ldd	r23, Z+1	; 0x01
 b6a:	07 2e       	mov	r0, r23
 b6c:	00 0c       	add	r0, r0
 b6e:	88 0b       	sbc	r24, r24
 b70:	99 0b       	sbc	r25, r25
 b72:	0e 5f       	subi	r16, 0xFE	; 254
 b74:	1f 4f       	sbci	r17, 0xFF	; 255
 b76:	f3 2d       	mov	r31, r3
 b78:	ff 76       	andi	r31, 0x6F	; 111
 b7a:	3f 2e       	mov	r3, r31
 b7c:	97 ff       	sbrs	r25, 7
 b7e:	09 c0       	rjmp	.+18     	; 0xb92 <vfprintf+0x212>
 b80:	90 95       	com	r25
 b82:	80 95       	com	r24
 b84:	70 95       	com	r23
 b86:	61 95       	neg	r22
 b88:	7f 4f       	sbci	r23, 0xFF	; 255
 b8a:	8f 4f       	sbci	r24, 0xFF	; 255
 b8c:	9f 4f       	sbci	r25, 0xFF	; 255
 b8e:	f0 68       	ori	r31, 0x80	; 128
 b90:	3f 2e       	mov	r3, r31
 b92:	2a e0       	ldi	r18, 0x0A	; 10
 b94:	30 e0       	ldi	r19, 0x00	; 0
 b96:	a3 01       	movw	r20, r6
 b98:	0e 94 f3 06 	call	0xde6	; 0xde6 <__ultoa_invert>
 b9c:	88 2e       	mov	r8, r24
 b9e:	86 18       	sub	r8, r6
 ba0:	45 c0       	rjmp	.+138    	; 0xc2c <vfprintf+0x2ac>
 ba2:	85 37       	cpi	r24, 0x75	; 117
 ba4:	31 f4       	brne	.+12     	; 0xbb2 <vfprintf+0x232>
 ba6:	23 2d       	mov	r18, r3
 ba8:	2f 7e       	andi	r18, 0xEF	; 239
 baa:	b2 2e       	mov	r11, r18
 bac:	2a e0       	ldi	r18, 0x0A	; 10
 bae:	30 e0       	ldi	r19, 0x00	; 0
 bb0:	25 c0       	rjmp	.+74     	; 0xbfc <vfprintf+0x27c>
 bb2:	93 2d       	mov	r25, r3
 bb4:	99 7f       	andi	r25, 0xF9	; 249
 bb6:	b9 2e       	mov	r11, r25
 bb8:	8f 36       	cpi	r24, 0x6F	; 111
 bba:	c1 f0       	breq	.+48     	; 0xbec <vfprintf+0x26c>
 bbc:	18 f4       	brcc	.+6      	; 0xbc4 <vfprintf+0x244>
 bbe:	88 35       	cpi	r24, 0x58	; 88
 bc0:	79 f0       	breq	.+30     	; 0xbe0 <vfprintf+0x260>
 bc2:	b5 c0       	rjmp	.+362    	; 0xd2e <vfprintf+0x3ae>
 bc4:	80 37       	cpi	r24, 0x70	; 112
 bc6:	19 f0       	breq	.+6      	; 0xbce <vfprintf+0x24e>
 bc8:	88 37       	cpi	r24, 0x78	; 120
 bca:	21 f0       	breq	.+8      	; 0xbd4 <vfprintf+0x254>
 bcc:	b0 c0       	rjmp	.+352    	; 0xd2e <vfprintf+0x3ae>
 bce:	e9 2f       	mov	r30, r25
 bd0:	e0 61       	ori	r30, 0x10	; 16
 bd2:	be 2e       	mov	r11, r30
 bd4:	b4 fe       	sbrs	r11, 4
 bd6:	0d c0       	rjmp	.+26     	; 0xbf2 <vfprintf+0x272>
 bd8:	fb 2d       	mov	r31, r11
 bda:	f4 60       	ori	r31, 0x04	; 4
 bdc:	bf 2e       	mov	r11, r31
 bde:	09 c0       	rjmp	.+18     	; 0xbf2 <vfprintf+0x272>
 be0:	34 fe       	sbrs	r3, 4
 be2:	0a c0       	rjmp	.+20     	; 0xbf8 <vfprintf+0x278>
 be4:	29 2f       	mov	r18, r25
 be6:	26 60       	ori	r18, 0x06	; 6
 be8:	b2 2e       	mov	r11, r18
 bea:	06 c0       	rjmp	.+12     	; 0xbf8 <vfprintf+0x278>
 bec:	28 e0       	ldi	r18, 0x08	; 8
 bee:	30 e0       	ldi	r19, 0x00	; 0
 bf0:	05 c0       	rjmp	.+10     	; 0xbfc <vfprintf+0x27c>
 bf2:	20 e1       	ldi	r18, 0x10	; 16
 bf4:	30 e0       	ldi	r19, 0x00	; 0
 bf6:	02 c0       	rjmp	.+4      	; 0xbfc <vfprintf+0x27c>
 bf8:	20 e1       	ldi	r18, 0x10	; 16
 bfa:	32 e0       	ldi	r19, 0x02	; 2
 bfc:	f8 01       	movw	r30, r16
 bfe:	b7 fe       	sbrs	r11, 7
 c00:	07 c0       	rjmp	.+14     	; 0xc10 <vfprintf+0x290>
 c02:	60 81       	ld	r22, Z
 c04:	71 81       	ldd	r23, Z+1	; 0x01
 c06:	82 81       	ldd	r24, Z+2	; 0x02
 c08:	93 81       	ldd	r25, Z+3	; 0x03
 c0a:	0c 5f       	subi	r16, 0xFC	; 252
 c0c:	1f 4f       	sbci	r17, 0xFF	; 255
 c0e:	06 c0       	rjmp	.+12     	; 0xc1c <vfprintf+0x29c>
 c10:	60 81       	ld	r22, Z
 c12:	71 81       	ldd	r23, Z+1	; 0x01
 c14:	80 e0       	ldi	r24, 0x00	; 0
 c16:	90 e0       	ldi	r25, 0x00	; 0
 c18:	0e 5f       	subi	r16, 0xFE	; 254
 c1a:	1f 4f       	sbci	r17, 0xFF	; 255
 c1c:	a3 01       	movw	r20, r6
 c1e:	0e 94 f3 06 	call	0xde6	; 0xde6 <__ultoa_invert>
 c22:	88 2e       	mov	r8, r24
 c24:	86 18       	sub	r8, r6
 c26:	fb 2d       	mov	r31, r11
 c28:	ff 77       	andi	r31, 0x7F	; 127
 c2a:	3f 2e       	mov	r3, r31
 c2c:	36 fe       	sbrs	r3, 6
 c2e:	0d c0       	rjmp	.+26     	; 0xc4a <vfprintf+0x2ca>
 c30:	23 2d       	mov	r18, r3
 c32:	2e 7f       	andi	r18, 0xFE	; 254
 c34:	a2 2e       	mov	r10, r18
 c36:	89 14       	cp	r8, r9
 c38:	58 f4       	brcc	.+22     	; 0xc50 <vfprintf+0x2d0>
 c3a:	34 fe       	sbrs	r3, 4
 c3c:	0b c0       	rjmp	.+22     	; 0xc54 <vfprintf+0x2d4>
 c3e:	32 fc       	sbrc	r3, 2
 c40:	09 c0       	rjmp	.+18     	; 0xc54 <vfprintf+0x2d4>
 c42:	83 2d       	mov	r24, r3
 c44:	8e 7e       	andi	r24, 0xEE	; 238
 c46:	a8 2e       	mov	r10, r24
 c48:	05 c0       	rjmp	.+10     	; 0xc54 <vfprintf+0x2d4>
 c4a:	b8 2c       	mov	r11, r8
 c4c:	a3 2c       	mov	r10, r3
 c4e:	03 c0       	rjmp	.+6      	; 0xc56 <vfprintf+0x2d6>
 c50:	b8 2c       	mov	r11, r8
 c52:	01 c0       	rjmp	.+2      	; 0xc56 <vfprintf+0x2d6>
 c54:	b9 2c       	mov	r11, r9
 c56:	a4 fe       	sbrs	r10, 4
 c58:	0f c0       	rjmp	.+30     	; 0xc78 <vfprintf+0x2f8>
 c5a:	fe 01       	movw	r30, r28
 c5c:	e8 0d       	add	r30, r8
 c5e:	f1 1d       	adc	r31, r1
 c60:	80 81       	ld	r24, Z
 c62:	80 33       	cpi	r24, 0x30	; 48
 c64:	21 f4       	brne	.+8      	; 0xc6e <vfprintf+0x2ee>
 c66:	9a 2d       	mov	r25, r10
 c68:	99 7e       	andi	r25, 0xE9	; 233
 c6a:	a9 2e       	mov	r10, r25
 c6c:	09 c0       	rjmp	.+18     	; 0xc80 <vfprintf+0x300>
 c6e:	a2 fe       	sbrs	r10, 2
 c70:	06 c0       	rjmp	.+12     	; 0xc7e <vfprintf+0x2fe>
 c72:	b3 94       	inc	r11
 c74:	b3 94       	inc	r11
 c76:	04 c0       	rjmp	.+8      	; 0xc80 <vfprintf+0x300>
 c78:	8a 2d       	mov	r24, r10
 c7a:	86 78       	andi	r24, 0x86	; 134
 c7c:	09 f0       	breq	.+2      	; 0xc80 <vfprintf+0x300>
 c7e:	b3 94       	inc	r11
 c80:	a3 fc       	sbrc	r10, 3
 c82:	11 c0       	rjmp	.+34     	; 0xca6 <vfprintf+0x326>
 c84:	a0 fe       	sbrs	r10, 0
 c86:	06 c0       	rjmp	.+12     	; 0xc94 <vfprintf+0x314>
 c88:	b2 14       	cp	r11, r2
 c8a:	88 f4       	brcc	.+34     	; 0xcae <vfprintf+0x32e>
 c8c:	28 0c       	add	r2, r8
 c8e:	92 2c       	mov	r9, r2
 c90:	9b 18       	sub	r9, r11
 c92:	0e c0       	rjmp	.+28     	; 0xcb0 <vfprintf+0x330>
 c94:	b2 14       	cp	r11, r2
 c96:	60 f4       	brcc	.+24     	; 0xcb0 <vfprintf+0x330>
 c98:	b6 01       	movw	r22, r12
 c9a:	80 e2       	ldi	r24, 0x20	; 32
 c9c:	90 e0       	ldi	r25, 0x00	; 0
 c9e:	0e 94 b7 06 	call	0xd6e	; 0xd6e <fputc>
 ca2:	b3 94       	inc	r11
 ca4:	f7 cf       	rjmp	.-18     	; 0xc94 <vfprintf+0x314>
 ca6:	b2 14       	cp	r11, r2
 ca8:	18 f4       	brcc	.+6      	; 0xcb0 <vfprintf+0x330>
 caa:	2b 18       	sub	r2, r11
 cac:	02 c0       	rjmp	.+4      	; 0xcb2 <vfprintf+0x332>
 cae:	98 2c       	mov	r9, r8
 cb0:	21 2c       	mov	r2, r1
 cb2:	a4 fe       	sbrs	r10, 4
 cb4:	10 c0       	rjmp	.+32     	; 0xcd6 <vfprintf+0x356>
 cb6:	b6 01       	movw	r22, r12
 cb8:	80 e3       	ldi	r24, 0x30	; 48
 cba:	90 e0       	ldi	r25, 0x00	; 0
 cbc:	0e 94 b7 06 	call	0xd6e	; 0xd6e <fputc>
 cc0:	a2 fe       	sbrs	r10, 2
 cc2:	17 c0       	rjmp	.+46     	; 0xcf2 <vfprintf+0x372>
 cc4:	a1 fc       	sbrc	r10, 1
 cc6:	03 c0       	rjmp	.+6      	; 0xcce <vfprintf+0x34e>
 cc8:	88 e7       	ldi	r24, 0x78	; 120
 cca:	90 e0       	ldi	r25, 0x00	; 0
 ccc:	02 c0       	rjmp	.+4      	; 0xcd2 <vfprintf+0x352>
 cce:	88 e5       	ldi	r24, 0x58	; 88
 cd0:	90 e0       	ldi	r25, 0x00	; 0
 cd2:	b6 01       	movw	r22, r12
 cd4:	0c c0       	rjmp	.+24     	; 0xcee <vfprintf+0x36e>
 cd6:	8a 2d       	mov	r24, r10
 cd8:	86 78       	andi	r24, 0x86	; 134
 cda:	59 f0       	breq	.+22     	; 0xcf2 <vfprintf+0x372>
 cdc:	a1 fe       	sbrs	r10, 1
 cde:	02 c0       	rjmp	.+4      	; 0xce4 <vfprintf+0x364>
 ce0:	8b e2       	ldi	r24, 0x2B	; 43
 ce2:	01 c0       	rjmp	.+2      	; 0xce6 <vfprintf+0x366>
 ce4:	80 e2       	ldi	r24, 0x20	; 32
 ce6:	a7 fc       	sbrc	r10, 7
 ce8:	8d e2       	ldi	r24, 0x2D	; 45
 cea:	b6 01       	movw	r22, r12
 cec:	90 e0       	ldi	r25, 0x00	; 0
 cee:	0e 94 b7 06 	call	0xd6e	; 0xd6e <fputc>
 cf2:	89 14       	cp	r8, r9
 cf4:	38 f4       	brcc	.+14     	; 0xd04 <vfprintf+0x384>
 cf6:	b6 01       	movw	r22, r12
 cf8:	80 e3       	ldi	r24, 0x30	; 48
 cfa:	90 e0       	ldi	r25, 0x00	; 0
 cfc:	0e 94 b7 06 	call	0xd6e	; 0xd6e <fputc>
 d00:	9a 94       	dec	r9
 d02:	f7 cf       	rjmp	.-18     	; 0xcf2 <vfprintf+0x372>
 d04:	8a 94       	dec	r8
 d06:	f3 01       	movw	r30, r6
 d08:	e8 0d       	add	r30, r8
 d0a:	f1 1d       	adc	r31, r1
 d0c:	80 81       	ld	r24, Z
 d0e:	b6 01       	movw	r22, r12
 d10:	90 e0       	ldi	r25, 0x00	; 0
 d12:	0e 94 b7 06 	call	0xd6e	; 0xd6e <fputc>
 d16:	81 10       	cpse	r8, r1
 d18:	f5 cf       	rjmp	.-22     	; 0xd04 <vfprintf+0x384>
 d1a:	22 20       	and	r2, r2
 d1c:	09 f4       	brne	.+2      	; 0xd20 <vfprintf+0x3a0>
 d1e:	42 ce       	rjmp	.-892    	; 0x9a4 <vfprintf+0x24>
 d20:	b6 01       	movw	r22, r12
 d22:	80 e2       	ldi	r24, 0x20	; 32
 d24:	90 e0       	ldi	r25, 0x00	; 0
 d26:	0e 94 b7 06 	call	0xd6e	; 0xd6e <fputc>
 d2a:	2a 94       	dec	r2
 d2c:	f6 cf       	rjmp	.-20     	; 0xd1a <vfprintf+0x39a>
 d2e:	f6 01       	movw	r30, r12
 d30:	86 81       	ldd	r24, Z+6	; 0x06
 d32:	97 81       	ldd	r25, Z+7	; 0x07
 d34:	02 c0       	rjmp	.+4      	; 0xd3a <vfprintf+0x3ba>
 d36:	8f ef       	ldi	r24, 0xFF	; 255
 d38:	9f ef       	ldi	r25, 0xFF	; 255
 d3a:	2b 96       	adiw	r28, 0x0b	; 11
 d3c:	e2 e1       	ldi	r30, 0x12	; 18
 d3e:	0c 94 6a 07 	jmp	0xed4	; 0xed4 <__epilogue_restores__>

00000d42 <strnlen_P>:
 d42:	fc 01       	movw	r30, r24
 d44:	05 90       	lpm	r0, Z+
 d46:	61 50       	subi	r22, 0x01	; 1
 d48:	70 40       	sbci	r23, 0x00	; 0
 d4a:	01 10       	cpse	r0, r1
 d4c:	d8 f7       	brcc	.-10     	; 0xd44 <strnlen_P+0x2>
 d4e:	80 95       	com	r24
 d50:	90 95       	com	r25
 d52:	8e 0f       	add	r24, r30
 d54:	9f 1f       	adc	r25, r31
 d56:	08 95       	ret

00000d58 <strnlen>:
 d58:	fc 01       	movw	r30, r24
 d5a:	61 50       	subi	r22, 0x01	; 1
 d5c:	70 40       	sbci	r23, 0x00	; 0
 d5e:	01 90       	ld	r0, Z+
 d60:	01 10       	cpse	r0, r1
 d62:	d8 f7       	brcc	.-10     	; 0xd5a <strnlen+0x2>
 d64:	80 95       	com	r24
 d66:	90 95       	com	r25
 d68:	8e 0f       	add	r24, r30
 d6a:	9f 1f       	adc	r25, r31
 d6c:	08 95       	ret

00000d6e <fputc>:
 d6e:	0f 93       	push	r16
 d70:	1f 93       	push	r17
 d72:	cf 93       	push	r28
 d74:	df 93       	push	r29
 d76:	fb 01       	movw	r30, r22
 d78:	23 81       	ldd	r18, Z+3	; 0x03
 d7a:	21 fd       	sbrc	r18, 1
 d7c:	03 c0       	rjmp	.+6      	; 0xd84 <fputc+0x16>
 d7e:	8f ef       	ldi	r24, 0xFF	; 255
 d80:	9f ef       	ldi	r25, 0xFF	; 255
 d82:	2c c0       	rjmp	.+88     	; 0xddc <fputc+0x6e>
 d84:	22 ff       	sbrs	r18, 2
 d86:	16 c0       	rjmp	.+44     	; 0xdb4 <fputc+0x46>
 d88:	46 81       	ldd	r20, Z+6	; 0x06
 d8a:	57 81       	ldd	r21, Z+7	; 0x07
 d8c:	24 81       	ldd	r18, Z+4	; 0x04
 d8e:	35 81       	ldd	r19, Z+5	; 0x05
 d90:	42 17       	cp	r20, r18
 d92:	53 07       	cpc	r21, r19
 d94:	44 f4       	brge	.+16     	; 0xda6 <fputc+0x38>
 d96:	a0 81       	ld	r26, Z
 d98:	b1 81       	ldd	r27, Z+1	; 0x01
 d9a:	9d 01       	movw	r18, r26
 d9c:	2f 5f       	subi	r18, 0xFF	; 255
 d9e:	3f 4f       	sbci	r19, 0xFF	; 255
 da0:	20 83       	st	Z, r18
 da2:	31 83       	std	Z+1, r19	; 0x01
 da4:	8c 93       	st	X, r24
 da6:	26 81       	ldd	r18, Z+6	; 0x06
 da8:	37 81       	ldd	r19, Z+7	; 0x07
 daa:	2f 5f       	subi	r18, 0xFF	; 255
 dac:	3f 4f       	sbci	r19, 0xFF	; 255
 dae:	26 83       	std	Z+6, r18	; 0x06
 db0:	37 83       	std	Z+7, r19	; 0x07
 db2:	14 c0       	rjmp	.+40     	; 0xddc <fputc+0x6e>
 db4:	8b 01       	movw	r16, r22
 db6:	ec 01       	movw	r28, r24
 db8:	fb 01       	movw	r30, r22
 dba:	00 84       	ldd	r0, Z+8	; 0x08
 dbc:	f1 85       	ldd	r31, Z+9	; 0x09
 dbe:	e0 2d       	mov	r30, r0
 dc0:	09 95       	icall
 dc2:	89 2b       	or	r24, r25
 dc4:	e1 f6       	brne	.-72     	; 0xd7e <fputc+0x10>
 dc6:	d8 01       	movw	r26, r16
 dc8:	16 96       	adiw	r26, 0x06	; 6
 dca:	8d 91       	ld	r24, X+
 dcc:	9c 91       	ld	r25, X
 dce:	17 97       	sbiw	r26, 0x07	; 7
 dd0:	01 96       	adiw	r24, 0x01	; 1
 dd2:	16 96       	adiw	r26, 0x06	; 6
 dd4:	8d 93       	st	X+, r24
 dd6:	9c 93       	st	X, r25
 dd8:	17 97       	sbiw	r26, 0x07	; 7
 dda:	ce 01       	movw	r24, r28
 ddc:	df 91       	pop	r29
 dde:	cf 91       	pop	r28
 de0:	1f 91       	pop	r17
 de2:	0f 91       	pop	r16
 de4:	08 95       	ret

00000de6 <__ultoa_invert>:
 de6:	fa 01       	movw	r30, r20
 de8:	aa 27       	eor	r26, r26
 dea:	28 30       	cpi	r18, 0x08	; 8
 dec:	51 f1       	breq	.+84     	; 0xe42 <__ultoa_invert+0x5c>
 dee:	20 31       	cpi	r18, 0x10	; 16
 df0:	81 f1       	breq	.+96     	; 0xe52 <__ultoa_invert+0x6c>
 df2:	e8 94       	clt
 df4:	6f 93       	push	r22
 df6:	6e 7f       	andi	r22, 0xFE	; 254
 df8:	6e 5f       	subi	r22, 0xFE	; 254
 dfa:	7f 4f       	sbci	r23, 0xFF	; 255
 dfc:	8f 4f       	sbci	r24, 0xFF	; 255
 dfe:	9f 4f       	sbci	r25, 0xFF	; 255
 e00:	af 4f       	sbci	r26, 0xFF	; 255
 e02:	b1 e0       	ldi	r27, 0x01	; 1
 e04:	3e d0       	rcall	.+124    	; 0xe82 <__ultoa_invert+0x9c>
 e06:	b4 e0       	ldi	r27, 0x04	; 4
 e08:	3c d0       	rcall	.+120    	; 0xe82 <__ultoa_invert+0x9c>
 e0a:	67 0f       	add	r22, r23
 e0c:	78 1f       	adc	r23, r24
 e0e:	89 1f       	adc	r24, r25
 e10:	9a 1f       	adc	r25, r26
 e12:	a1 1d       	adc	r26, r1
 e14:	68 0f       	add	r22, r24
 e16:	79 1f       	adc	r23, r25
 e18:	8a 1f       	adc	r24, r26
 e1a:	91 1d       	adc	r25, r1
 e1c:	a1 1d       	adc	r26, r1
 e1e:	6a 0f       	add	r22, r26
 e20:	71 1d       	adc	r23, r1
 e22:	81 1d       	adc	r24, r1
 e24:	91 1d       	adc	r25, r1
 e26:	a1 1d       	adc	r26, r1
 e28:	20 d0       	rcall	.+64     	; 0xe6a <__ultoa_invert+0x84>
 e2a:	09 f4       	brne	.+2      	; 0xe2e <__ultoa_invert+0x48>
 e2c:	68 94       	set
 e2e:	3f 91       	pop	r19
 e30:	2a e0       	ldi	r18, 0x0A	; 10
 e32:	26 9f       	mul	r18, r22
 e34:	11 24       	eor	r1, r1
 e36:	30 19       	sub	r19, r0
 e38:	30 5d       	subi	r19, 0xD0	; 208
 e3a:	31 93       	st	Z+, r19
 e3c:	de f6       	brtc	.-74     	; 0xdf4 <__ultoa_invert+0xe>
 e3e:	cf 01       	movw	r24, r30
 e40:	08 95       	ret
 e42:	46 2f       	mov	r20, r22
 e44:	47 70       	andi	r20, 0x07	; 7
 e46:	40 5d       	subi	r20, 0xD0	; 208
 e48:	41 93       	st	Z+, r20
 e4a:	b3 e0       	ldi	r27, 0x03	; 3
 e4c:	0f d0       	rcall	.+30     	; 0xe6c <__ultoa_invert+0x86>
 e4e:	c9 f7       	brne	.-14     	; 0xe42 <__ultoa_invert+0x5c>
 e50:	f6 cf       	rjmp	.-20     	; 0xe3e <__ultoa_invert+0x58>
 e52:	46 2f       	mov	r20, r22
 e54:	4f 70       	andi	r20, 0x0F	; 15
 e56:	40 5d       	subi	r20, 0xD0	; 208
 e58:	4a 33       	cpi	r20, 0x3A	; 58
 e5a:	18 f0       	brcs	.+6      	; 0xe62 <__ultoa_invert+0x7c>
 e5c:	49 5d       	subi	r20, 0xD9	; 217
 e5e:	31 fd       	sbrc	r19, 1
 e60:	40 52       	subi	r20, 0x20	; 32
 e62:	41 93       	st	Z+, r20
 e64:	02 d0       	rcall	.+4      	; 0xe6a <__ultoa_invert+0x84>
 e66:	a9 f7       	brne	.-22     	; 0xe52 <__ultoa_invert+0x6c>
 e68:	ea cf       	rjmp	.-44     	; 0xe3e <__ultoa_invert+0x58>
 e6a:	b4 e0       	ldi	r27, 0x04	; 4
 e6c:	a6 95       	lsr	r26
 e6e:	97 95       	ror	r25
 e70:	87 95       	ror	r24
 e72:	77 95       	ror	r23
 e74:	67 95       	ror	r22
 e76:	ba 95       	dec	r27
 e78:	c9 f7       	brne	.-14     	; 0xe6c <__ultoa_invert+0x86>
 e7a:	00 97       	sbiw	r24, 0x00	; 0
 e7c:	61 05       	cpc	r22, r1
 e7e:	71 05       	cpc	r23, r1
 e80:	08 95       	ret
 e82:	9b 01       	movw	r18, r22
 e84:	ac 01       	movw	r20, r24
 e86:	0a 2e       	mov	r0, r26
 e88:	06 94       	lsr	r0
 e8a:	57 95       	ror	r21
 e8c:	47 95       	ror	r20
 e8e:	37 95       	ror	r19
 e90:	27 95       	ror	r18
 e92:	ba 95       	dec	r27
 e94:	c9 f7       	brne	.-14     	; 0xe88 <__ultoa_invert+0xa2>
 e96:	62 0f       	add	r22, r18
 e98:	73 1f       	adc	r23, r19
 e9a:	84 1f       	adc	r24, r20
 e9c:	95 1f       	adc	r25, r21
 e9e:	a0 1d       	adc	r26, r0
 ea0:	08 95       	ret

00000ea2 <__prologue_saves__>:
 ea2:	2f 92       	push	r2
 ea4:	3f 92       	push	r3
 ea6:	4f 92       	push	r4
 ea8:	5f 92       	push	r5
 eaa:	6f 92       	push	r6
 eac:	7f 92       	push	r7
 eae:	8f 92       	push	r8
 eb0:	9f 92       	push	r9
 eb2:	af 92       	push	r10
 eb4:	bf 92       	push	r11
 eb6:	cf 92       	push	r12
 eb8:	df 92       	push	r13
 eba:	ef 92       	push	r14
 ebc:	ff 92       	push	r15
 ebe:	0f 93       	push	r16
 ec0:	1f 93       	push	r17
 ec2:	cf 93       	push	r28
 ec4:	df 93       	push	r29
 ec6:	cd b7       	in	r28, 0x3d	; 61
 ec8:	de b7       	in	r29, 0x3e	; 62
 eca:	ca 1b       	sub	r28, r26
 ecc:	db 0b       	sbc	r29, r27
 ece:	cd bf       	out	0x3d, r28	; 61
 ed0:	de bf       	out	0x3e, r29	; 62
 ed2:	09 94       	ijmp

00000ed4 <__epilogue_restores__>:
 ed4:	2a 88       	ldd	r2, Y+18	; 0x12
 ed6:	39 88       	ldd	r3, Y+17	; 0x11
 ed8:	48 88       	ldd	r4, Y+16	; 0x10
 eda:	5f 84       	ldd	r5, Y+15	; 0x0f
 edc:	6e 84       	ldd	r6, Y+14	; 0x0e
 ede:	7d 84       	ldd	r7, Y+13	; 0x0d
 ee0:	8c 84       	ldd	r8, Y+12	; 0x0c
 ee2:	9b 84       	ldd	r9, Y+11	; 0x0b
 ee4:	aa 84       	ldd	r10, Y+10	; 0x0a
 ee6:	b9 84       	ldd	r11, Y+9	; 0x09
 ee8:	c8 84       	ldd	r12, Y+8	; 0x08
 eea:	df 80       	ldd	r13, Y+7	; 0x07
 eec:	ee 80       	ldd	r14, Y+6	; 0x06
 eee:	fd 80       	ldd	r15, Y+5	; 0x05
 ef0:	0c 81       	ldd	r16, Y+4	; 0x04
 ef2:	1b 81       	ldd	r17, Y+3	; 0x03
 ef4:	aa 81       	ldd	r26, Y+2	; 0x02
 ef6:	b9 81       	ldd	r27, Y+1	; 0x01
 ef8:	ce 0f       	add	r28, r30
 efa:	d1 1d       	adc	r29, r1
 efc:	cd bf       	out	0x3d, r28	; 61
 efe:	de bf       	out	0x3e, r29	; 62
 f00:	ed 01       	movw	r28, r26
 f02:	08 95       	ret

00000f04 <_exit>:
 f04:	f8 94       	cli

00000f06 <__stop_program>:
 f06:	ff cf       	rjmp	.-2      	; 0xf06 <__stop_program>
