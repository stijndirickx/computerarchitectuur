
gamecontroller.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000d36  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000001a  00802000  00000d36  00000dca  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000011  0080201a  0080201a  00000de4  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000de4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000e40  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000190  00000000  00000000  00000e80  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000eb3  00000000  00000000  00001010  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000062e  00000000  00000000  00001ec3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000018e7  00000000  00000000  000024f1  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000384  00000000  00000000  00003dd8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00011d1d  00000000  00000000  0000415c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000586  00000000  00000000  00015e79  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000100  00000000  00000000  000163ff  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  000058d5  00000000  00000000  000164ff  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 b6 00 	jmp	0x16c	; 0x16c <__ctors_end>
   4:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
   8:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
   c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  10:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  14:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  18:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  1c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  20:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  24:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  28:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  2c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  30:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  34:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  38:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  3c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  40:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  44:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  48:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  4c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  50:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  54:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  58:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  5c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  60:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  64:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  68:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  6c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  70:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  74:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  78:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  7c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  80:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  84:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  88:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  8c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  90:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  94:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  98:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  9c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  a0:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  a4:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  a8:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  ac:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  b0:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  b4:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  b8:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  bc:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  c0:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  c4:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  c8:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  cc:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  d0:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  d4:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  d8:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  dc:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  e0:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  e4:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  e8:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  ec:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  f0:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  f4:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  f8:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  fc:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 100:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 104:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 108:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 10c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 110:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 114:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 118:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 11c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 120:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 124:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 128:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 12c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 130:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 134:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 138:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 13c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 140:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 144:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 148:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 14c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 150:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 154:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 158:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 15c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 160:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 164:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 168:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>

0000016c <__ctors_end>:
 16c:	11 24       	eor	r1, r1
 16e:	1f be       	out	0x3f, r1	; 63
 170:	cf ef       	ldi	r28, 0xFF	; 255
 172:	cd bf       	out	0x3d, r28	; 61
 174:	d7 e2       	ldi	r29, 0x27	; 39
 176:	de bf       	out	0x3e, r29	; 62

00000178 <__do_copy_data>:
 178:	10 e2       	ldi	r17, 0x20	; 32
 17a:	a0 e0       	ldi	r26, 0x00	; 0
 17c:	b0 e2       	ldi	r27, 0x20	; 32
 17e:	e6 e3       	ldi	r30, 0x36	; 54
 180:	fd e0       	ldi	r31, 0x0D	; 13
 182:	02 c0       	rjmp	.+4      	; 0x188 <__do_copy_data+0x10>
 184:	05 90       	lpm	r0, Z+
 186:	0d 92       	st	X+, r0
 188:	aa 31       	cpi	r26, 0x1A	; 26
 18a:	b1 07       	cpc	r27, r17
 18c:	d9 f7       	brne	.-10     	; 0x184 <__do_copy_data+0xc>

0000018e <__do_clear_bss>:
 18e:	20 e2       	ldi	r18, 0x20	; 32
 190:	aa e1       	ldi	r26, 0x1A	; 26
 192:	b0 e2       	ldi	r27, 0x20	; 32
 194:	01 c0       	rjmp	.+2      	; 0x198 <.do_clear_bss_start>

00000196 <.do_clear_bss_loop>:
 196:	1d 92       	st	X+, r1

00000198 <.do_clear_bss_start>:
 198:	ab 32       	cpi	r26, 0x2B	; 43
 19a:	b2 07       	cpc	r27, r18
 19c:	e1 f7       	brne	.-8      	; 0x196 <.do_clear_bss_loop>
 19e:	0e 94 fd 00 	call	0x1fa	; 0x1fa <main>
 1a2:	0c 94 99 06 	jmp	0xd32	; 0xd32 <_exit>

000001a6 <__bad_interrupt>:
 1a6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001aa <AccInit>:
#include "acc.h"



void AccInit(void)
{
 1aa:	cf 93       	push	r28
 1ac:	df 93       	push	r29
 1ae:	cd b7       	in	r28, 0x3d	; 61
 1b0:	de b7       	in	r29, 0x3e	; 62

	
}
 1b2:	00 00       	nop
 1b4:	df 91       	pop	r29
 1b6:	cf 91       	pop	r28
 1b8:	08 95       	ret

000001ba <AnalogInit>:
#include "Analog.h"
#include <avr/io.h>

void AnalogInit(void)
{
 1ba:	cf 93       	push	r28
 1bc:	df 93       	push	r29
 1be:	cd b7       	in	r28, 0x3d	; 61
 1c0:	de b7       	in	r29, 0x3e	; 62

}
 1c2:	00 00       	nop
 1c4:	df 91       	pop	r29
 1c6:	cf 91       	pop	r28
 1c8:	08 95       	ret

000001ca <ClockInit>:
#pragma GCC push_options
#pragma GCC optimize ("O2") //This function must be optimized to avoid too long time interval betwee CCP write and CLK.CTRL write (4 CLK CYC max)

void ClockInit(void)
{
	OSC.XOSCCTRL=0b11001011; //Clock<=16MHz	
 1ca:	8b ec       	ldi	r24, 0xCB	; 203
 1cc:	80 93 52 00 	sts	0x0052, r24	; 0x800052 <__TEXT_REGION_LENGTH__+0x700052>
	OSC.CTRL=0b01000; //Enable oscillator	
 1d0:	88 e0       	ldi	r24, 0x08	; 8
 1d2:	80 93 50 00 	sts	0x0050, r24	; 0x800050 <__TEXT_REGION_LENGTH__+0x700050>
	while (!(OSC.STATUS&0b1000)); //Wait until XTAL osc is ready
 1d6:	80 91 51 00 	lds	r24, 0x0051	; 0x800051 <__TEXT_REGION_LENGTH__+0x700051>
 1da:	83 ff       	sbrs	r24, 3
 1dc:	fc cf       	rjmp	.-8      	; 0x1d6 <ClockInit+0xc>
	
	//Select XTAL osc as system CLK source
	CCP=0xd8;
 1de:	88 ed       	ldi	r24, 0xD8	; 216
 1e0:	84 bf       	out	0x34, r24	; 52
    CLK.CTRL=0b0011;
 1e2:	83 e0       	ldi	r24, 0x03	; 3
 1e4:	80 93 40 00 	sts	0x0040, r24	; 0x800040 <__TEXT_REGION_LENGTH__+0x700040>
 1e8:	08 95       	ret

000001ea <EncoderInit>:
#include <util/delay.h>
#include <stdio.h>
#include "encoder.h"

void EncoderInit(void)
{
 1ea:	cf 93       	push	r28
 1ec:	df 93       	push	r29
 1ee:	cd b7       	in	r28, 0x3d	; 61
 1f0:	de b7       	in	r29, 0x3e	; 62

}
 1f2:	00 00       	nop
 1f4:	df 91       	pop	r29
 1f6:	cf 91       	pop	r28
 1f8:	08 95       	ret

000001fa <main>:
char a;

void SimpleFunction(void);	//A simple function: print a counter (0 to 9) to the terminal

int main(void)
{	
 1fa:	cf 93       	push	r28
 1fc:	df 93       	push	r29
 1fe:	cd b7       	in	r28, 0x3d	; 61
 200:	de b7       	in	r29, 0x3e	; 62
 202:	2e 97       	sbiw	r28, 0x0e	; 14
 204:	cd bf       	out	0x3d, r28	; 61
 206:	de bf       	out	0x3e, r29	; 62

	
	//###1###
	 
	//Initialize subsystems
	ClockInit();			//Initialize system clock (16 MHz)
 208:	0e 94 e5 00 	call	0x1ca	; 0x1ca <ClockInit>
	USARTInit();			//Initialize USART and bind to stdout,stdin
 20c:	0e 94 01 02 	call	0x402	; 0x402 <USARTInit>
	AnalogInit();			//Initialize ADC
 210:	0e 94 dd 00 	call	0x1ba	; 0x1ba <AnalogInit>
	AccInit();				//Initialize accelerometer system
 214:	0e 94 d5 00 	call	0x1aa	; 0x1aa <AccInit>
	LEDInit();				//Initialize LEDs
 218:	0e 94 d0 01 	call	0x3a0	; 0x3a0 <LEDInit>
	SwitchInit();			//Initialize switches
 21c:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <SwitchInit>
	EncoderInit();			//Initialize encoder
 220:	0e 94 f5 00 	call	0x1ea	; 0x1ea <EncoderInit>
	SpeakerInit();			//Initialize speaker system
 224:	0e 94 d8 01 	call	0x3b0	; 0x3b0 <SpeakerInit>
	
	//Enable interrupts
	PMIC.CTRL|=0b00000111;  //Enable low, medium, high priority interrupts
 228:	80 ea       	ldi	r24, 0xA0	; 160
 22a:	90 e0       	ldi	r25, 0x00	; 0
 22c:	20 ea       	ldi	r18, 0xA0	; 160
 22e:	30 e0       	ldi	r19, 0x00	; 0
 230:	f9 01       	movw	r30, r18
 232:	22 81       	ldd	r18, Z+2	; 0x02
 234:	27 60       	ori	r18, 0x07	; 7
 236:	fc 01       	movw	r30, r24
 238:	22 83       	std	Z+2, r18	; 0x02
	SREG|=0b10000000;		//Globale interrupt enable
 23a:	8f e3       	ldi	r24, 0x3F	; 63
 23c:	90 e0       	ldi	r25, 0x00	; 0
 23e:	2f e3       	ldi	r18, 0x3F	; 63
 240:	30 e0       	ldi	r19, 0x00	; 0
 242:	f9 01       	movw	r30, r18
 244:	20 81       	ld	r18, Z
 246:	20 68       	ori	r18, 0x80	; 128
 248:	fc 01       	movw	r30, r24
 24a:	20 83       	st	Z, r18
 24c:	80 e0       	ldi	r24, 0x00	; 0
 24e:	90 e0       	ldi	r25, 0x00	; 0
 250:	aa ef       	ldi	r26, 0xFA	; 250
 252:	b3 e4       	ldi	r27, 0x43	; 67
 254:	89 83       	std	Y+1, r24	; 0x01
 256:	9a 83       	std	Y+2, r25	; 0x02
 258:	ab 83       	std	Y+3, r26	; 0x03
 25a:	bc 83       	std	Y+4, r27	; 0x04

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
 25c:	20 e0       	ldi	r18, 0x00	; 0
 25e:	30 e0       	ldi	r19, 0x00	; 0
 260:	4a e7       	ldi	r20, 0x7A	; 122
 262:	55 e4       	ldi	r21, 0x45	; 69
 264:	69 81       	ldd	r22, Y+1	; 0x01
 266:	7a 81       	ldd	r23, Y+2	; 0x02
 268:	8b 81       	ldd	r24, Y+3	; 0x03
 26a:	9c 81       	ldd	r25, Y+4	; 0x04
 26c:	0e 94 fc 02 	call	0x5f8	; 0x5f8 <__mulsf3>
 270:	dc 01       	movw	r26, r24
 272:	cb 01       	movw	r24, r22
 274:	8d 83       	std	Y+5, r24	; 0x05
 276:	9e 83       	std	Y+6, r25	; 0x06
 278:	af 83       	std	Y+7, r26	; 0x07
 27a:	b8 87       	std	Y+8, r27	; 0x08
	if (__tmp < 1.0)
 27c:	20 e0       	ldi	r18, 0x00	; 0
 27e:	30 e0       	ldi	r19, 0x00	; 0
 280:	40 e8       	ldi	r20, 0x80	; 128
 282:	5f e3       	ldi	r21, 0x3F	; 63
 284:	6d 81       	ldd	r22, Y+5	; 0x05
 286:	7e 81       	ldd	r23, Y+6	; 0x06
 288:	8f 81       	ldd	r24, Y+7	; 0x07
 28a:	98 85       	ldd	r25, Y+8	; 0x08
 28c:	0e 94 76 02 	call	0x4ec	; 0x4ec <__cmpsf2>
 290:	88 23       	and	r24, r24
 292:	2c f4       	brge	.+10     	; 0x29e <main+0xa4>
		__ticks = 1;
 294:	81 e0       	ldi	r24, 0x01	; 1
 296:	90 e0       	ldi	r25, 0x00	; 0
 298:	89 87       	std	Y+9, r24	; 0x09
 29a:	9a 87       	std	Y+10, r25	; 0x0a
 29c:	3f c0       	rjmp	.+126    	; 0x31c <main+0x122>
	else if (__tmp > 65535)
 29e:	20 e0       	ldi	r18, 0x00	; 0
 2a0:	3f ef       	ldi	r19, 0xFF	; 255
 2a2:	4f e7       	ldi	r20, 0x7F	; 127
 2a4:	57 e4       	ldi	r21, 0x47	; 71
 2a6:	6d 81       	ldd	r22, Y+5	; 0x05
 2a8:	7e 81       	ldd	r23, Y+6	; 0x06
 2aa:	8f 81       	ldd	r24, Y+7	; 0x07
 2ac:	98 85       	ldd	r25, Y+8	; 0x08
 2ae:	0e 94 f7 02 	call	0x5ee	; 0x5ee <__gesf2>
 2b2:	18 16       	cp	r1, r24
 2b4:	4c f5       	brge	.+82     	; 0x308 <main+0x10e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 2b6:	20 e0       	ldi	r18, 0x00	; 0
 2b8:	30 e0       	ldi	r19, 0x00	; 0
 2ba:	40 e2       	ldi	r20, 0x20	; 32
 2bc:	51 e4       	ldi	r21, 0x41	; 65
 2be:	69 81       	ldd	r22, Y+1	; 0x01
 2c0:	7a 81       	ldd	r23, Y+2	; 0x02
 2c2:	8b 81       	ldd	r24, Y+3	; 0x03
 2c4:	9c 81       	ldd	r25, Y+4	; 0x04
 2c6:	0e 94 fc 02 	call	0x5f8	; 0x5f8 <__mulsf3>
 2ca:	dc 01       	movw	r26, r24
 2cc:	cb 01       	movw	r24, r22
 2ce:	bc 01       	movw	r22, r24
 2d0:	cd 01       	movw	r24, r26
 2d2:	0e 94 7b 02 	call	0x4f6	; 0x4f6 <__fixunssfsi>
 2d6:	dc 01       	movw	r26, r24
 2d8:	cb 01       	movw	r24, r22
 2da:	89 87       	std	Y+9, r24	; 0x09
 2dc:	9a 87       	std	Y+10, r25	; 0x0a
 2de:	0f c0       	rjmp	.+30     	; 0x2fe <main+0x104>
 2e0:	80 e9       	ldi	r24, 0x90	; 144
 2e2:	91 e0       	ldi	r25, 0x01	; 1
 2e4:	8b 87       	std	Y+11, r24	; 0x0b
 2e6:	9c 87       	std	Y+12, r25	; 0x0c
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
 2e8:	8b 85       	ldd	r24, Y+11	; 0x0b
 2ea:	9c 85       	ldd	r25, Y+12	; 0x0c
 2ec:	01 97       	sbiw	r24, 0x01	; 1
 2ee:	f1 f7       	brne	.-4      	; 0x2ec <main+0xf2>
 2f0:	8b 87       	std	Y+11, r24	; 0x0b
 2f2:	9c 87       	std	Y+12, r25	; 0x0c
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 2f4:	89 85       	ldd	r24, Y+9	; 0x09
 2f6:	9a 85       	ldd	r25, Y+10	; 0x0a
 2f8:	01 97       	sbiw	r24, 0x01	; 1
 2fa:	89 87       	std	Y+9, r24	; 0x09
 2fc:	9a 87       	std	Y+10, r25	; 0x0a
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 2fe:	89 85       	ldd	r24, Y+9	; 0x09
 300:	9a 85       	ldd	r25, Y+10	; 0x0a
 302:	89 2b       	or	r24, r25
 304:	69 f7       	brne	.-38     	; 0x2e0 <main+0xe6>
 306:	14 c0       	rjmp	.+40     	; 0x330 <main+0x136>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 308:	6d 81       	ldd	r22, Y+5	; 0x05
 30a:	7e 81       	ldd	r23, Y+6	; 0x06
 30c:	8f 81       	ldd	r24, Y+7	; 0x07
 30e:	98 85       	ldd	r25, Y+8	; 0x08
 310:	0e 94 7b 02 	call	0x4f6	; 0x4f6 <__fixunssfsi>
 314:	dc 01       	movw	r26, r24
 316:	cb 01       	movw	r24, r22
 318:	89 87       	std	Y+9, r24	; 0x09
 31a:	9a 87       	std	Y+10, r25	; 0x0a
 31c:	89 85       	ldd	r24, Y+9	; 0x09
 31e:	9a 85       	ldd	r25, Y+10	; 0x0a
 320:	8d 87       	std	Y+13, r24	; 0x0d
 322:	9e 87       	std	Y+14, r25	; 0x0e
 324:	8d 85       	ldd	r24, Y+13	; 0x0d
 326:	9e 85       	ldd	r25, Y+14	; 0x0e
 328:	01 97       	sbiw	r24, 0x01	; 1
 32a:	f1 f7       	brne	.-4      	; 0x328 <main+0x12e>
 32c:	8d 87       	std	Y+13, r24	; 0x0d
 32e:	9e 87       	std	Y+14, r25	; 0x0e
	_delay_ms(500);

	//###2###	
	SimpleFunction();
 330:	0e 94 9b 01 	call	0x336	; 0x336 <SimpleFunction>
	
	while (1);
 334:	ff cf       	rjmp	.-2      	; 0x334 <main+0x13a>

00000336 <SimpleFunction>:
}

void SimpleFunction(void)
{
 336:	cf 93       	push	r28
 338:	df 93       	push	r29
 33a:	cd b7       	in	r28, 0x3d	; 61
 33c:	de b7       	in	r29, 0x3e	; 62
	for (a=0;a<10;a++)
 33e:	10 92 24 20 	sts	0x2024, r1	; 0x802024 <a>
 342:	26 c0       	rjmp	.+76     	; 0x390 <SimpleFunction+0x5a>
	{
		//sprintf zet de a om in asci code, deze ascii code ligt hoger dan 10, dus stopt de loop
		printf(text,"Counter:%d\r",a);
 344:	80 91 24 20 	lds	r24, 0x2024	; 0x802024 <a>
 348:	88 2f       	mov	r24, r24
 34a:	90 e0       	ldi	r25, 0x00	; 0
 34c:	29 2f       	mov	r18, r25
 34e:	2f 93       	push	r18
 350:	8f 93       	push	r24
 352:	8e e0       	ldi	r24, 0x0E	; 14
 354:	90 e2       	ldi	r25, 0x20	; 32
 356:	89 2f       	mov	r24, r25
 358:	8f 93       	push	r24
 35a:	8e e0       	ldi	r24, 0x0E	; 14
 35c:	90 e2       	ldi	r25, 0x20	; 32
 35e:	8f 93       	push	r24
 360:	8a e1       	ldi	r24, 0x1A	; 26
 362:	90 e2       	ldi	r25, 0x20	; 32
 364:	89 2f       	mov	r24, r25
 366:	8f 93       	push	r24
 368:	8a e1       	ldi	r24, 0x1A	; 26
 36a:	90 e2       	ldi	r25, 0x20	; 32
 36c:	8f 93       	push	r24
 36e:	0e 94 91 03 	call	0x722	; 0x722 <printf>
 372:	0f 90       	pop	r0
 374:	0f 90       	pop	r0
 376:	0f 90       	pop	r0
 378:	0f 90       	pop	r0
 37a:	0f 90       	pop	r0
 37c:	0f 90       	pop	r0
		puts(text);
 37e:	8a e1       	ldi	r24, 0x1A	; 26
 380:	90 e2       	ldi	r25, 0x20	; 32
 382:	0e 94 a7 03 	call	0x74e	; 0x74e <puts>
	while (1);
}

void SimpleFunction(void)
{
	for (a=0;a<10;a++)
 386:	80 91 24 20 	lds	r24, 0x2024	; 0x802024 <a>
 38a:	8f 5f       	subi	r24, 0xFF	; 255
 38c:	80 93 24 20 	sts	0x2024, r24	; 0x802024 <a>
 390:	80 91 24 20 	lds	r24, 0x2024	; 0x802024 <a>
 394:	8a 30       	cpi	r24, 0x0A	; 10
 396:	b0 f2       	brcs	.-84     	; 0x344 <SimpleFunction+0xe>
	{
		//sprintf zet de a om in asci code, deze ascii code ligt hoger dan 10, dus stopt de loop
		printf(text,"Counter:%d\r",a);
		puts(text);
	}
 398:	00 00       	nop
 39a:	df 91       	pop	r29
 39c:	cf 91       	pop	r28
 39e:	08 95       	ret

000003a0 <LEDInit>:
#include "LED.h"
#include <avr/io.h>

void LEDInit(void)
{
 3a0:	cf 93       	push	r28
 3a2:	df 93       	push	r29
 3a4:	cd b7       	in	r28, 0x3d	; 61
 3a6:	de b7       	in	r29, 0x3e	; 62
	//PORTE.PIN0CTRL=
	//PORTE.PIN1CTRL=
	//PORTE.PIN2CTRL=
	//PORTE.PIN3CTRL=
	
}
 3a8:	00 00       	nop
 3aa:	df 91       	pop	r29
 3ac:	cf 91       	pop	r28
 3ae:	08 95       	ret

000003b0 <SpeakerInit>:
#include <avr/io.h>
#include <avr/interrupt.h>
#include "speaker.h"

void SpeakerInit(void)
{
 3b0:	cf 93       	push	r28
 3b2:	df 93       	push	r29
 3b4:	cd b7       	in	r28, 0x3d	; 61
 3b6:	de b7       	in	r29, 0x3e	; 62
		//TCC1.CTRLB=
		//TCC1.CTRLC=
		//TCC1.CTRLD=
		//TCC1.CTRLE=
		
}
 3b8:	00 00       	nop
 3ba:	df 91       	pop	r29
 3bc:	cf 91       	pop	r28
 3be:	08 95       	ret

000003c0 <SwitchInit>:
#include "switch.h"
#include <avr/io.h>

void SwitchInit(void)
{
 3c0:	cf 93       	push	r28
 3c2:	df 93       	push	r29
 3c4:	cd b7       	in	r28, 0x3d	; 61
 3c6:	de b7       	in	r29, 0x3e	; 62
	//11,13,15 p124
	
	//PORTD.DIRCLR=
	PORTD.PIN0CTRL= 0b00000001;//indrukkenn
 3c8:	80 e6       	ldi	r24, 0x60	; 96
 3ca:	96 e0       	ldi	r25, 0x06	; 6
 3cc:	21 e0       	ldi	r18, 0x01	; 1
 3ce:	fc 01       	movw	r30, r24
 3d0:	20 8b       	std	Z+16, r18	; 0x10
	PORTD.PIN4CTRL= 0b00000001;//rechts
 3d2:	80 e6       	ldi	r24, 0x60	; 96
 3d4:	96 e0       	ldi	r25, 0x06	; 6
 3d6:	21 e0       	ldi	r18, 0x01	; 1
 3d8:	fc 01       	movw	r30, r24
 3da:	24 8b       	std	Z+20, r18	; 0x14
	PORTD.PIN5CTRL= '00000001';//beneden
 3dc:	80 e6       	ldi	r24, 0x60	; 96
 3de:	96 e0       	ldi	r25, 0x06	; 6
 3e0:	21 e3       	ldi	r18, 0x31	; 49
 3e2:	fc 01       	movw	r30, r24
 3e4:	25 8b       	std	Z+21, r18	; 0x15
	PORTD.PIN6CTRL= '00000001';//links
 3e6:	80 e6       	ldi	r24, 0x60	; 96
 3e8:	96 e0       	ldi	r25, 0x06	; 6
 3ea:	21 e3       	ldi	r18, 0x31	; 49
 3ec:	fc 01       	movw	r30, r24
 3ee:	26 8b       	std	Z+22, r18	; 0x16
	PORTD.PIN7CTRL= '00000001';//omhoog
 3f0:	80 e6       	ldi	r24, 0x60	; 96
 3f2:	96 e0       	ldi	r25, 0x06	; 6
 3f4:	21 e3       	ldi	r18, 0x31	; 49
 3f6:	fc 01       	movw	r30, r24
 3f8:	27 8b       	std	Z+23, r18	; 0x17
}
 3fa:	00 00       	nop
 3fc:	df 91       	pop	r29
 3fe:	cf 91       	pop	r28
 400:	08 95       	ret

00000402 <USARTInit>:
static int stdio_putchar(char c, FILE * stream);
static int stdio_getchar(FILE *stream);
static FILE UsartStdio = FDEV_SETUP_STREAM(stdio_putchar, stdio_getchar,_FDEV_SETUP_WRITE);

void USARTInit(void)
{
 402:	cf 93       	push	r28
 404:	df 93       	push	r29
 406:	cd b7       	in	r28, 0x3d	; 61
 408:	de b7       	in	r29, 0x3e	; 62
	USART_PORT.DIRSET=0b00001000;	
 40a:	80 e6       	ldi	r24, 0x60	; 96
 40c:	96 e0       	ldi	r25, 0x06	; 6
 40e:	28 e0       	ldi	r18, 0x08	; 8
 410:	fc 01       	movw	r30, r24
 412:	21 83       	std	Z+1, r18	; 0x01
	USART_PORT.DIRCLR=0b00000100;
 414:	80 e6       	ldi	r24, 0x60	; 96
 416:	96 e0       	ldi	r25, 0x06	; 6
 418:	24 e0       	ldi	r18, 0x04	; 4
 41a:	fc 01       	movw	r30, r24
 41c:	22 83       	std	Z+2, r18	; 0x02
	
	USART.CTRLA=0b00000000;
 41e:	80 ea       	ldi	r24, 0xA0	; 160
 420:	99 e0       	ldi	r25, 0x09	; 9
 422:	fc 01       	movw	r30, r24
 424:	13 82       	std	Z+3, r1	; 0x03
	USART.CTRLB=0b00011000;
 426:	80 ea       	ldi	r24, 0xA0	; 160
 428:	99 e0       	ldi	r25, 0x09	; 9
 42a:	28 e1       	ldi	r18, 0x18	; 24
 42c:	fc 01       	movw	r30, r24
 42e:	24 83       	std	Z+4, r18	; 0x04
	USART.CTRLC=0b00000011;
 430:	80 ea       	ldi	r24, 0xA0	; 160
 432:	99 e0       	ldi	r25, 0x09	; 9
 434:	23 e0       	ldi	r18, 0x03	; 3
 436:	fc 01       	movw	r30, r24
 438:	25 83       	std	Z+5, r18	; 0x05
	
	USART.BAUDCTRLA=0xE5; //BSEL=3301, BSCALE=-5 9600 baud
 43a:	80 ea       	ldi	r24, 0xA0	; 160
 43c:	99 e0       	ldi	r25, 0x09	; 9
 43e:	25 ee       	ldi	r18, 0xE5	; 229
 440:	fc 01       	movw	r30, r24
 442:	26 83       	std	Z+6, r18	; 0x06
	USART.BAUDCTRLB=0xBC; 
 444:	80 ea       	ldi	r24, 0xA0	; 160
 446:	99 e0       	ldi	r25, 0x09	; 9
 448:	2c eb       	ldi	r18, 0xBC	; 188
 44a:	fc 01       	movw	r30, r24
 44c:	27 83       	std	Z+7, r18	; 0x07
	
	stdout=&UsartStdio;
 44e:	80 e0       	ldi	r24, 0x00	; 0
 450:	90 e2       	ldi	r25, 0x20	; 32
 452:	80 93 27 20 	sts	0x2027, r24	; 0x802027 <__iob+0x2>
 456:	90 93 28 20 	sts	0x2028, r25	; 0x802028 <__iob+0x3>
	stdin=&UsartStdio;
 45a:	80 e0       	ldi	r24, 0x00	; 0
 45c:	90 e2       	ldi	r25, 0x20	; 32
 45e:	80 93 25 20 	sts	0x2025, r24	; 0x802025 <__iob>
 462:	90 93 26 20 	sts	0x2026, r25	; 0x802026 <__iob+0x1>
}
 466:	00 00       	nop
 468:	df 91       	pop	r29
 46a:	cf 91       	pop	r28
 46c:	08 95       	ret

0000046e <stdio_putchar>:


static int stdio_putchar(char c, FILE * stream)
{
 46e:	cf 93       	push	r28
 470:	df 93       	push	r29
 472:	00 d0       	rcall	.+0      	; 0x474 <stdio_putchar+0x6>
 474:	1f 92       	push	r1
 476:	cd b7       	in	r28, 0x3d	; 61
 478:	de b7       	in	r29, 0x3e	; 62
 47a:	89 83       	std	Y+1, r24	; 0x01
 47c:	6a 83       	std	Y+2, r22	; 0x02
 47e:	7b 83       	std	Y+3, r23	; 0x03
	USART.DATA = c;
 480:	80 ea       	ldi	r24, 0xA0	; 160
 482:	99 e0       	ldi	r25, 0x09	; 9
 484:	29 81       	ldd	r18, Y+1	; 0x01
 486:	fc 01       	movw	r30, r24
 488:	20 83       	st	Z, r18
	while (!(USART.STATUS & 0b01000000));
 48a:	00 00       	nop
 48c:	80 ea       	ldi	r24, 0xA0	; 160
 48e:	99 e0       	ldi	r25, 0x09	; 9
 490:	fc 01       	movw	r30, r24
 492:	81 81       	ldd	r24, Z+1	; 0x01
 494:	88 2f       	mov	r24, r24
 496:	90 e0       	ldi	r25, 0x00	; 0
 498:	80 74       	andi	r24, 0x40	; 64
 49a:	99 27       	eor	r25, r25
 49c:	89 2b       	or	r24, r25
 49e:	b1 f3       	breq	.-20     	; 0x48c <stdio_putchar+0x1e>
	USART.STATUS=0b01000000;
 4a0:	80 ea       	ldi	r24, 0xA0	; 160
 4a2:	99 e0       	ldi	r25, 0x09	; 9
 4a4:	20 e4       	ldi	r18, 0x40	; 64
 4a6:	fc 01       	movw	r30, r24
 4a8:	21 83       	std	Z+1, r18	; 0x01
	return 0;
 4aa:	80 e0       	ldi	r24, 0x00	; 0
 4ac:	90 e0       	ldi	r25, 0x00	; 0
}
 4ae:	23 96       	adiw	r28, 0x03	; 3
 4b0:	cd bf       	out	0x3d, r28	; 61
 4b2:	de bf       	out	0x3e, r29	; 62
 4b4:	df 91       	pop	r29
 4b6:	cf 91       	pop	r28
 4b8:	08 95       	ret

000004ba <stdio_getchar>:
	
static int stdio_getchar(FILE *stream)
{
 4ba:	cf 93       	push	r28
 4bc:	df 93       	push	r29
 4be:	00 d0       	rcall	.+0      	; 0x4c0 <stdio_getchar+0x6>
 4c0:	cd b7       	in	r28, 0x3d	; 61
 4c2:	de b7       	in	r29, 0x3e	; 62
 4c4:	89 83       	std	Y+1, r24	; 0x01
 4c6:	9a 83       	std	Y+2, r25	; 0x02
	while (!(USART.STATUS & 0b10000000));
 4c8:	00 00       	nop
 4ca:	80 ea       	ldi	r24, 0xA0	; 160
 4cc:	99 e0       	ldi	r25, 0x09	; 9
 4ce:	fc 01       	movw	r30, r24
 4d0:	81 81       	ldd	r24, Z+1	; 0x01
 4d2:	88 23       	and	r24, r24
 4d4:	d4 f7       	brge	.-12     	; 0x4ca <stdio_getchar+0x10>
	return USART.DATA;
 4d6:	80 ea       	ldi	r24, 0xA0	; 160
 4d8:	99 e0       	ldi	r25, 0x09	; 9
 4da:	fc 01       	movw	r30, r24
 4dc:	80 81       	ld	r24, Z
 4de:	88 2f       	mov	r24, r24
 4e0:	90 e0       	ldi	r25, 0x00	; 0
}
 4e2:	0f 90       	pop	r0
 4e4:	0f 90       	pop	r0
 4e6:	df 91       	pop	r29
 4e8:	cf 91       	pop	r28
 4ea:	08 95       	ret

000004ec <__cmpsf2>:
 4ec:	0e 94 aa 02 	call	0x554	; 0x554 <__fp_cmp>
 4f0:	08 f4       	brcc	.+2      	; 0x4f4 <__cmpsf2+0x8>
 4f2:	81 e0       	ldi	r24, 0x01	; 1
 4f4:	08 95       	ret

000004f6 <__fixunssfsi>:
 4f6:	0e 94 d6 02 	call	0x5ac	; 0x5ac <__fp_splitA>
 4fa:	88 f0       	brcs	.+34     	; 0x51e <__fixunssfsi+0x28>
 4fc:	9f 57       	subi	r25, 0x7F	; 127
 4fe:	98 f0       	brcs	.+38     	; 0x526 <__fixunssfsi+0x30>
 500:	b9 2f       	mov	r27, r25
 502:	99 27       	eor	r25, r25
 504:	b7 51       	subi	r27, 0x17	; 23
 506:	b0 f0       	brcs	.+44     	; 0x534 <__fixunssfsi+0x3e>
 508:	e1 f0       	breq	.+56     	; 0x542 <__fixunssfsi+0x4c>
 50a:	66 0f       	add	r22, r22
 50c:	77 1f       	adc	r23, r23
 50e:	88 1f       	adc	r24, r24
 510:	99 1f       	adc	r25, r25
 512:	1a f0       	brmi	.+6      	; 0x51a <__fixunssfsi+0x24>
 514:	ba 95       	dec	r27
 516:	c9 f7       	brne	.-14     	; 0x50a <__fixunssfsi+0x14>
 518:	14 c0       	rjmp	.+40     	; 0x542 <__fixunssfsi+0x4c>
 51a:	b1 30       	cpi	r27, 0x01	; 1
 51c:	91 f0       	breq	.+36     	; 0x542 <__fixunssfsi+0x4c>
 51e:	0e 94 f0 02 	call	0x5e0	; 0x5e0 <__fp_zero>
 522:	b1 e0       	ldi	r27, 0x01	; 1
 524:	08 95       	ret
 526:	0c 94 f0 02 	jmp	0x5e0	; 0x5e0 <__fp_zero>
 52a:	67 2f       	mov	r22, r23
 52c:	78 2f       	mov	r23, r24
 52e:	88 27       	eor	r24, r24
 530:	b8 5f       	subi	r27, 0xF8	; 248
 532:	39 f0       	breq	.+14     	; 0x542 <__fixunssfsi+0x4c>
 534:	b9 3f       	cpi	r27, 0xF9	; 249
 536:	cc f3       	brlt	.-14     	; 0x52a <__fixunssfsi+0x34>
 538:	86 95       	lsr	r24
 53a:	77 95       	ror	r23
 53c:	67 95       	ror	r22
 53e:	b3 95       	inc	r27
 540:	d9 f7       	brne	.-10     	; 0x538 <__fixunssfsi+0x42>
 542:	3e f4       	brtc	.+14     	; 0x552 <__fixunssfsi+0x5c>
 544:	90 95       	com	r25
 546:	80 95       	com	r24
 548:	70 95       	com	r23
 54a:	61 95       	neg	r22
 54c:	7f 4f       	sbci	r23, 0xFF	; 255
 54e:	8f 4f       	sbci	r24, 0xFF	; 255
 550:	9f 4f       	sbci	r25, 0xFF	; 255
 552:	08 95       	ret

00000554 <__fp_cmp>:
 554:	99 0f       	add	r25, r25
 556:	00 08       	sbc	r0, r0
 558:	55 0f       	add	r21, r21
 55a:	aa 0b       	sbc	r26, r26
 55c:	e0 e8       	ldi	r30, 0x80	; 128
 55e:	fe ef       	ldi	r31, 0xFE	; 254
 560:	16 16       	cp	r1, r22
 562:	17 06       	cpc	r1, r23
 564:	e8 07       	cpc	r30, r24
 566:	f9 07       	cpc	r31, r25
 568:	c0 f0       	brcs	.+48     	; 0x59a <__fp_cmp+0x46>
 56a:	12 16       	cp	r1, r18
 56c:	13 06       	cpc	r1, r19
 56e:	e4 07       	cpc	r30, r20
 570:	f5 07       	cpc	r31, r21
 572:	98 f0       	brcs	.+38     	; 0x59a <__fp_cmp+0x46>
 574:	62 1b       	sub	r22, r18
 576:	73 0b       	sbc	r23, r19
 578:	84 0b       	sbc	r24, r20
 57a:	95 0b       	sbc	r25, r21
 57c:	39 f4       	brne	.+14     	; 0x58c <__fp_cmp+0x38>
 57e:	0a 26       	eor	r0, r26
 580:	61 f0       	breq	.+24     	; 0x59a <__fp_cmp+0x46>
 582:	23 2b       	or	r18, r19
 584:	24 2b       	or	r18, r20
 586:	25 2b       	or	r18, r21
 588:	21 f4       	brne	.+8      	; 0x592 <__fp_cmp+0x3e>
 58a:	08 95       	ret
 58c:	0a 26       	eor	r0, r26
 58e:	09 f4       	brne	.+2      	; 0x592 <__fp_cmp+0x3e>
 590:	a1 40       	sbci	r26, 0x01	; 1
 592:	a6 95       	lsr	r26
 594:	8f ef       	ldi	r24, 0xFF	; 255
 596:	81 1d       	adc	r24, r1
 598:	81 1d       	adc	r24, r1
 59a:	08 95       	ret

0000059c <__fp_split3>:
 59c:	57 fd       	sbrc	r21, 7
 59e:	90 58       	subi	r25, 0x80	; 128
 5a0:	44 0f       	add	r20, r20
 5a2:	55 1f       	adc	r21, r21
 5a4:	59 f0       	breq	.+22     	; 0x5bc <__fp_splitA+0x10>
 5a6:	5f 3f       	cpi	r21, 0xFF	; 255
 5a8:	71 f0       	breq	.+28     	; 0x5c6 <__fp_splitA+0x1a>
 5aa:	47 95       	ror	r20

000005ac <__fp_splitA>:
 5ac:	88 0f       	add	r24, r24
 5ae:	97 fb       	bst	r25, 7
 5b0:	99 1f       	adc	r25, r25
 5b2:	61 f0       	breq	.+24     	; 0x5cc <__fp_splitA+0x20>
 5b4:	9f 3f       	cpi	r25, 0xFF	; 255
 5b6:	79 f0       	breq	.+30     	; 0x5d6 <__fp_splitA+0x2a>
 5b8:	87 95       	ror	r24
 5ba:	08 95       	ret
 5bc:	12 16       	cp	r1, r18
 5be:	13 06       	cpc	r1, r19
 5c0:	14 06       	cpc	r1, r20
 5c2:	55 1f       	adc	r21, r21
 5c4:	f2 cf       	rjmp	.-28     	; 0x5aa <__fp_split3+0xe>
 5c6:	46 95       	lsr	r20
 5c8:	f1 df       	rcall	.-30     	; 0x5ac <__fp_splitA>
 5ca:	08 c0       	rjmp	.+16     	; 0x5dc <__fp_splitA+0x30>
 5cc:	16 16       	cp	r1, r22
 5ce:	17 06       	cpc	r1, r23
 5d0:	18 06       	cpc	r1, r24
 5d2:	99 1f       	adc	r25, r25
 5d4:	f1 cf       	rjmp	.-30     	; 0x5b8 <__fp_splitA+0xc>
 5d6:	86 95       	lsr	r24
 5d8:	71 05       	cpc	r23, r1
 5da:	61 05       	cpc	r22, r1
 5dc:	08 94       	sec
 5de:	08 95       	ret

000005e0 <__fp_zero>:
 5e0:	e8 94       	clt

000005e2 <__fp_szero>:
 5e2:	bb 27       	eor	r27, r27
 5e4:	66 27       	eor	r22, r22
 5e6:	77 27       	eor	r23, r23
 5e8:	cb 01       	movw	r24, r22
 5ea:	97 f9       	bld	r25, 7
 5ec:	08 95       	ret

000005ee <__gesf2>:
 5ee:	0e 94 aa 02 	call	0x554	; 0x554 <__fp_cmp>
 5f2:	08 f4       	brcc	.+2      	; 0x5f6 <__gesf2+0x8>
 5f4:	8f ef       	ldi	r24, 0xFF	; 255
 5f6:	08 95       	ret

000005f8 <__mulsf3>:
 5f8:	0e 94 0f 03 	call	0x61e	; 0x61e <__mulsf3x>
 5fc:	0c 94 80 03 	jmp	0x700	; 0x700 <__fp_round>
 600:	0e 94 72 03 	call	0x6e4	; 0x6e4 <__fp_pscA>
 604:	38 f0       	brcs	.+14     	; 0x614 <__mulsf3+0x1c>
 606:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__fp_pscB>
 60a:	20 f0       	brcs	.+8      	; 0x614 <__mulsf3+0x1c>
 60c:	95 23       	and	r25, r21
 60e:	11 f0       	breq	.+4      	; 0x614 <__mulsf3+0x1c>
 610:	0c 94 69 03 	jmp	0x6d2	; 0x6d2 <__fp_inf>
 614:	0c 94 6f 03 	jmp	0x6de	; 0x6de <__fp_nan>
 618:	11 24       	eor	r1, r1
 61a:	0c 94 f1 02 	jmp	0x5e2	; 0x5e2 <__fp_szero>

0000061e <__mulsf3x>:
 61e:	0e 94 ce 02 	call	0x59c	; 0x59c <__fp_split3>
 622:	70 f3       	brcs	.-36     	; 0x600 <__mulsf3+0x8>

00000624 <__mulsf3_pse>:
 624:	95 9f       	mul	r25, r21
 626:	c1 f3       	breq	.-16     	; 0x618 <__mulsf3+0x20>
 628:	95 0f       	add	r25, r21
 62a:	50 e0       	ldi	r21, 0x00	; 0
 62c:	55 1f       	adc	r21, r21
 62e:	62 9f       	mul	r22, r18
 630:	f0 01       	movw	r30, r0
 632:	72 9f       	mul	r23, r18
 634:	bb 27       	eor	r27, r27
 636:	f0 0d       	add	r31, r0
 638:	b1 1d       	adc	r27, r1
 63a:	63 9f       	mul	r22, r19
 63c:	aa 27       	eor	r26, r26
 63e:	f0 0d       	add	r31, r0
 640:	b1 1d       	adc	r27, r1
 642:	aa 1f       	adc	r26, r26
 644:	64 9f       	mul	r22, r20
 646:	66 27       	eor	r22, r22
 648:	b0 0d       	add	r27, r0
 64a:	a1 1d       	adc	r26, r1
 64c:	66 1f       	adc	r22, r22
 64e:	82 9f       	mul	r24, r18
 650:	22 27       	eor	r18, r18
 652:	b0 0d       	add	r27, r0
 654:	a1 1d       	adc	r26, r1
 656:	62 1f       	adc	r22, r18
 658:	73 9f       	mul	r23, r19
 65a:	b0 0d       	add	r27, r0
 65c:	a1 1d       	adc	r26, r1
 65e:	62 1f       	adc	r22, r18
 660:	83 9f       	mul	r24, r19
 662:	a0 0d       	add	r26, r0
 664:	61 1d       	adc	r22, r1
 666:	22 1f       	adc	r18, r18
 668:	74 9f       	mul	r23, r20
 66a:	33 27       	eor	r19, r19
 66c:	a0 0d       	add	r26, r0
 66e:	61 1d       	adc	r22, r1
 670:	23 1f       	adc	r18, r19
 672:	84 9f       	mul	r24, r20
 674:	60 0d       	add	r22, r0
 676:	21 1d       	adc	r18, r1
 678:	82 2f       	mov	r24, r18
 67a:	76 2f       	mov	r23, r22
 67c:	6a 2f       	mov	r22, r26
 67e:	11 24       	eor	r1, r1
 680:	9f 57       	subi	r25, 0x7F	; 127
 682:	50 40       	sbci	r21, 0x00	; 0
 684:	9a f0       	brmi	.+38     	; 0x6ac <__mulsf3_pse+0x88>
 686:	f1 f0       	breq	.+60     	; 0x6c4 <__mulsf3_pse+0xa0>
 688:	88 23       	and	r24, r24
 68a:	4a f0       	brmi	.+18     	; 0x69e <__mulsf3_pse+0x7a>
 68c:	ee 0f       	add	r30, r30
 68e:	ff 1f       	adc	r31, r31
 690:	bb 1f       	adc	r27, r27
 692:	66 1f       	adc	r22, r22
 694:	77 1f       	adc	r23, r23
 696:	88 1f       	adc	r24, r24
 698:	91 50       	subi	r25, 0x01	; 1
 69a:	50 40       	sbci	r21, 0x00	; 0
 69c:	a9 f7       	brne	.-22     	; 0x688 <__mulsf3_pse+0x64>
 69e:	9e 3f       	cpi	r25, 0xFE	; 254
 6a0:	51 05       	cpc	r21, r1
 6a2:	80 f0       	brcs	.+32     	; 0x6c4 <__mulsf3_pse+0xa0>
 6a4:	0c 94 69 03 	jmp	0x6d2	; 0x6d2 <__fp_inf>
 6a8:	0c 94 f1 02 	jmp	0x5e2	; 0x5e2 <__fp_szero>
 6ac:	5f 3f       	cpi	r21, 0xFF	; 255
 6ae:	e4 f3       	brlt	.-8      	; 0x6a8 <__mulsf3_pse+0x84>
 6b0:	98 3e       	cpi	r25, 0xE8	; 232
 6b2:	d4 f3       	brlt	.-12     	; 0x6a8 <__mulsf3_pse+0x84>
 6b4:	86 95       	lsr	r24
 6b6:	77 95       	ror	r23
 6b8:	67 95       	ror	r22
 6ba:	b7 95       	ror	r27
 6bc:	f7 95       	ror	r31
 6be:	e7 95       	ror	r30
 6c0:	9f 5f       	subi	r25, 0xFF	; 255
 6c2:	c1 f7       	brne	.-16     	; 0x6b4 <__mulsf3_pse+0x90>
 6c4:	fe 2b       	or	r31, r30
 6c6:	88 0f       	add	r24, r24
 6c8:	91 1d       	adc	r25, r1
 6ca:	96 95       	lsr	r25
 6cc:	87 95       	ror	r24
 6ce:	97 f9       	bld	r25, 7
 6d0:	08 95       	ret

000006d2 <__fp_inf>:
 6d2:	97 f9       	bld	r25, 7
 6d4:	9f 67       	ori	r25, 0x7F	; 127
 6d6:	80 e8       	ldi	r24, 0x80	; 128
 6d8:	70 e0       	ldi	r23, 0x00	; 0
 6da:	60 e0       	ldi	r22, 0x00	; 0
 6dc:	08 95       	ret

000006de <__fp_nan>:
 6de:	9f ef       	ldi	r25, 0xFF	; 255
 6e0:	80 ec       	ldi	r24, 0xC0	; 192
 6e2:	08 95       	ret

000006e4 <__fp_pscA>:
 6e4:	00 24       	eor	r0, r0
 6e6:	0a 94       	dec	r0
 6e8:	16 16       	cp	r1, r22
 6ea:	17 06       	cpc	r1, r23
 6ec:	18 06       	cpc	r1, r24
 6ee:	09 06       	cpc	r0, r25
 6f0:	08 95       	ret

000006f2 <__fp_pscB>:
 6f2:	00 24       	eor	r0, r0
 6f4:	0a 94       	dec	r0
 6f6:	12 16       	cp	r1, r18
 6f8:	13 06       	cpc	r1, r19
 6fa:	14 06       	cpc	r1, r20
 6fc:	05 06       	cpc	r0, r21
 6fe:	08 95       	ret

00000700 <__fp_round>:
 700:	09 2e       	mov	r0, r25
 702:	03 94       	inc	r0
 704:	00 0c       	add	r0, r0
 706:	11 f4       	brne	.+4      	; 0x70c <__fp_round+0xc>
 708:	88 23       	and	r24, r24
 70a:	52 f0       	brmi	.+20     	; 0x720 <__fp_round+0x20>
 70c:	bb 0f       	add	r27, r27
 70e:	40 f4       	brcc	.+16     	; 0x720 <__fp_round+0x20>
 710:	bf 2b       	or	r27, r31
 712:	11 f4       	brne	.+4      	; 0x718 <__fp_round+0x18>
 714:	60 ff       	sbrs	r22, 0
 716:	04 c0       	rjmp	.+8      	; 0x720 <__fp_round+0x20>
 718:	6f 5f       	subi	r22, 0xFF	; 255
 71a:	7f 4f       	sbci	r23, 0xFF	; 255
 71c:	8f 4f       	sbci	r24, 0xFF	; 255
 71e:	9f 4f       	sbci	r25, 0xFF	; 255
 720:	08 95       	ret

00000722 <printf>:
 722:	a0 e0       	ldi	r26, 0x00	; 0
 724:	b0 e0       	ldi	r27, 0x00	; 0
 726:	e7 e9       	ldi	r30, 0x97	; 151
 728:	f3 e0       	ldi	r31, 0x03	; 3
 72a:	0c 94 78 06 	jmp	0xcf0	; 0xcf0 <__prologue_saves__+0x20>
 72e:	ae 01       	movw	r20, r28
 730:	4b 5f       	subi	r20, 0xFB	; 251
 732:	5f 4f       	sbci	r21, 0xFF	; 255
 734:	fa 01       	movw	r30, r20
 736:	61 91       	ld	r22, Z+
 738:	71 91       	ld	r23, Z+
 73a:	af 01       	movw	r20, r30
 73c:	80 91 27 20 	lds	r24, 0x2027	; 0x802027 <__iob+0x2>
 740:	90 91 28 20 	lds	r25, 0x2028	; 0x802028 <__iob+0x3>
 744:	0e 94 d7 03 	call	0x7ae	; 0x7ae <vfprintf>
 748:	e2 e0       	ldi	r30, 0x02	; 2
 74a:	0c 94 91 06 	jmp	0xd22	; 0xd22 <__epilogue_restores__+0x20>

0000074e <puts>:
 74e:	0f 93       	push	r16
 750:	1f 93       	push	r17
 752:	cf 93       	push	r28
 754:	df 93       	push	r29
 756:	e0 91 27 20 	lds	r30, 0x2027	; 0x802027 <__iob+0x2>
 75a:	f0 91 28 20 	lds	r31, 0x2028	; 0x802028 <__iob+0x3>
 75e:	23 81       	ldd	r18, Z+3	; 0x03
 760:	21 ff       	sbrs	r18, 1
 762:	1b c0       	rjmp	.+54     	; 0x79a <puts+0x4c>
 764:	8c 01       	movw	r16, r24
 766:	d0 e0       	ldi	r29, 0x00	; 0
 768:	c0 e0       	ldi	r28, 0x00	; 0
 76a:	f8 01       	movw	r30, r16
 76c:	81 91       	ld	r24, Z+
 76e:	8f 01       	movw	r16, r30
 770:	60 91 27 20 	lds	r22, 0x2027	; 0x802027 <__iob+0x2>
 774:	70 91 28 20 	lds	r23, 0x2028	; 0x802028 <__iob+0x3>
 778:	db 01       	movw	r26, r22
 77a:	18 96       	adiw	r26, 0x08	; 8
 77c:	ed 91       	ld	r30, X+
 77e:	fc 91       	ld	r31, X
 780:	19 97       	sbiw	r26, 0x09	; 9
 782:	88 23       	and	r24, r24
 784:	31 f0       	breq	.+12     	; 0x792 <puts+0x44>
 786:	09 95       	icall
 788:	89 2b       	or	r24, r25
 78a:	79 f3       	breq	.-34     	; 0x76a <puts+0x1c>
 78c:	df ef       	ldi	r29, 0xFF	; 255
 78e:	cf ef       	ldi	r28, 0xFF	; 255
 790:	ec cf       	rjmp	.-40     	; 0x76a <puts+0x1c>
 792:	8a e0       	ldi	r24, 0x0A	; 10
 794:	09 95       	icall
 796:	89 2b       	or	r24, r25
 798:	19 f0       	breq	.+6      	; 0x7a0 <puts+0x52>
 79a:	8f ef       	ldi	r24, 0xFF	; 255
 79c:	9f ef       	ldi	r25, 0xFF	; 255
 79e:	02 c0       	rjmp	.+4      	; 0x7a4 <puts+0x56>
 7a0:	8d 2f       	mov	r24, r29
 7a2:	9c 2f       	mov	r25, r28
 7a4:	df 91       	pop	r29
 7a6:	cf 91       	pop	r28
 7a8:	1f 91       	pop	r17
 7aa:	0f 91       	pop	r16
 7ac:	08 95       	ret

000007ae <vfprintf>:
 7ae:	ab e0       	ldi	r26, 0x0B	; 11
 7b0:	b0 e0       	ldi	r27, 0x00	; 0
 7b2:	ed ed       	ldi	r30, 0xDD	; 221
 7b4:	f3 e0       	ldi	r31, 0x03	; 3
 7b6:	0c 94 68 06 	jmp	0xcd0	; 0xcd0 <__prologue_saves__>
 7ba:	6c 01       	movw	r12, r24
 7bc:	7b 01       	movw	r14, r22
 7be:	8a 01       	movw	r16, r20
 7c0:	fc 01       	movw	r30, r24
 7c2:	16 82       	std	Z+6, r1	; 0x06
 7c4:	17 82       	std	Z+7, r1	; 0x07
 7c6:	83 81       	ldd	r24, Z+3	; 0x03
 7c8:	81 ff       	sbrs	r24, 1
 7ca:	cc c1       	rjmp	.+920    	; 0xb64 <vfprintf+0x3b6>
 7cc:	ce 01       	movw	r24, r28
 7ce:	01 96       	adiw	r24, 0x01	; 1
 7d0:	3c 01       	movw	r6, r24
 7d2:	f6 01       	movw	r30, r12
 7d4:	93 81       	ldd	r25, Z+3	; 0x03
 7d6:	f7 01       	movw	r30, r14
 7d8:	93 fd       	sbrc	r25, 3
 7da:	85 91       	lpm	r24, Z+
 7dc:	93 ff       	sbrs	r25, 3
 7de:	81 91       	ld	r24, Z+
 7e0:	7f 01       	movw	r14, r30
 7e2:	88 23       	and	r24, r24
 7e4:	09 f4       	brne	.+2      	; 0x7e8 <vfprintf+0x3a>
 7e6:	ba c1       	rjmp	.+884    	; 0xb5c <vfprintf+0x3ae>
 7e8:	85 32       	cpi	r24, 0x25	; 37
 7ea:	39 f4       	brne	.+14     	; 0x7fa <vfprintf+0x4c>
 7ec:	93 fd       	sbrc	r25, 3
 7ee:	85 91       	lpm	r24, Z+
 7f0:	93 ff       	sbrs	r25, 3
 7f2:	81 91       	ld	r24, Z+
 7f4:	7f 01       	movw	r14, r30
 7f6:	85 32       	cpi	r24, 0x25	; 37
 7f8:	29 f4       	brne	.+10     	; 0x804 <vfprintf+0x56>
 7fa:	b6 01       	movw	r22, r12
 7fc:	90 e0       	ldi	r25, 0x00	; 0
 7fe:	0e 94 ce 05 	call	0xb9c	; 0xb9c <fputc>
 802:	e7 cf       	rjmp	.-50     	; 0x7d2 <vfprintf+0x24>
 804:	91 2c       	mov	r9, r1
 806:	21 2c       	mov	r2, r1
 808:	31 2c       	mov	r3, r1
 80a:	ff e1       	ldi	r31, 0x1F	; 31
 80c:	f3 15       	cp	r31, r3
 80e:	d8 f0       	brcs	.+54     	; 0x846 <vfprintf+0x98>
 810:	8b 32       	cpi	r24, 0x2B	; 43
 812:	79 f0       	breq	.+30     	; 0x832 <vfprintf+0x84>
 814:	38 f4       	brcc	.+14     	; 0x824 <vfprintf+0x76>
 816:	80 32       	cpi	r24, 0x20	; 32
 818:	79 f0       	breq	.+30     	; 0x838 <vfprintf+0x8a>
 81a:	83 32       	cpi	r24, 0x23	; 35
 81c:	a1 f4       	brne	.+40     	; 0x846 <vfprintf+0x98>
 81e:	23 2d       	mov	r18, r3
 820:	20 61       	ori	r18, 0x10	; 16
 822:	1d c0       	rjmp	.+58     	; 0x85e <vfprintf+0xb0>
 824:	8d 32       	cpi	r24, 0x2D	; 45
 826:	61 f0       	breq	.+24     	; 0x840 <vfprintf+0x92>
 828:	80 33       	cpi	r24, 0x30	; 48
 82a:	69 f4       	brne	.+26     	; 0x846 <vfprintf+0x98>
 82c:	23 2d       	mov	r18, r3
 82e:	21 60       	ori	r18, 0x01	; 1
 830:	16 c0       	rjmp	.+44     	; 0x85e <vfprintf+0xb0>
 832:	83 2d       	mov	r24, r3
 834:	82 60       	ori	r24, 0x02	; 2
 836:	38 2e       	mov	r3, r24
 838:	e3 2d       	mov	r30, r3
 83a:	e4 60       	ori	r30, 0x04	; 4
 83c:	3e 2e       	mov	r3, r30
 83e:	2a c0       	rjmp	.+84     	; 0x894 <vfprintf+0xe6>
 840:	f3 2d       	mov	r31, r3
 842:	f8 60       	ori	r31, 0x08	; 8
 844:	1d c0       	rjmp	.+58     	; 0x880 <vfprintf+0xd2>
 846:	37 fc       	sbrc	r3, 7
 848:	2d c0       	rjmp	.+90     	; 0x8a4 <vfprintf+0xf6>
 84a:	20 ed       	ldi	r18, 0xD0	; 208
 84c:	28 0f       	add	r18, r24
 84e:	2a 30       	cpi	r18, 0x0A	; 10
 850:	40 f0       	brcs	.+16     	; 0x862 <vfprintf+0xb4>
 852:	8e 32       	cpi	r24, 0x2E	; 46
 854:	b9 f4       	brne	.+46     	; 0x884 <vfprintf+0xd6>
 856:	36 fc       	sbrc	r3, 6
 858:	81 c1       	rjmp	.+770    	; 0xb5c <vfprintf+0x3ae>
 85a:	23 2d       	mov	r18, r3
 85c:	20 64       	ori	r18, 0x40	; 64
 85e:	32 2e       	mov	r3, r18
 860:	19 c0       	rjmp	.+50     	; 0x894 <vfprintf+0xe6>
 862:	36 fe       	sbrs	r3, 6
 864:	06 c0       	rjmp	.+12     	; 0x872 <vfprintf+0xc4>
 866:	8a e0       	ldi	r24, 0x0A	; 10
 868:	98 9e       	mul	r9, r24
 86a:	20 0d       	add	r18, r0
 86c:	11 24       	eor	r1, r1
 86e:	92 2e       	mov	r9, r18
 870:	11 c0       	rjmp	.+34     	; 0x894 <vfprintf+0xe6>
 872:	ea e0       	ldi	r30, 0x0A	; 10
 874:	2e 9e       	mul	r2, r30
 876:	20 0d       	add	r18, r0
 878:	11 24       	eor	r1, r1
 87a:	22 2e       	mov	r2, r18
 87c:	f3 2d       	mov	r31, r3
 87e:	f0 62       	ori	r31, 0x20	; 32
 880:	3f 2e       	mov	r3, r31
 882:	08 c0       	rjmp	.+16     	; 0x894 <vfprintf+0xe6>
 884:	8c 36       	cpi	r24, 0x6C	; 108
 886:	21 f4       	brne	.+8      	; 0x890 <vfprintf+0xe2>
 888:	83 2d       	mov	r24, r3
 88a:	80 68       	ori	r24, 0x80	; 128
 88c:	38 2e       	mov	r3, r24
 88e:	02 c0       	rjmp	.+4      	; 0x894 <vfprintf+0xe6>
 890:	88 36       	cpi	r24, 0x68	; 104
 892:	41 f4       	brne	.+16     	; 0x8a4 <vfprintf+0xf6>
 894:	f7 01       	movw	r30, r14
 896:	93 fd       	sbrc	r25, 3
 898:	85 91       	lpm	r24, Z+
 89a:	93 ff       	sbrs	r25, 3
 89c:	81 91       	ld	r24, Z+
 89e:	7f 01       	movw	r14, r30
 8a0:	81 11       	cpse	r24, r1
 8a2:	b3 cf       	rjmp	.-154    	; 0x80a <vfprintf+0x5c>
 8a4:	98 2f       	mov	r25, r24
 8a6:	9f 7d       	andi	r25, 0xDF	; 223
 8a8:	95 54       	subi	r25, 0x45	; 69
 8aa:	93 30       	cpi	r25, 0x03	; 3
 8ac:	28 f4       	brcc	.+10     	; 0x8b8 <vfprintf+0x10a>
 8ae:	0c 5f       	subi	r16, 0xFC	; 252
 8b0:	1f 4f       	sbci	r17, 0xFF	; 255
 8b2:	9f e3       	ldi	r25, 0x3F	; 63
 8b4:	99 83       	std	Y+1, r25	; 0x01
 8b6:	0d c0       	rjmp	.+26     	; 0x8d2 <vfprintf+0x124>
 8b8:	83 36       	cpi	r24, 0x63	; 99
 8ba:	31 f0       	breq	.+12     	; 0x8c8 <vfprintf+0x11a>
 8bc:	83 37       	cpi	r24, 0x73	; 115
 8be:	71 f0       	breq	.+28     	; 0x8dc <vfprintf+0x12e>
 8c0:	83 35       	cpi	r24, 0x53	; 83
 8c2:	09 f0       	breq	.+2      	; 0x8c6 <vfprintf+0x118>
 8c4:	59 c0       	rjmp	.+178    	; 0x978 <vfprintf+0x1ca>
 8c6:	21 c0       	rjmp	.+66     	; 0x90a <vfprintf+0x15c>
 8c8:	f8 01       	movw	r30, r16
 8ca:	80 81       	ld	r24, Z
 8cc:	89 83       	std	Y+1, r24	; 0x01
 8ce:	0e 5f       	subi	r16, 0xFE	; 254
 8d0:	1f 4f       	sbci	r17, 0xFF	; 255
 8d2:	88 24       	eor	r8, r8
 8d4:	83 94       	inc	r8
 8d6:	91 2c       	mov	r9, r1
 8d8:	53 01       	movw	r10, r6
 8da:	13 c0       	rjmp	.+38     	; 0x902 <vfprintf+0x154>
 8dc:	28 01       	movw	r4, r16
 8de:	f2 e0       	ldi	r31, 0x02	; 2
 8e0:	4f 0e       	add	r4, r31
 8e2:	51 1c       	adc	r5, r1
 8e4:	f8 01       	movw	r30, r16
 8e6:	a0 80       	ld	r10, Z
 8e8:	b1 80       	ldd	r11, Z+1	; 0x01
 8ea:	36 fe       	sbrs	r3, 6
 8ec:	03 c0       	rjmp	.+6      	; 0x8f4 <vfprintf+0x146>
 8ee:	69 2d       	mov	r22, r9
 8f0:	70 e0       	ldi	r23, 0x00	; 0
 8f2:	02 c0       	rjmp	.+4      	; 0x8f8 <vfprintf+0x14a>
 8f4:	6f ef       	ldi	r22, 0xFF	; 255
 8f6:	7f ef       	ldi	r23, 0xFF	; 255
 8f8:	c5 01       	movw	r24, r10
 8fa:	0e 94 c3 05 	call	0xb86	; 0xb86 <strnlen>
 8fe:	4c 01       	movw	r8, r24
 900:	82 01       	movw	r16, r4
 902:	f3 2d       	mov	r31, r3
 904:	ff 77       	andi	r31, 0x7F	; 127
 906:	3f 2e       	mov	r3, r31
 908:	16 c0       	rjmp	.+44     	; 0x936 <vfprintf+0x188>
 90a:	28 01       	movw	r4, r16
 90c:	22 e0       	ldi	r18, 0x02	; 2
 90e:	42 0e       	add	r4, r18
 910:	51 1c       	adc	r5, r1
 912:	f8 01       	movw	r30, r16
 914:	a0 80       	ld	r10, Z
 916:	b1 80       	ldd	r11, Z+1	; 0x01
 918:	36 fe       	sbrs	r3, 6
 91a:	03 c0       	rjmp	.+6      	; 0x922 <vfprintf+0x174>
 91c:	69 2d       	mov	r22, r9
 91e:	70 e0       	ldi	r23, 0x00	; 0
 920:	02 c0       	rjmp	.+4      	; 0x926 <vfprintf+0x178>
 922:	6f ef       	ldi	r22, 0xFF	; 255
 924:	7f ef       	ldi	r23, 0xFF	; 255
 926:	c5 01       	movw	r24, r10
 928:	0e 94 b8 05 	call	0xb70	; 0xb70 <strnlen_P>
 92c:	4c 01       	movw	r8, r24
 92e:	f3 2d       	mov	r31, r3
 930:	f0 68       	ori	r31, 0x80	; 128
 932:	3f 2e       	mov	r3, r31
 934:	82 01       	movw	r16, r4
 936:	33 fc       	sbrc	r3, 3
 938:	1b c0       	rjmp	.+54     	; 0x970 <vfprintf+0x1c2>
 93a:	82 2d       	mov	r24, r2
 93c:	90 e0       	ldi	r25, 0x00	; 0
 93e:	88 16       	cp	r8, r24
 940:	99 06       	cpc	r9, r25
 942:	b0 f4       	brcc	.+44     	; 0x970 <vfprintf+0x1c2>
 944:	b6 01       	movw	r22, r12
 946:	80 e2       	ldi	r24, 0x20	; 32
 948:	90 e0       	ldi	r25, 0x00	; 0
 94a:	0e 94 ce 05 	call	0xb9c	; 0xb9c <fputc>
 94e:	2a 94       	dec	r2
 950:	f4 cf       	rjmp	.-24     	; 0x93a <vfprintf+0x18c>
 952:	f5 01       	movw	r30, r10
 954:	37 fc       	sbrc	r3, 7
 956:	85 91       	lpm	r24, Z+
 958:	37 fe       	sbrs	r3, 7
 95a:	81 91       	ld	r24, Z+
 95c:	5f 01       	movw	r10, r30
 95e:	b6 01       	movw	r22, r12
 960:	90 e0       	ldi	r25, 0x00	; 0
 962:	0e 94 ce 05 	call	0xb9c	; 0xb9c <fputc>
 966:	21 10       	cpse	r2, r1
 968:	2a 94       	dec	r2
 96a:	21 e0       	ldi	r18, 0x01	; 1
 96c:	82 1a       	sub	r8, r18
 96e:	91 08       	sbc	r9, r1
 970:	81 14       	cp	r8, r1
 972:	91 04       	cpc	r9, r1
 974:	71 f7       	brne	.-36     	; 0x952 <vfprintf+0x1a4>
 976:	e8 c0       	rjmp	.+464    	; 0xb48 <vfprintf+0x39a>
 978:	84 36       	cpi	r24, 0x64	; 100
 97a:	11 f0       	breq	.+4      	; 0x980 <vfprintf+0x1d2>
 97c:	89 36       	cpi	r24, 0x69	; 105
 97e:	41 f5       	brne	.+80     	; 0x9d0 <vfprintf+0x222>
 980:	f8 01       	movw	r30, r16
 982:	37 fe       	sbrs	r3, 7
 984:	07 c0       	rjmp	.+14     	; 0x994 <vfprintf+0x1e6>
 986:	60 81       	ld	r22, Z
 988:	71 81       	ldd	r23, Z+1	; 0x01
 98a:	82 81       	ldd	r24, Z+2	; 0x02
 98c:	93 81       	ldd	r25, Z+3	; 0x03
 98e:	0c 5f       	subi	r16, 0xFC	; 252
 990:	1f 4f       	sbci	r17, 0xFF	; 255
 992:	08 c0       	rjmp	.+16     	; 0x9a4 <vfprintf+0x1f6>
 994:	60 81       	ld	r22, Z
 996:	71 81       	ldd	r23, Z+1	; 0x01
 998:	07 2e       	mov	r0, r23
 99a:	00 0c       	add	r0, r0
 99c:	88 0b       	sbc	r24, r24
 99e:	99 0b       	sbc	r25, r25
 9a0:	0e 5f       	subi	r16, 0xFE	; 254
 9a2:	1f 4f       	sbci	r17, 0xFF	; 255
 9a4:	f3 2d       	mov	r31, r3
 9a6:	ff 76       	andi	r31, 0x6F	; 111
 9a8:	3f 2e       	mov	r3, r31
 9aa:	97 ff       	sbrs	r25, 7
 9ac:	09 c0       	rjmp	.+18     	; 0x9c0 <vfprintf+0x212>
 9ae:	90 95       	com	r25
 9b0:	80 95       	com	r24
 9b2:	70 95       	com	r23
 9b4:	61 95       	neg	r22
 9b6:	7f 4f       	sbci	r23, 0xFF	; 255
 9b8:	8f 4f       	sbci	r24, 0xFF	; 255
 9ba:	9f 4f       	sbci	r25, 0xFF	; 255
 9bc:	f0 68       	ori	r31, 0x80	; 128
 9be:	3f 2e       	mov	r3, r31
 9c0:	2a e0       	ldi	r18, 0x0A	; 10
 9c2:	30 e0       	ldi	r19, 0x00	; 0
 9c4:	a3 01       	movw	r20, r6
 9c6:	0e 94 0a 06 	call	0xc14	; 0xc14 <__ultoa_invert>
 9ca:	88 2e       	mov	r8, r24
 9cc:	86 18       	sub	r8, r6
 9ce:	45 c0       	rjmp	.+138    	; 0xa5a <vfprintf+0x2ac>
 9d0:	85 37       	cpi	r24, 0x75	; 117
 9d2:	31 f4       	brne	.+12     	; 0x9e0 <vfprintf+0x232>
 9d4:	23 2d       	mov	r18, r3
 9d6:	2f 7e       	andi	r18, 0xEF	; 239
 9d8:	b2 2e       	mov	r11, r18
 9da:	2a e0       	ldi	r18, 0x0A	; 10
 9dc:	30 e0       	ldi	r19, 0x00	; 0
 9de:	25 c0       	rjmp	.+74     	; 0xa2a <vfprintf+0x27c>
 9e0:	93 2d       	mov	r25, r3
 9e2:	99 7f       	andi	r25, 0xF9	; 249
 9e4:	b9 2e       	mov	r11, r25
 9e6:	8f 36       	cpi	r24, 0x6F	; 111
 9e8:	c1 f0       	breq	.+48     	; 0xa1a <vfprintf+0x26c>
 9ea:	18 f4       	brcc	.+6      	; 0x9f2 <vfprintf+0x244>
 9ec:	88 35       	cpi	r24, 0x58	; 88
 9ee:	79 f0       	breq	.+30     	; 0xa0e <vfprintf+0x260>
 9f0:	b5 c0       	rjmp	.+362    	; 0xb5c <vfprintf+0x3ae>
 9f2:	80 37       	cpi	r24, 0x70	; 112
 9f4:	19 f0       	breq	.+6      	; 0x9fc <vfprintf+0x24e>
 9f6:	88 37       	cpi	r24, 0x78	; 120
 9f8:	21 f0       	breq	.+8      	; 0xa02 <vfprintf+0x254>
 9fa:	b0 c0       	rjmp	.+352    	; 0xb5c <vfprintf+0x3ae>
 9fc:	e9 2f       	mov	r30, r25
 9fe:	e0 61       	ori	r30, 0x10	; 16
 a00:	be 2e       	mov	r11, r30
 a02:	b4 fe       	sbrs	r11, 4
 a04:	0d c0       	rjmp	.+26     	; 0xa20 <vfprintf+0x272>
 a06:	fb 2d       	mov	r31, r11
 a08:	f4 60       	ori	r31, 0x04	; 4
 a0a:	bf 2e       	mov	r11, r31
 a0c:	09 c0       	rjmp	.+18     	; 0xa20 <vfprintf+0x272>
 a0e:	34 fe       	sbrs	r3, 4
 a10:	0a c0       	rjmp	.+20     	; 0xa26 <vfprintf+0x278>
 a12:	29 2f       	mov	r18, r25
 a14:	26 60       	ori	r18, 0x06	; 6
 a16:	b2 2e       	mov	r11, r18
 a18:	06 c0       	rjmp	.+12     	; 0xa26 <vfprintf+0x278>
 a1a:	28 e0       	ldi	r18, 0x08	; 8
 a1c:	30 e0       	ldi	r19, 0x00	; 0
 a1e:	05 c0       	rjmp	.+10     	; 0xa2a <vfprintf+0x27c>
 a20:	20 e1       	ldi	r18, 0x10	; 16
 a22:	30 e0       	ldi	r19, 0x00	; 0
 a24:	02 c0       	rjmp	.+4      	; 0xa2a <vfprintf+0x27c>
 a26:	20 e1       	ldi	r18, 0x10	; 16
 a28:	32 e0       	ldi	r19, 0x02	; 2
 a2a:	f8 01       	movw	r30, r16
 a2c:	b7 fe       	sbrs	r11, 7
 a2e:	07 c0       	rjmp	.+14     	; 0xa3e <vfprintf+0x290>
 a30:	60 81       	ld	r22, Z
 a32:	71 81       	ldd	r23, Z+1	; 0x01
 a34:	82 81       	ldd	r24, Z+2	; 0x02
 a36:	93 81       	ldd	r25, Z+3	; 0x03
 a38:	0c 5f       	subi	r16, 0xFC	; 252
 a3a:	1f 4f       	sbci	r17, 0xFF	; 255
 a3c:	06 c0       	rjmp	.+12     	; 0xa4a <vfprintf+0x29c>
 a3e:	60 81       	ld	r22, Z
 a40:	71 81       	ldd	r23, Z+1	; 0x01
 a42:	80 e0       	ldi	r24, 0x00	; 0
 a44:	90 e0       	ldi	r25, 0x00	; 0
 a46:	0e 5f       	subi	r16, 0xFE	; 254
 a48:	1f 4f       	sbci	r17, 0xFF	; 255
 a4a:	a3 01       	movw	r20, r6
 a4c:	0e 94 0a 06 	call	0xc14	; 0xc14 <__ultoa_invert>
 a50:	88 2e       	mov	r8, r24
 a52:	86 18       	sub	r8, r6
 a54:	fb 2d       	mov	r31, r11
 a56:	ff 77       	andi	r31, 0x7F	; 127
 a58:	3f 2e       	mov	r3, r31
 a5a:	36 fe       	sbrs	r3, 6
 a5c:	0d c0       	rjmp	.+26     	; 0xa78 <vfprintf+0x2ca>
 a5e:	23 2d       	mov	r18, r3
 a60:	2e 7f       	andi	r18, 0xFE	; 254
 a62:	a2 2e       	mov	r10, r18
 a64:	89 14       	cp	r8, r9
 a66:	58 f4       	brcc	.+22     	; 0xa7e <vfprintf+0x2d0>
 a68:	34 fe       	sbrs	r3, 4
 a6a:	0b c0       	rjmp	.+22     	; 0xa82 <vfprintf+0x2d4>
 a6c:	32 fc       	sbrc	r3, 2
 a6e:	09 c0       	rjmp	.+18     	; 0xa82 <vfprintf+0x2d4>
 a70:	83 2d       	mov	r24, r3
 a72:	8e 7e       	andi	r24, 0xEE	; 238
 a74:	a8 2e       	mov	r10, r24
 a76:	05 c0       	rjmp	.+10     	; 0xa82 <vfprintf+0x2d4>
 a78:	b8 2c       	mov	r11, r8
 a7a:	a3 2c       	mov	r10, r3
 a7c:	03 c0       	rjmp	.+6      	; 0xa84 <vfprintf+0x2d6>
 a7e:	b8 2c       	mov	r11, r8
 a80:	01 c0       	rjmp	.+2      	; 0xa84 <vfprintf+0x2d6>
 a82:	b9 2c       	mov	r11, r9
 a84:	a4 fe       	sbrs	r10, 4
 a86:	0f c0       	rjmp	.+30     	; 0xaa6 <vfprintf+0x2f8>
 a88:	fe 01       	movw	r30, r28
 a8a:	e8 0d       	add	r30, r8
 a8c:	f1 1d       	adc	r31, r1
 a8e:	80 81       	ld	r24, Z
 a90:	80 33       	cpi	r24, 0x30	; 48
 a92:	21 f4       	brne	.+8      	; 0xa9c <vfprintf+0x2ee>
 a94:	9a 2d       	mov	r25, r10
 a96:	99 7e       	andi	r25, 0xE9	; 233
 a98:	a9 2e       	mov	r10, r25
 a9a:	09 c0       	rjmp	.+18     	; 0xaae <vfprintf+0x300>
 a9c:	a2 fe       	sbrs	r10, 2
 a9e:	06 c0       	rjmp	.+12     	; 0xaac <vfprintf+0x2fe>
 aa0:	b3 94       	inc	r11
 aa2:	b3 94       	inc	r11
 aa4:	04 c0       	rjmp	.+8      	; 0xaae <vfprintf+0x300>
 aa6:	8a 2d       	mov	r24, r10
 aa8:	86 78       	andi	r24, 0x86	; 134
 aaa:	09 f0       	breq	.+2      	; 0xaae <vfprintf+0x300>
 aac:	b3 94       	inc	r11
 aae:	a3 fc       	sbrc	r10, 3
 ab0:	11 c0       	rjmp	.+34     	; 0xad4 <vfprintf+0x326>
 ab2:	a0 fe       	sbrs	r10, 0
 ab4:	06 c0       	rjmp	.+12     	; 0xac2 <vfprintf+0x314>
 ab6:	b2 14       	cp	r11, r2
 ab8:	88 f4       	brcc	.+34     	; 0xadc <vfprintf+0x32e>
 aba:	28 0c       	add	r2, r8
 abc:	92 2c       	mov	r9, r2
 abe:	9b 18       	sub	r9, r11
 ac0:	0e c0       	rjmp	.+28     	; 0xade <vfprintf+0x330>
 ac2:	b2 14       	cp	r11, r2
 ac4:	60 f4       	brcc	.+24     	; 0xade <vfprintf+0x330>
 ac6:	b6 01       	movw	r22, r12
 ac8:	80 e2       	ldi	r24, 0x20	; 32
 aca:	90 e0       	ldi	r25, 0x00	; 0
 acc:	0e 94 ce 05 	call	0xb9c	; 0xb9c <fputc>
 ad0:	b3 94       	inc	r11
 ad2:	f7 cf       	rjmp	.-18     	; 0xac2 <vfprintf+0x314>
 ad4:	b2 14       	cp	r11, r2
 ad6:	18 f4       	brcc	.+6      	; 0xade <vfprintf+0x330>
 ad8:	2b 18       	sub	r2, r11
 ada:	02 c0       	rjmp	.+4      	; 0xae0 <vfprintf+0x332>
 adc:	98 2c       	mov	r9, r8
 ade:	21 2c       	mov	r2, r1
 ae0:	a4 fe       	sbrs	r10, 4
 ae2:	10 c0       	rjmp	.+32     	; 0xb04 <vfprintf+0x356>
 ae4:	b6 01       	movw	r22, r12
 ae6:	80 e3       	ldi	r24, 0x30	; 48
 ae8:	90 e0       	ldi	r25, 0x00	; 0
 aea:	0e 94 ce 05 	call	0xb9c	; 0xb9c <fputc>
 aee:	a2 fe       	sbrs	r10, 2
 af0:	17 c0       	rjmp	.+46     	; 0xb20 <vfprintf+0x372>
 af2:	a1 fc       	sbrc	r10, 1
 af4:	03 c0       	rjmp	.+6      	; 0xafc <vfprintf+0x34e>
 af6:	88 e7       	ldi	r24, 0x78	; 120
 af8:	90 e0       	ldi	r25, 0x00	; 0
 afa:	02 c0       	rjmp	.+4      	; 0xb00 <vfprintf+0x352>
 afc:	88 e5       	ldi	r24, 0x58	; 88
 afe:	90 e0       	ldi	r25, 0x00	; 0
 b00:	b6 01       	movw	r22, r12
 b02:	0c c0       	rjmp	.+24     	; 0xb1c <vfprintf+0x36e>
 b04:	8a 2d       	mov	r24, r10
 b06:	86 78       	andi	r24, 0x86	; 134
 b08:	59 f0       	breq	.+22     	; 0xb20 <vfprintf+0x372>
 b0a:	a1 fe       	sbrs	r10, 1
 b0c:	02 c0       	rjmp	.+4      	; 0xb12 <vfprintf+0x364>
 b0e:	8b e2       	ldi	r24, 0x2B	; 43
 b10:	01 c0       	rjmp	.+2      	; 0xb14 <vfprintf+0x366>
 b12:	80 e2       	ldi	r24, 0x20	; 32
 b14:	a7 fc       	sbrc	r10, 7
 b16:	8d e2       	ldi	r24, 0x2D	; 45
 b18:	b6 01       	movw	r22, r12
 b1a:	90 e0       	ldi	r25, 0x00	; 0
 b1c:	0e 94 ce 05 	call	0xb9c	; 0xb9c <fputc>
 b20:	89 14       	cp	r8, r9
 b22:	38 f4       	brcc	.+14     	; 0xb32 <vfprintf+0x384>
 b24:	b6 01       	movw	r22, r12
 b26:	80 e3       	ldi	r24, 0x30	; 48
 b28:	90 e0       	ldi	r25, 0x00	; 0
 b2a:	0e 94 ce 05 	call	0xb9c	; 0xb9c <fputc>
 b2e:	9a 94       	dec	r9
 b30:	f7 cf       	rjmp	.-18     	; 0xb20 <vfprintf+0x372>
 b32:	8a 94       	dec	r8
 b34:	f3 01       	movw	r30, r6
 b36:	e8 0d       	add	r30, r8
 b38:	f1 1d       	adc	r31, r1
 b3a:	80 81       	ld	r24, Z
 b3c:	b6 01       	movw	r22, r12
 b3e:	90 e0       	ldi	r25, 0x00	; 0
 b40:	0e 94 ce 05 	call	0xb9c	; 0xb9c <fputc>
 b44:	81 10       	cpse	r8, r1
 b46:	f5 cf       	rjmp	.-22     	; 0xb32 <vfprintf+0x384>
 b48:	22 20       	and	r2, r2
 b4a:	09 f4       	brne	.+2      	; 0xb4e <vfprintf+0x3a0>
 b4c:	42 ce       	rjmp	.-892    	; 0x7d2 <vfprintf+0x24>
 b4e:	b6 01       	movw	r22, r12
 b50:	80 e2       	ldi	r24, 0x20	; 32
 b52:	90 e0       	ldi	r25, 0x00	; 0
 b54:	0e 94 ce 05 	call	0xb9c	; 0xb9c <fputc>
 b58:	2a 94       	dec	r2
 b5a:	f6 cf       	rjmp	.-20     	; 0xb48 <vfprintf+0x39a>
 b5c:	f6 01       	movw	r30, r12
 b5e:	86 81       	ldd	r24, Z+6	; 0x06
 b60:	97 81       	ldd	r25, Z+7	; 0x07
 b62:	02 c0       	rjmp	.+4      	; 0xb68 <vfprintf+0x3ba>
 b64:	8f ef       	ldi	r24, 0xFF	; 255
 b66:	9f ef       	ldi	r25, 0xFF	; 255
 b68:	2b 96       	adiw	r28, 0x0b	; 11
 b6a:	e2 e1       	ldi	r30, 0x12	; 18
 b6c:	0c 94 81 06 	jmp	0xd02	; 0xd02 <__epilogue_restores__>

00000b70 <strnlen_P>:
 b70:	fc 01       	movw	r30, r24
 b72:	05 90       	lpm	r0, Z+
 b74:	61 50       	subi	r22, 0x01	; 1
 b76:	70 40       	sbci	r23, 0x00	; 0
 b78:	01 10       	cpse	r0, r1
 b7a:	d8 f7       	brcc	.-10     	; 0xb72 <strnlen_P+0x2>
 b7c:	80 95       	com	r24
 b7e:	90 95       	com	r25
 b80:	8e 0f       	add	r24, r30
 b82:	9f 1f       	adc	r25, r31
 b84:	08 95       	ret

00000b86 <strnlen>:
 b86:	fc 01       	movw	r30, r24
 b88:	61 50       	subi	r22, 0x01	; 1
 b8a:	70 40       	sbci	r23, 0x00	; 0
 b8c:	01 90       	ld	r0, Z+
 b8e:	01 10       	cpse	r0, r1
 b90:	d8 f7       	brcc	.-10     	; 0xb88 <strnlen+0x2>
 b92:	80 95       	com	r24
 b94:	90 95       	com	r25
 b96:	8e 0f       	add	r24, r30
 b98:	9f 1f       	adc	r25, r31
 b9a:	08 95       	ret

00000b9c <fputc>:
 b9c:	0f 93       	push	r16
 b9e:	1f 93       	push	r17
 ba0:	cf 93       	push	r28
 ba2:	df 93       	push	r29
 ba4:	fb 01       	movw	r30, r22
 ba6:	23 81       	ldd	r18, Z+3	; 0x03
 ba8:	21 fd       	sbrc	r18, 1
 baa:	03 c0       	rjmp	.+6      	; 0xbb2 <fputc+0x16>
 bac:	8f ef       	ldi	r24, 0xFF	; 255
 bae:	9f ef       	ldi	r25, 0xFF	; 255
 bb0:	2c c0       	rjmp	.+88     	; 0xc0a <fputc+0x6e>
 bb2:	22 ff       	sbrs	r18, 2
 bb4:	16 c0       	rjmp	.+44     	; 0xbe2 <fputc+0x46>
 bb6:	46 81       	ldd	r20, Z+6	; 0x06
 bb8:	57 81       	ldd	r21, Z+7	; 0x07
 bba:	24 81       	ldd	r18, Z+4	; 0x04
 bbc:	35 81       	ldd	r19, Z+5	; 0x05
 bbe:	42 17       	cp	r20, r18
 bc0:	53 07       	cpc	r21, r19
 bc2:	44 f4       	brge	.+16     	; 0xbd4 <fputc+0x38>
 bc4:	a0 81       	ld	r26, Z
 bc6:	b1 81       	ldd	r27, Z+1	; 0x01
 bc8:	9d 01       	movw	r18, r26
 bca:	2f 5f       	subi	r18, 0xFF	; 255
 bcc:	3f 4f       	sbci	r19, 0xFF	; 255
 bce:	20 83       	st	Z, r18
 bd0:	31 83       	std	Z+1, r19	; 0x01
 bd2:	8c 93       	st	X, r24
 bd4:	26 81       	ldd	r18, Z+6	; 0x06
 bd6:	37 81       	ldd	r19, Z+7	; 0x07
 bd8:	2f 5f       	subi	r18, 0xFF	; 255
 bda:	3f 4f       	sbci	r19, 0xFF	; 255
 bdc:	26 83       	std	Z+6, r18	; 0x06
 bde:	37 83       	std	Z+7, r19	; 0x07
 be0:	14 c0       	rjmp	.+40     	; 0xc0a <fputc+0x6e>
 be2:	8b 01       	movw	r16, r22
 be4:	ec 01       	movw	r28, r24
 be6:	fb 01       	movw	r30, r22
 be8:	00 84       	ldd	r0, Z+8	; 0x08
 bea:	f1 85       	ldd	r31, Z+9	; 0x09
 bec:	e0 2d       	mov	r30, r0
 bee:	09 95       	icall
 bf0:	89 2b       	or	r24, r25
 bf2:	e1 f6       	brne	.-72     	; 0xbac <fputc+0x10>
 bf4:	d8 01       	movw	r26, r16
 bf6:	16 96       	adiw	r26, 0x06	; 6
 bf8:	8d 91       	ld	r24, X+
 bfa:	9c 91       	ld	r25, X
 bfc:	17 97       	sbiw	r26, 0x07	; 7
 bfe:	01 96       	adiw	r24, 0x01	; 1
 c00:	16 96       	adiw	r26, 0x06	; 6
 c02:	8d 93       	st	X+, r24
 c04:	9c 93       	st	X, r25
 c06:	17 97       	sbiw	r26, 0x07	; 7
 c08:	ce 01       	movw	r24, r28
 c0a:	df 91       	pop	r29
 c0c:	cf 91       	pop	r28
 c0e:	1f 91       	pop	r17
 c10:	0f 91       	pop	r16
 c12:	08 95       	ret

00000c14 <__ultoa_invert>:
 c14:	fa 01       	movw	r30, r20
 c16:	aa 27       	eor	r26, r26
 c18:	28 30       	cpi	r18, 0x08	; 8
 c1a:	51 f1       	breq	.+84     	; 0xc70 <__ultoa_invert+0x5c>
 c1c:	20 31       	cpi	r18, 0x10	; 16
 c1e:	81 f1       	breq	.+96     	; 0xc80 <__ultoa_invert+0x6c>
 c20:	e8 94       	clt
 c22:	6f 93       	push	r22
 c24:	6e 7f       	andi	r22, 0xFE	; 254
 c26:	6e 5f       	subi	r22, 0xFE	; 254
 c28:	7f 4f       	sbci	r23, 0xFF	; 255
 c2a:	8f 4f       	sbci	r24, 0xFF	; 255
 c2c:	9f 4f       	sbci	r25, 0xFF	; 255
 c2e:	af 4f       	sbci	r26, 0xFF	; 255
 c30:	b1 e0       	ldi	r27, 0x01	; 1
 c32:	3e d0       	rcall	.+124    	; 0xcb0 <__ultoa_invert+0x9c>
 c34:	b4 e0       	ldi	r27, 0x04	; 4
 c36:	3c d0       	rcall	.+120    	; 0xcb0 <__ultoa_invert+0x9c>
 c38:	67 0f       	add	r22, r23
 c3a:	78 1f       	adc	r23, r24
 c3c:	89 1f       	adc	r24, r25
 c3e:	9a 1f       	adc	r25, r26
 c40:	a1 1d       	adc	r26, r1
 c42:	68 0f       	add	r22, r24
 c44:	79 1f       	adc	r23, r25
 c46:	8a 1f       	adc	r24, r26
 c48:	91 1d       	adc	r25, r1
 c4a:	a1 1d       	adc	r26, r1
 c4c:	6a 0f       	add	r22, r26
 c4e:	71 1d       	adc	r23, r1
 c50:	81 1d       	adc	r24, r1
 c52:	91 1d       	adc	r25, r1
 c54:	a1 1d       	adc	r26, r1
 c56:	20 d0       	rcall	.+64     	; 0xc98 <__ultoa_invert+0x84>
 c58:	09 f4       	brne	.+2      	; 0xc5c <__ultoa_invert+0x48>
 c5a:	68 94       	set
 c5c:	3f 91       	pop	r19
 c5e:	2a e0       	ldi	r18, 0x0A	; 10
 c60:	26 9f       	mul	r18, r22
 c62:	11 24       	eor	r1, r1
 c64:	30 19       	sub	r19, r0
 c66:	30 5d       	subi	r19, 0xD0	; 208
 c68:	31 93       	st	Z+, r19
 c6a:	de f6       	brtc	.-74     	; 0xc22 <__ultoa_invert+0xe>
 c6c:	cf 01       	movw	r24, r30
 c6e:	08 95       	ret
 c70:	46 2f       	mov	r20, r22
 c72:	47 70       	andi	r20, 0x07	; 7
 c74:	40 5d       	subi	r20, 0xD0	; 208
 c76:	41 93       	st	Z+, r20
 c78:	b3 e0       	ldi	r27, 0x03	; 3
 c7a:	0f d0       	rcall	.+30     	; 0xc9a <__ultoa_invert+0x86>
 c7c:	c9 f7       	brne	.-14     	; 0xc70 <__ultoa_invert+0x5c>
 c7e:	f6 cf       	rjmp	.-20     	; 0xc6c <__ultoa_invert+0x58>
 c80:	46 2f       	mov	r20, r22
 c82:	4f 70       	andi	r20, 0x0F	; 15
 c84:	40 5d       	subi	r20, 0xD0	; 208
 c86:	4a 33       	cpi	r20, 0x3A	; 58
 c88:	18 f0       	brcs	.+6      	; 0xc90 <__ultoa_invert+0x7c>
 c8a:	49 5d       	subi	r20, 0xD9	; 217
 c8c:	31 fd       	sbrc	r19, 1
 c8e:	40 52       	subi	r20, 0x20	; 32
 c90:	41 93       	st	Z+, r20
 c92:	02 d0       	rcall	.+4      	; 0xc98 <__ultoa_invert+0x84>
 c94:	a9 f7       	brne	.-22     	; 0xc80 <__ultoa_invert+0x6c>
 c96:	ea cf       	rjmp	.-44     	; 0xc6c <__ultoa_invert+0x58>
 c98:	b4 e0       	ldi	r27, 0x04	; 4
 c9a:	a6 95       	lsr	r26
 c9c:	97 95       	ror	r25
 c9e:	87 95       	ror	r24
 ca0:	77 95       	ror	r23
 ca2:	67 95       	ror	r22
 ca4:	ba 95       	dec	r27
 ca6:	c9 f7       	brne	.-14     	; 0xc9a <__ultoa_invert+0x86>
 ca8:	00 97       	sbiw	r24, 0x00	; 0
 caa:	61 05       	cpc	r22, r1
 cac:	71 05       	cpc	r23, r1
 cae:	08 95       	ret
 cb0:	9b 01       	movw	r18, r22
 cb2:	ac 01       	movw	r20, r24
 cb4:	0a 2e       	mov	r0, r26
 cb6:	06 94       	lsr	r0
 cb8:	57 95       	ror	r21
 cba:	47 95       	ror	r20
 cbc:	37 95       	ror	r19
 cbe:	27 95       	ror	r18
 cc0:	ba 95       	dec	r27
 cc2:	c9 f7       	brne	.-14     	; 0xcb6 <__ultoa_invert+0xa2>
 cc4:	62 0f       	add	r22, r18
 cc6:	73 1f       	adc	r23, r19
 cc8:	84 1f       	adc	r24, r20
 cca:	95 1f       	adc	r25, r21
 ccc:	a0 1d       	adc	r26, r0
 cce:	08 95       	ret

00000cd0 <__prologue_saves__>:
 cd0:	2f 92       	push	r2
 cd2:	3f 92       	push	r3
 cd4:	4f 92       	push	r4
 cd6:	5f 92       	push	r5
 cd8:	6f 92       	push	r6
 cda:	7f 92       	push	r7
 cdc:	8f 92       	push	r8
 cde:	9f 92       	push	r9
 ce0:	af 92       	push	r10
 ce2:	bf 92       	push	r11
 ce4:	cf 92       	push	r12
 ce6:	df 92       	push	r13
 ce8:	ef 92       	push	r14
 cea:	ff 92       	push	r15
 cec:	0f 93       	push	r16
 cee:	1f 93       	push	r17
 cf0:	cf 93       	push	r28
 cf2:	df 93       	push	r29
 cf4:	cd b7       	in	r28, 0x3d	; 61
 cf6:	de b7       	in	r29, 0x3e	; 62
 cf8:	ca 1b       	sub	r28, r26
 cfa:	db 0b       	sbc	r29, r27
 cfc:	cd bf       	out	0x3d, r28	; 61
 cfe:	de bf       	out	0x3e, r29	; 62
 d00:	09 94       	ijmp

00000d02 <__epilogue_restores__>:
 d02:	2a 88       	ldd	r2, Y+18	; 0x12
 d04:	39 88       	ldd	r3, Y+17	; 0x11
 d06:	48 88       	ldd	r4, Y+16	; 0x10
 d08:	5f 84       	ldd	r5, Y+15	; 0x0f
 d0a:	6e 84       	ldd	r6, Y+14	; 0x0e
 d0c:	7d 84       	ldd	r7, Y+13	; 0x0d
 d0e:	8c 84       	ldd	r8, Y+12	; 0x0c
 d10:	9b 84       	ldd	r9, Y+11	; 0x0b
 d12:	aa 84       	ldd	r10, Y+10	; 0x0a
 d14:	b9 84       	ldd	r11, Y+9	; 0x09
 d16:	c8 84       	ldd	r12, Y+8	; 0x08
 d18:	df 80       	ldd	r13, Y+7	; 0x07
 d1a:	ee 80       	ldd	r14, Y+6	; 0x06
 d1c:	fd 80       	ldd	r15, Y+5	; 0x05
 d1e:	0c 81       	ldd	r16, Y+4	; 0x04
 d20:	1b 81       	ldd	r17, Y+3	; 0x03
 d22:	aa 81       	ldd	r26, Y+2	; 0x02
 d24:	b9 81       	ldd	r27, Y+1	; 0x01
 d26:	ce 0f       	add	r28, r30
 d28:	d1 1d       	adc	r29, r1
 d2a:	cd bf       	out	0x3d, r28	; 61
 d2c:	de bf       	out	0x3e, r29	; 62
 d2e:	ed 01       	movw	r28, r26
 d30:	08 95       	ret

00000d32 <_exit>:
 d32:	f8 94       	cli

00000d34 <__stop_program>:
 d34:	ff cf       	rjmp	.-2      	; 0xd34 <__stop_program>
