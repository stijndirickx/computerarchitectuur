
gamecontroller.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000da4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000026  00802000  00000da4  00000e38  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000006c  00802026  00802026  00000e5e  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000e5e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000ebc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000170  00000000  00000000  00000efc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001347  00000000  00000000  0000106c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000006a2  00000000  00000000  000023b3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000174d  00000000  00000000  00002a55  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000350  00000000  00000000  000041a4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00011f17  00000000  00000000  000044f4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000557  00000000  00000000  0001640b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000f0  00000000  00000000  00016962  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  0000583a  00000000  00000000  00016a52  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 b6 00 	jmp	0x16c	; 0x16c <__ctors_end>
   4:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
   8:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
   c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  10:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  14:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  18:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  1c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  20:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  24:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  28:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  2c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  30:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  34:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  38:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  3c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  40:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  44:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  48:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  4c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  50:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  54:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  58:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  5c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  60:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  64:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  68:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  6c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  70:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  74:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  78:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  7c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  80:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  84:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  88:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  8c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  90:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  94:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  98:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  9c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  a0:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  a4:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  a8:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  ac:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  b0:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  b4:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  b8:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  bc:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  c0:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  c4:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  c8:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  cc:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  d0:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  d4:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  d8:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  dc:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  e0:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  e4:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  e8:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  ec:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  f0:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  f4:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  f8:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  fc:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 100:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 104:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 108:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 10c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 110:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 114:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 118:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 11c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 120:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 124:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 128:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 12c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 130:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 134:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 138:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 13c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 140:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 144:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 148:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 14c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 150:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 154:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 158:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 15c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 160:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 164:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 168:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>

0000016c <__ctors_end>:
 16c:	11 24       	eor	r1, r1
 16e:	1f be       	out	0x3f, r1	; 63
 170:	cf ef       	ldi	r28, 0xFF	; 255
 172:	cd bf       	out	0x3d, r28	; 61
 174:	d7 e2       	ldi	r29, 0x27	; 39
 176:	de bf       	out	0x3e, r29	; 62

00000178 <__do_copy_data>:
 178:	10 e2       	ldi	r17, 0x20	; 32
 17a:	a0 e0       	ldi	r26, 0x00	; 0
 17c:	b0 e2       	ldi	r27, 0x20	; 32
 17e:	e4 ea       	ldi	r30, 0xA4	; 164
 180:	fd e0       	ldi	r31, 0x0D	; 13
 182:	02 c0       	rjmp	.+4      	; 0x188 <__do_copy_data+0x10>
 184:	05 90       	lpm	r0, Z+
 186:	0d 92       	st	X+, r0
 188:	a6 32       	cpi	r26, 0x26	; 38
 18a:	b1 07       	cpc	r27, r17
 18c:	d9 f7       	brne	.-10     	; 0x184 <__do_copy_data+0xc>

0000018e <__do_clear_bss>:
 18e:	20 e2       	ldi	r18, 0x20	; 32
 190:	a6 e2       	ldi	r26, 0x26	; 38
 192:	b0 e2       	ldi	r27, 0x20	; 32
 194:	01 c0       	rjmp	.+2      	; 0x198 <.do_clear_bss_start>

00000196 <.do_clear_bss_loop>:
 196:	1d 92       	st	X+, r1

00000198 <.do_clear_bss_start>:
 198:	a2 39       	cpi	r26, 0x92	; 146
 19a:	b2 07       	cpc	r27, r18
 19c:	e1 f7       	brne	.-8      	; 0x196 <.do_clear_bss_loop>
 19e:	0e 94 0c 01 	call	0x218	; 0x218 <main>
 1a2:	0c 94 d0 06 	jmp	0xda0	; 0xda0 <_exit>

000001a6 <__bad_interrupt>:
 1a6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001aa <AccInit>:
#include "acc.h"



void AccInit(void)
{
 1aa:	cf 93       	push	r28
 1ac:	df 93       	push	r29
 1ae:	cd b7       	in	r28, 0x3d	; 61
 1b0:	de b7       	in	r29, 0x3e	; 62

	
}
 1b2:	00 00       	nop
 1b4:	df 91       	pop	r29
 1b6:	cf 91       	pop	r28
 1b8:	08 95       	ret

000001ba <AnalogInit>:
#include "Analog.h"
#include <avr/io.h>

void AnalogInit(void)
{
 1ba:	cf 93       	push	r28
 1bc:	df 93       	push	r29
 1be:	cd b7       	in	r28, 0x3d	; 61
 1c0:	de b7       	in	r29, 0x3e	; 62
	ADCA.REFCTRL = 0b0000010; // 0 - 000 (INT1V: referentie 1V) - 0 - 1 (bandgap enable: 'verboden zone') - 0 (temp sensor uit)
 1c2:	80 e0       	ldi	r24, 0x00	; 0
 1c4:	92 e0       	ldi	r25, 0x02	; 2
 1c6:	22 e0       	ldi	r18, 0x02	; 2
 1c8:	fc 01       	movw	r30, r24
 1ca:	22 83       	std	Z+2, r18	; 0x02
	ADCA.PRESCALER = 0b00000010; // 010 = DIV16 = divide by 16 --> 16 MHz (clock) / 16 = 1 MHz
 1cc:	80 e0       	ldi	r24, 0x00	; 0
 1ce:	92 e0       	ldi	r25, 0x02	; 2
 1d0:	22 e0       	ldi	r18, 0x02	; 2
 1d2:	fc 01       	movw	r30, r24
 1d4:	24 83       	std	Z+4, r18	; 0x04
	ADCA.CTRLA = 0b00000101; // 00000 = reserved - 1 CH0start - 0 pipeline flush - 1 enable ADC
 1d6:	80 e0       	ldi	r24, 0x00	; 0
 1d8:	92 e0       	ldi	r25, 0x02	; 2
 1da:	25 e0       	ldi	r18, 0x05	; 5
 1dc:	fc 01       	movw	r30, r24
 1de:	20 83       	st	Z, r18
	//ADCA.CTRLB = 0b00010000; // 0 momenteel unused - 00 current limiet uit - 1 Conversion Mode: configured for signed mode - 0 geen freerunning - 00 conversion op 12-bit, right adjusted - 0 

}
 1e0:	00 00       	nop
 1e2:	df 91       	pop	r29
 1e4:	cf 91       	pop	r28
 1e6:	08 95       	ret

000001e8 <ClockInit>:
#pragma GCC push_options
#pragma GCC optimize ("O2") //This function must be optimized to avoid too long time interval betwee CCP write and CLK.CTRL write (4 CLK CYC max)

void ClockInit(void)
{
	OSC.XOSCCTRL=0b11001011; //Clock<=16MHz	
 1e8:	8b ec       	ldi	r24, 0xCB	; 203
 1ea:	80 93 52 00 	sts	0x0052, r24	; 0x800052 <__TEXT_REGION_LENGTH__+0x700052>
	OSC.CTRL=0b01000; //Enable oscillator	
 1ee:	88 e0       	ldi	r24, 0x08	; 8
 1f0:	80 93 50 00 	sts	0x0050, r24	; 0x800050 <__TEXT_REGION_LENGTH__+0x700050>
	while (!(OSC.STATUS&0b1000)); //Wait until XTAL osc is ready
 1f4:	80 91 51 00 	lds	r24, 0x0051	; 0x800051 <__TEXT_REGION_LENGTH__+0x700051>
 1f8:	83 ff       	sbrs	r24, 3
 1fa:	fc cf       	rjmp	.-8      	; 0x1f4 <ClockInit+0xc>
	
	//Select XTAL osc as system CLK source
	CCP=0xd8;
 1fc:	88 ed       	ldi	r24, 0xD8	; 216
 1fe:	84 bf       	out	0x34, r24	; 52
    CLK.CTRL=0b0011;
 200:	83 e0       	ldi	r24, 0x03	; 3
 202:	80 93 40 00 	sts	0x0040, r24	; 0x800040 <__TEXT_REGION_LENGTH__+0x700040>
 206:	08 95       	ret

00000208 <EncoderInit>:
#include <util/delay.h>
#include <stdio.h>
#include "encoder.h"

void EncoderInit(void)
{
 208:	cf 93       	push	r28
 20a:	df 93       	push	r29
 20c:	cd b7       	in	r28, 0x3d	; 61
 20e:	de b7       	in	r29, 0x3e	; 62

}
 210:	00 00       	nop
 212:	df 91       	pop	r29
 214:	cf 91       	pop	r28
 216:	08 95       	ret

00000218 <main>:

void SimpleFunction(void);	//A simple function: print a counter (0 to 9) to the terminal
void LightLoop(void);

int main(void)
{	
 218:	cf 93       	push	r28
 21a:	df 93       	push	r29
 21c:	cd b7       	in	r28, 0x3d	; 61
 21e:	de b7       	in	r29, 0x3e	; 62
 220:	2e 97       	sbiw	r28, 0x0e	; 14
 222:	cd bf       	out	0x3d, r28	; 61
 224:	de bf       	out	0x3e, r29	; 62
	//###1###
	
	//Initialize subsystems
	ClockInit();			//Initialize system clock (16 MHz)
 226:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <ClockInit>
	USARTInit();			//Initialize USART and bind to stdout,stdin
 22a:	0e 94 2c 02 	call	0x458	; 0x458 <USARTInit>
	AnalogInit();			//Initialize ADC
 22e:	0e 94 dd 00 	call	0x1ba	; 0x1ba <AnalogInit>
	AccInit();				//Initialize accelerometer system
 232:	0e 94 d5 00 	call	0x1aa	; 0x1aa <AccInit>
	LEDInit();				//Initialize LEDs
 236:	0e 94 ff 01 	call	0x3fe	; 0x3fe <LEDInit>
	//SwitchInit();			//Initialize switches
	EncoderInit();			//Initialize encoder
 23a:	0e 94 04 01 	call	0x208	; 0x208 <EncoderInit>
	SpeakerInit();			//Initialize speaker system
 23e:	0e 94 24 02 	call	0x448	; 0x448 <SpeakerInit>

	//Enable interrupts
	PMIC.CTRL|=0b00000111;  //Enable low, medium, high priority interrupts
 242:	80 ea       	ldi	r24, 0xA0	; 160
 244:	90 e0       	ldi	r25, 0x00	; 0
 246:	20 ea       	ldi	r18, 0xA0	; 160
 248:	30 e0       	ldi	r19, 0x00	; 0
 24a:	f9 01       	movw	r30, r18
 24c:	22 81       	ldd	r18, Z+2	; 0x02
 24e:	27 60       	ori	r18, 0x07	; 7
 250:	fc 01       	movw	r30, r24
 252:	22 83       	std	Z+2, r18	; 0x02
	SREG|=0b10000000;		//Globale interrupt enable
 254:	8f e3       	ldi	r24, 0x3F	; 63
 256:	90 e0       	ldi	r25, 0x00	; 0
 258:	2f e3       	ldi	r18, 0x3F	; 63
 25a:	30 e0       	ldi	r19, 0x00	; 0
 25c:	f9 01       	movw	r30, r18
 25e:	20 81       	ld	r18, Z
 260:	20 68       	ori	r18, 0x80	; 128
 262:	fc 01       	movw	r30, r24
 264:	20 83       	st	Z, r18
 266:	80 e0       	ldi	r24, 0x00	; 0
 268:	90 e0       	ldi	r25, 0x00	; 0
 26a:	aa ef       	ldi	r26, 0xFA	; 250
 26c:	b3 e4       	ldi	r27, 0x43	; 67
 26e:	89 83       	std	Y+1, r24	; 0x01
 270:	9a 83       	std	Y+2, r25	; 0x02
 272:	ab 83       	std	Y+3, r26	; 0x03
 274:	bc 83       	std	Y+4, r27	; 0x04

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
 276:	20 e0       	ldi	r18, 0x00	; 0
 278:	30 e0       	ldi	r19, 0x00	; 0
 27a:	4a e7       	ldi	r20, 0x7A	; 122
 27c:	55 e4       	ldi	r21, 0x45	; 69
 27e:	69 81       	ldd	r22, Y+1	; 0x01
 280:	7a 81       	ldd	r23, Y+2	; 0x02
 282:	8b 81       	ldd	r24, Y+3	; 0x03
 284:	9c 81       	ldd	r25, Y+4	; 0x04
 286:	0e 94 27 03 	call	0x64e	; 0x64e <__mulsf3>
 28a:	dc 01       	movw	r26, r24
 28c:	cb 01       	movw	r24, r22
 28e:	8d 83       	std	Y+5, r24	; 0x05
 290:	9e 83       	std	Y+6, r25	; 0x06
 292:	af 83       	std	Y+7, r26	; 0x07
 294:	b8 87       	std	Y+8, r27	; 0x08
	if (__tmp < 1.0)
 296:	20 e0       	ldi	r18, 0x00	; 0
 298:	30 e0       	ldi	r19, 0x00	; 0
 29a:	40 e8       	ldi	r20, 0x80	; 128
 29c:	5f e3       	ldi	r21, 0x3F	; 63
 29e:	6d 81       	ldd	r22, Y+5	; 0x05
 2a0:	7e 81       	ldd	r23, Y+6	; 0x06
 2a2:	8f 81       	ldd	r24, Y+7	; 0x07
 2a4:	98 85       	ldd	r25, Y+8	; 0x08
 2a6:	0e 94 a1 02 	call	0x542	; 0x542 <__cmpsf2>
 2aa:	88 23       	and	r24, r24
 2ac:	2c f4       	brge	.+10     	; 0x2b8 <main+0xa0>
		__ticks = 1;
 2ae:	81 e0       	ldi	r24, 0x01	; 1
 2b0:	90 e0       	ldi	r25, 0x00	; 0
 2b2:	89 87       	std	Y+9, r24	; 0x09
 2b4:	9a 87       	std	Y+10, r25	; 0x0a
 2b6:	3f c0       	rjmp	.+126    	; 0x336 <main+0x11e>
	else if (__tmp > 65535)
 2b8:	20 e0       	ldi	r18, 0x00	; 0
 2ba:	3f ef       	ldi	r19, 0xFF	; 255
 2bc:	4f e7       	ldi	r20, 0x7F	; 127
 2be:	57 e4       	ldi	r21, 0x47	; 71
 2c0:	6d 81       	ldd	r22, Y+5	; 0x05
 2c2:	7e 81       	ldd	r23, Y+6	; 0x06
 2c4:	8f 81       	ldd	r24, Y+7	; 0x07
 2c6:	98 85       	ldd	r25, Y+8	; 0x08
 2c8:	0e 94 22 03 	call	0x644	; 0x644 <__gesf2>
 2cc:	18 16       	cp	r1, r24
 2ce:	4c f5       	brge	.+82     	; 0x322 <main+0x10a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 2d0:	20 e0       	ldi	r18, 0x00	; 0
 2d2:	30 e0       	ldi	r19, 0x00	; 0
 2d4:	40 e2       	ldi	r20, 0x20	; 32
 2d6:	51 e4       	ldi	r21, 0x41	; 65
 2d8:	69 81       	ldd	r22, Y+1	; 0x01
 2da:	7a 81       	ldd	r23, Y+2	; 0x02
 2dc:	8b 81       	ldd	r24, Y+3	; 0x03
 2de:	9c 81       	ldd	r25, Y+4	; 0x04
 2e0:	0e 94 27 03 	call	0x64e	; 0x64e <__mulsf3>
 2e4:	dc 01       	movw	r26, r24
 2e6:	cb 01       	movw	r24, r22
 2e8:	bc 01       	movw	r22, r24
 2ea:	cd 01       	movw	r24, r26
 2ec:	0e 94 a6 02 	call	0x54c	; 0x54c <__fixunssfsi>
 2f0:	dc 01       	movw	r26, r24
 2f2:	cb 01       	movw	r24, r22
 2f4:	89 87       	std	Y+9, r24	; 0x09
 2f6:	9a 87       	std	Y+10, r25	; 0x0a
 2f8:	0f c0       	rjmp	.+30     	; 0x318 <main+0x100>
 2fa:	80 e9       	ldi	r24, 0x90	; 144
 2fc:	91 e0       	ldi	r25, 0x01	; 1
 2fe:	8b 87       	std	Y+11, r24	; 0x0b
 300:	9c 87       	std	Y+12, r25	; 0x0c
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
 302:	8b 85       	ldd	r24, Y+11	; 0x0b
 304:	9c 85       	ldd	r25, Y+12	; 0x0c
 306:	01 97       	sbiw	r24, 0x01	; 1
 308:	f1 f7       	brne	.-4      	; 0x306 <main+0xee>
 30a:	8b 87       	std	Y+11, r24	; 0x0b
 30c:	9c 87       	std	Y+12, r25	; 0x0c
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 30e:	89 85       	ldd	r24, Y+9	; 0x09
 310:	9a 85       	ldd	r25, Y+10	; 0x0a
 312:	01 97       	sbiw	r24, 0x01	; 1
 314:	89 87       	std	Y+9, r24	; 0x09
 316:	9a 87       	std	Y+10, r25	; 0x0a
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 318:	89 85       	ldd	r24, Y+9	; 0x09
 31a:	9a 85       	ldd	r25, Y+10	; 0x0a
 31c:	89 2b       	or	r24, r25
 31e:	69 f7       	brne	.-38     	; 0x2fa <main+0xe2>
 320:	14 c0       	rjmp	.+40     	; 0x34a <main+0x132>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 322:	6d 81       	ldd	r22, Y+5	; 0x05
 324:	7e 81       	ldd	r23, Y+6	; 0x06
 326:	8f 81       	ldd	r24, Y+7	; 0x07
 328:	98 85       	ldd	r25, Y+8	; 0x08
 32a:	0e 94 a6 02 	call	0x54c	; 0x54c <__fixunssfsi>
 32e:	dc 01       	movw	r26, r24
 330:	cb 01       	movw	r24, r22
 332:	89 87       	std	Y+9, r24	; 0x09
 334:	9a 87       	std	Y+10, r25	; 0x0a
 336:	89 85       	ldd	r24, Y+9	; 0x09
 338:	9a 85       	ldd	r25, Y+10	; 0x0a
 33a:	8d 87       	std	Y+13, r24	; 0x0d
 33c:	9e 87       	std	Y+14, r25	; 0x0e
 33e:	8d 85       	ldd	r24, Y+13	; 0x0d
 340:	9e 85       	ldd	r25, Y+14	; 0x0e
 342:	01 97       	sbiw	r24, 0x01	; 1
 344:	f1 f7       	brne	.-4      	; 0x342 <main+0x12a>
 346:	8d 87       	std	Y+13, r24	; 0x0d
 348:	9e 87       	std	Y+14, r25	; 0x0e
	_delay_ms(500);

	//###2###
	SimpleFunction();
 34a:	0e 94 a8 01 	call	0x350	; 0x350 <SimpleFunction>
	//LightLoop();
	while (1);
 34e:	ff cf       	rjmp	.-2      	; 0x34e <main+0x136>

00000350 <SimpleFunction>:
}

void SimpleFunction(void)
{
 350:	cf 93       	push	r28
 352:	df 93       	push	r29
 354:	cd b7       	in	r28, 0x3d	; 61
 356:	de b7       	in	r29, 0x3e	; 62
	for (a=0;a<10;a++)
 358:	10 92 8a 20 	sts	0x208A, r1	; 0x80208a <a>
 35c:	10 92 8b 20 	sts	0x208B, r1	; 0x80208b <a+0x1>
 360:	43 c0       	rjmp	.+134    	; 0x3e8 <SimpleFunction+0x98>
	{
		//The variable text had the same address throughout the execution of the program.
		sprintf(text[a],"Counter:%d\r",a);
 362:	40 91 8a 20 	lds	r20, 0x208A	; 0x80208a <a>
 366:	50 91 8b 20 	lds	r21, 0x208B	; 0x80208b <a+0x1>
 36a:	80 91 8a 20 	lds	r24, 0x208A	; 0x80208a <a>
 36e:	90 91 8b 20 	lds	r25, 0x208B	; 0x80208b <a+0x1>
 372:	88 0f       	add	r24, r24
 374:	99 1f       	adc	r25, r25
 376:	9c 01       	movw	r18, r24
 378:	22 0f       	add	r18, r18
 37a:	33 1f       	adc	r19, r19
 37c:	22 0f       	add	r18, r18
 37e:	33 1f       	adc	r19, r19
 380:	82 0f       	add	r24, r18
 382:	93 1f       	adc	r25, r19
 384:	8a 5d       	subi	r24, 0xDA	; 218
 386:	9f 4d       	sbci	r25, 0xDF	; 223
 388:	25 2f       	mov	r18, r21
 38a:	2f 93       	push	r18
 38c:	24 2f       	mov	r18, r20
 38e:	2f 93       	push	r18
 390:	2e e0       	ldi	r18, 0x0E	; 14
 392:	30 e2       	ldi	r19, 0x20	; 32
 394:	23 2f       	mov	r18, r19
 396:	2f 93       	push	r18
 398:	2e e0       	ldi	r18, 0x0E	; 14
 39a:	30 e2       	ldi	r19, 0x20	; 32
 39c:	2f 93       	push	r18
 39e:	29 2f       	mov	r18, r25
 3a0:	2f 93       	push	r18
 3a2:	8f 93       	push	r24
 3a4:	0e 94 ec 03 	call	0x7d8	; 0x7d8 <sprintf>
 3a8:	0f 90       	pop	r0
 3aa:	0f 90       	pop	r0
 3ac:	0f 90       	pop	r0
 3ae:	0f 90       	pop	r0
 3b0:	0f 90       	pop	r0
 3b2:	0f 90       	pop	r0
		puts(text[a]);
 3b4:	80 91 8a 20 	lds	r24, 0x208A	; 0x80208a <a>
 3b8:	90 91 8b 20 	lds	r25, 0x208B	; 0x80208b <a+0x1>
 3bc:	88 0f       	add	r24, r24
 3be:	99 1f       	adc	r25, r25
 3c0:	9c 01       	movw	r18, r24
 3c2:	22 0f       	add	r18, r18
 3c4:	33 1f       	adc	r19, r19
 3c6:	22 0f       	add	r18, r18
 3c8:	33 1f       	adc	r19, r19
 3ca:	82 0f       	add	r24, r18
 3cc:	93 1f       	adc	r25, r19
 3ce:	8a 5d       	subi	r24, 0xDA	; 218
 3d0:	9f 4d       	sbci	r25, 0xDF	; 223
 3d2:	0e 94 bc 03 	call	0x778	; 0x778 <puts>
	while (1);
}

void SimpleFunction(void)
{
	for (a=0;a<10;a++)
 3d6:	80 91 8a 20 	lds	r24, 0x208A	; 0x80208a <a>
 3da:	90 91 8b 20 	lds	r25, 0x208B	; 0x80208b <a+0x1>
 3de:	01 96       	adiw	r24, 0x01	; 1
 3e0:	80 93 8a 20 	sts	0x208A, r24	; 0x80208a <a>
 3e4:	90 93 8b 20 	sts	0x208B, r25	; 0x80208b <a+0x1>
 3e8:	80 91 8a 20 	lds	r24, 0x208A	; 0x80208a <a>
 3ec:	90 91 8b 20 	lds	r25, 0x208B	; 0x80208b <a+0x1>
 3f0:	0a 97       	sbiw	r24, 0x0a	; 10
 3f2:	0c f4       	brge	.+2      	; 0x3f6 <SimpleFunction+0xa6>
 3f4:	b6 cf       	rjmp	.-148    	; 0x362 <SimpleFunction+0x12>
	{
		//The variable text had the same address throughout the execution of the program.
		sprintf(text[a],"Counter:%d\r",a);
		puts(text[a]);
	}
}
 3f6:	00 00       	nop
 3f8:	df 91       	pop	r29
 3fa:	cf 91       	pop	r28
 3fc:	08 95       	ret

000003fe <LEDInit>:
#include "LED.h"
#include <avr/io.h>

void LEDInit(void)
{
 3fe:	cf 93       	push	r28
 400:	df 93       	push	r29
 402:	cd b7       	in	r28, 0x3d	; 61
 404:	de b7       	in	r29, 0x3e	; 62
	PORTE.DIRSET |= 0b00001111; //dir = 1 --> output
 406:	80 e8       	ldi	r24, 0x80	; 128
 408:	96 e0       	ldi	r25, 0x06	; 6
 40a:	20 e8       	ldi	r18, 0x80	; 128
 40c:	36 e0       	ldi	r19, 0x06	; 6
 40e:	f9 01       	movw	r30, r18
 410:	21 81       	ldd	r18, Z+1	; 0x01
 412:	2f 60       	ori	r18, 0x0F	; 15
 414:	fc 01       	movw	r30, r24
 416:	21 83       	std	Z+1, r18	; 0x01
	PORTE.PIN0CTRL=PORT_OPC_PULLUP_gc; //enkel belangrijk on input
 418:	80 e8       	ldi	r24, 0x80	; 128
 41a:	96 e0       	ldi	r25, 0x06	; 6
 41c:	28 e1       	ldi	r18, 0x18	; 24
 41e:	fc 01       	movw	r30, r24
 420:	20 8b       	std	Z+16, r18	; 0x10
	PORTE.PIN1CTRL=PORT_OPC_PULLUP_gc;
 422:	80 e8       	ldi	r24, 0x80	; 128
 424:	96 e0       	ldi	r25, 0x06	; 6
 426:	28 e1       	ldi	r18, 0x18	; 24
 428:	fc 01       	movw	r30, r24
 42a:	21 8b       	std	Z+17, r18	; 0x11
	PORTE.PIN2CTRL=PORT_OPC_PULLUP_gc;
 42c:	80 e8       	ldi	r24, 0x80	; 128
 42e:	96 e0       	ldi	r25, 0x06	; 6
 430:	28 e1       	ldi	r18, 0x18	; 24
 432:	fc 01       	movw	r30, r24
 434:	22 8b       	std	Z+18, r18	; 0x12
	PORTE.PIN3CTRL=PORT_OPC_PULLUP_gc;
 436:	80 e8       	ldi	r24, 0x80	; 128
 438:	96 e0       	ldi	r25, 0x06	; 6
 43a:	28 e1       	ldi	r18, 0x18	; 24
 43c:	fc 01       	movw	r30, r24
 43e:	23 8b       	std	Z+19, r18	; 0x13
}
 440:	00 00       	nop
 442:	df 91       	pop	r29
 444:	cf 91       	pop	r28
 446:	08 95       	ret

00000448 <SpeakerInit>:
#include <avr/io.h>
#include <avr/interrupt.h>
#include "speaker.h"

void SpeakerInit(void)
{
 448:	cf 93       	push	r28
 44a:	df 93       	push	r29
 44c:	cd b7       	in	r28, 0x3d	; 61
 44e:	de b7       	in	r29, 0x3e	; 62
		//TCC1.CTRLB=
		//TCC1.CTRLC=
		//TCC1.CTRLD=
		//TCC1.CTRLE=
		
}
 450:	00 00       	nop
 452:	df 91       	pop	r29
 454:	cf 91       	pop	r28
 456:	08 95       	ret

00000458 <USARTInit>:
static int stdio_putchar(char c, FILE * stream);
static int stdio_getchar(FILE *stream);
static FILE UsartStdio = FDEV_SETUP_STREAM(stdio_putchar, stdio_getchar,_FDEV_SETUP_WRITE);

void USARTInit(void)
{
 458:	cf 93       	push	r28
 45a:	df 93       	push	r29
 45c:	cd b7       	in	r28, 0x3d	; 61
 45e:	de b7       	in	r29, 0x3e	; 62
	USART_PORT.DIRSET=0b00001000;	//transmitlijn als output, receive lijn als input
 460:	80 e4       	ldi	r24, 0x40	; 64
 462:	96 e0       	ldi	r25, 0x06	; 6
 464:	28 e0       	ldi	r18, 0x08	; 8
 466:	fc 01       	movw	r30, r24
 468:	21 83       	std	Z+1, r18	; 0x01
	USART_PORT.DIRCLR=0b00000100;
 46a:	80 e4       	ldi	r24, 0x40	; 64
 46c:	96 e0       	ldi	r25, 0x06	; 6
 46e:	24 e0       	ldi	r18, 0x04	; 4
 470:	fc 01       	movw	r30, r24
 472:	22 83       	std	Z+2, r18	; 0x02
	
	USART.CTRLA=0b00000000; //polled mode = interrupts uitgeschakeld
 474:	80 ea       	ldi	r24, 0xA0	; 160
 476:	98 e0       	ldi	r25, 0x08	; 8
 478:	fc 01       	movw	r30, r24
 47a:	13 82       	std	Z+3, r1	; 0x03
	USART.CTRLB=0b00011000; //transmitter en reveicer aan, double speed comm uit
 47c:	80 ea       	ldi	r24, 0xA0	; 160
 47e:	98 e0       	ldi	r25, 0x08	; 8
 480:	28 e1       	ldi	r18, 0x18	; 24
 482:	fc 01       	movw	r30, r24
 484:	24 83       	std	Z+4, r18	; 0x04
	USART.CTRLC=0b00000011; // USART in async mode
 486:	80 ea       	ldi	r24, 0xA0	; 160
 488:	98 e0       	ldi	r25, 0x08	; 8
 48a:	23 e0       	ldi	r18, 0x03	; 3
 48c:	fc 01       	movw	r30, r24
 48e:	25 83       	std	Z+5, r18	; 0x05
	
	//USART.BAUDCTRLA=0xE5; //BSEL=3301, BSCALE=-5 9600 baud
	//USART.BAUDCTRLB=0xBC; 

	//BSEL=983=0011 1101 0111, BSCALE=-7=1001 --> 115200 baud [afwijking: 115211 baud]
	USART.BAUDCTRLA=0xD7; //1101 0111
 490:	80 ea       	ldi	r24, 0xA0	; 160
 492:	98 e0       	ldi	r25, 0x08	; 8
 494:	27 ed       	ldi	r18, 0xD7	; 215
 496:	fc 01       	movw	r30, r24
 498:	26 83       	std	Z+6, r18	; 0x06
	USART.BAUDCTRLB=0x93; //1001 0011
 49a:	80 ea       	ldi	r24, 0xA0	; 160
 49c:	98 e0       	ldi	r25, 0x08	; 8
 49e:	23 e9       	ldi	r18, 0x93	; 147
 4a0:	fc 01       	movw	r30, r24
 4a2:	27 83       	std	Z+7, r18	; 0x07
	
	stdout=&UsartStdio; // koppeling tussen drivercode en stdio lib
 4a4:	80 e0       	ldi	r24, 0x00	; 0
 4a6:	90 e2       	ldi	r25, 0x20	; 32
 4a8:	80 93 8e 20 	sts	0x208E, r24	; 0x80208e <__iob+0x2>
 4ac:	90 93 8f 20 	sts	0x208F, r25	; 0x80208f <__iob+0x3>
	stdin=&UsartStdio;
 4b0:	80 e0       	ldi	r24, 0x00	; 0
 4b2:	90 e2       	ldi	r25, 0x20	; 32
 4b4:	80 93 8c 20 	sts	0x208C, r24	; 0x80208c <__iob>
 4b8:	90 93 8d 20 	sts	0x208D, r25	; 0x80208d <__iob+0x1>
}
 4bc:	00 00       	nop
 4be:	df 91       	pop	r29
 4c0:	cf 91       	pop	r28
 4c2:	08 95       	ret

000004c4 <stdio_putchar>:

//vormt onderste laag van stdio lib
static int stdio_putchar(char c, FILE * stream) //1 byte over USART
{
 4c4:	cf 93       	push	r28
 4c6:	df 93       	push	r29
 4c8:	00 d0       	rcall	.+0      	; 0x4ca <stdio_putchar+0x6>
 4ca:	1f 92       	push	r1
 4cc:	cd b7       	in	r28, 0x3d	; 61
 4ce:	de b7       	in	r29, 0x3e	; 62
 4d0:	89 83       	std	Y+1, r24	; 0x01
 4d2:	6a 83       	std	Y+2, r22	; 0x02
 4d4:	7b 83       	std	Y+3, r23	; 0x03
	USART.DATA = 0x55;//USARTD --> c, USARTC --> 0x55 = 0101 0101
 4d6:	80 ea       	ldi	r24, 0xA0	; 160
 4d8:	98 e0       	ldi	r25, 0x08	; 8
 4da:	25 e5       	ldi	r18, 0x55	; 85
 4dc:	fc 01       	movw	r30, r24
 4de:	20 83       	st	Z, r18
	while (!(USART.STATUS & 0b01000000)); //wachten op TXCIF (Transmit Complete interrupt flag) = byte verzonden
 4e0:	00 00       	nop
 4e2:	80 ea       	ldi	r24, 0xA0	; 160
 4e4:	98 e0       	ldi	r25, 0x08	; 8
 4e6:	fc 01       	movw	r30, r24
 4e8:	81 81       	ldd	r24, Z+1	; 0x01
 4ea:	88 2f       	mov	r24, r24
 4ec:	90 e0       	ldi	r25, 0x00	; 0
 4ee:	80 74       	andi	r24, 0x40	; 64
 4f0:	99 27       	eor	r25, r25
 4f2:	89 2b       	or	r24, r25
 4f4:	b1 f3       	breq	.-20     	; 0x4e2 <stdio_putchar+0x1e>
	USART.STATUS=0b01000000; //vlag op 0 voor volgende datatransfer
 4f6:	80 ea       	ldi	r24, 0xA0	; 160
 4f8:	98 e0       	ldi	r25, 0x08	; 8
 4fa:	20 e4       	ldi	r18, 0x40	; 64
 4fc:	fc 01       	movw	r30, r24
 4fe:	21 83       	std	Z+1, r18	; 0x01
	return 0;
 500:	80 e0       	ldi	r24, 0x00	; 0
 502:	90 e0       	ldi	r25, 0x00	; 0
}
 504:	23 96       	adiw	r28, 0x03	; 3
 506:	cd bf       	out	0x3d, r28	; 61
 508:	de bf       	out	0x3e, r29	; 62
 50a:	df 91       	pop	r29
 50c:	cf 91       	pop	r28
 50e:	08 95       	ret

00000510 <stdio_getchar>:
	
static int stdio_getchar(FILE *stream)
{
 510:	cf 93       	push	r28
 512:	df 93       	push	r29
 514:	00 d0       	rcall	.+0      	; 0x516 <stdio_getchar+0x6>
 516:	cd b7       	in	r28, 0x3d	; 61
 518:	de b7       	in	r29, 0x3e	; 62
 51a:	89 83       	std	Y+1, r24	; 0x01
 51c:	9a 83       	std	Y+2, r25	; 0x02
	while (!(USART.STATUS & 0b10000000)); //wacht tot er een byte in de receive buffer zit
 51e:	00 00       	nop
 520:	80 ea       	ldi	r24, 0xA0	; 160
 522:	98 e0       	ldi	r25, 0x08	; 8
 524:	fc 01       	movw	r30, r24
 526:	81 81       	ldd	r24, Z+1	; 0x01
 528:	88 23       	and	r24, r24
 52a:	d4 f7       	brge	.-12     	; 0x520 <stdio_getchar+0x10>
	return USART.DATA;
 52c:	80 ea       	ldi	r24, 0xA0	; 160
 52e:	98 e0       	ldi	r25, 0x08	; 8
 530:	fc 01       	movw	r30, r24
 532:	80 81       	ld	r24, Z
 534:	88 2f       	mov	r24, r24
 536:	90 e0       	ldi	r25, 0x00	; 0
}
 538:	0f 90       	pop	r0
 53a:	0f 90       	pop	r0
 53c:	df 91       	pop	r29
 53e:	cf 91       	pop	r28
 540:	08 95       	ret

00000542 <__cmpsf2>:
 542:	0e 94 d5 02 	call	0x5aa	; 0x5aa <__fp_cmp>
 546:	08 f4       	brcc	.+2      	; 0x54a <__cmpsf2+0x8>
 548:	81 e0       	ldi	r24, 0x01	; 1
 54a:	08 95       	ret

0000054c <__fixunssfsi>:
 54c:	0e 94 01 03 	call	0x602	; 0x602 <__fp_splitA>
 550:	88 f0       	brcs	.+34     	; 0x574 <__fixunssfsi+0x28>
 552:	9f 57       	subi	r25, 0x7F	; 127
 554:	98 f0       	brcs	.+38     	; 0x57c <__fixunssfsi+0x30>
 556:	b9 2f       	mov	r27, r25
 558:	99 27       	eor	r25, r25
 55a:	b7 51       	subi	r27, 0x17	; 23
 55c:	b0 f0       	brcs	.+44     	; 0x58a <__fixunssfsi+0x3e>
 55e:	e1 f0       	breq	.+56     	; 0x598 <__fixunssfsi+0x4c>
 560:	66 0f       	add	r22, r22
 562:	77 1f       	adc	r23, r23
 564:	88 1f       	adc	r24, r24
 566:	99 1f       	adc	r25, r25
 568:	1a f0       	brmi	.+6      	; 0x570 <__fixunssfsi+0x24>
 56a:	ba 95       	dec	r27
 56c:	c9 f7       	brne	.-14     	; 0x560 <__fixunssfsi+0x14>
 56e:	14 c0       	rjmp	.+40     	; 0x598 <__fixunssfsi+0x4c>
 570:	b1 30       	cpi	r27, 0x01	; 1
 572:	91 f0       	breq	.+36     	; 0x598 <__fixunssfsi+0x4c>
 574:	0e 94 1b 03 	call	0x636	; 0x636 <__fp_zero>
 578:	b1 e0       	ldi	r27, 0x01	; 1
 57a:	08 95       	ret
 57c:	0c 94 1b 03 	jmp	0x636	; 0x636 <__fp_zero>
 580:	67 2f       	mov	r22, r23
 582:	78 2f       	mov	r23, r24
 584:	88 27       	eor	r24, r24
 586:	b8 5f       	subi	r27, 0xF8	; 248
 588:	39 f0       	breq	.+14     	; 0x598 <__fixunssfsi+0x4c>
 58a:	b9 3f       	cpi	r27, 0xF9	; 249
 58c:	cc f3       	brlt	.-14     	; 0x580 <__fixunssfsi+0x34>
 58e:	86 95       	lsr	r24
 590:	77 95       	ror	r23
 592:	67 95       	ror	r22
 594:	b3 95       	inc	r27
 596:	d9 f7       	brne	.-10     	; 0x58e <__fixunssfsi+0x42>
 598:	3e f4       	brtc	.+14     	; 0x5a8 <__fixunssfsi+0x5c>
 59a:	90 95       	com	r25
 59c:	80 95       	com	r24
 59e:	70 95       	com	r23
 5a0:	61 95       	neg	r22
 5a2:	7f 4f       	sbci	r23, 0xFF	; 255
 5a4:	8f 4f       	sbci	r24, 0xFF	; 255
 5a6:	9f 4f       	sbci	r25, 0xFF	; 255
 5a8:	08 95       	ret

000005aa <__fp_cmp>:
 5aa:	99 0f       	add	r25, r25
 5ac:	00 08       	sbc	r0, r0
 5ae:	55 0f       	add	r21, r21
 5b0:	aa 0b       	sbc	r26, r26
 5b2:	e0 e8       	ldi	r30, 0x80	; 128
 5b4:	fe ef       	ldi	r31, 0xFE	; 254
 5b6:	16 16       	cp	r1, r22
 5b8:	17 06       	cpc	r1, r23
 5ba:	e8 07       	cpc	r30, r24
 5bc:	f9 07       	cpc	r31, r25
 5be:	c0 f0       	brcs	.+48     	; 0x5f0 <__fp_cmp+0x46>
 5c0:	12 16       	cp	r1, r18
 5c2:	13 06       	cpc	r1, r19
 5c4:	e4 07       	cpc	r30, r20
 5c6:	f5 07       	cpc	r31, r21
 5c8:	98 f0       	brcs	.+38     	; 0x5f0 <__fp_cmp+0x46>
 5ca:	62 1b       	sub	r22, r18
 5cc:	73 0b       	sbc	r23, r19
 5ce:	84 0b       	sbc	r24, r20
 5d0:	95 0b       	sbc	r25, r21
 5d2:	39 f4       	brne	.+14     	; 0x5e2 <__fp_cmp+0x38>
 5d4:	0a 26       	eor	r0, r26
 5d6:	61 f0       	breq	.+24     	; 0x5f0 <__fp_cmp+0x46>
 5d8:	23 2b       	or	r18, r19
 5da:	24 2b       	or	r18, r20
 5dc:	25 2b       	or	r18, r21
 5de:	21 f4       	brne	.+8      	; 0x5e8 <__fp_cmp+0x3e>
 5e0:	08 95       	ret
 5e2:	0a 26       	eor	r0, r26
 5e4:	09 f4       	brne	.+2      	; 0x5e8 <__fp_cmp+0x3e>
 5e6:	a1 40       	sbci	r26, 0x01	; 1
 5e8:	a6 95       	lsr	r26
 5ea:	8f ef       	ldi	r24, 0xFF	; 255
 5ec:	81 1d       	adc	r24, r1
 5ee:	81 1d       	adc	r24, r1
 5f0:	08 95       	ret

000005f2 <__fp_split3>:
 5f2:	57 fd       	sbrc	r21, 7
 5f4:	90 58       	subi	r25, 0x80	; 128
 5f6:	44 0f       	add	r20, r20
 5f8:	55 1f       	adc	r21, r21
 5fa:	59 f0       	breq	.+22     	; 0x612 <__fp_splitA+0x10>
 5fc:	5f 3f       	cpi	r21, 0xFF	; 255
 5fe:	71 f0       	breq	.+28     	; 0x61c <__fp_splitA+0x1a>
 600:	47 95       	ror	r20

00000602 <__fp_splitA>:
 602:	88 0f       	add	r24, r24
 604:	97 fb       	bst	r25, 7
 606:	99 1f       	adc	r25, r25
 608:	61 f0       	breq	.+24     	; 0x622 <__fp_splitA+0x20>
 60a:	9f 3f       	cpi	r25, 0xFF	; 255
 60c:	79 f0       	breq	.+30     	; 0x62c <__fp_splitA+0x2a>
 60e:	87 95       	ror	r24
 610:	08 95       	ret
 612:	12 16       	cp	r1, r18
 614:	13 06       	cpc	r1, r19
 616:	14 06       	cpc	r1, r20
 618:	55 1f       	adc	r21, r21
 61a:	f2 cf       	rjmp	.-28     	; 0x600 <__fp_split3+0xe>
 61c:	46 95       	lsr	r20
 61e:	f1 df       	rcall	.-30     	; 0x602 <__fp_splitA>
 620:	08 c0       	rjmp	.+16     	; 0x632 <__fp_splitA+0x30>
 622:	16 16       	cp	r1, r22
 624:	17 06       	cpc	r1, r23
 626:	18 06       	cpc	r1, r24
 628:	99 1f       	adc	r25, r25
 62a:	f1 cf       	rjmp	.-30     	; 0x60e <__fp_splitA+0xc>
 62c:	86 95       	lsr	r24
 62e:	71 05       	cpc	r23, r1
 630:	61 05       	cpc	r22, r1
 632:	08 94       	sec
 634:	08 95       	ret

00000636 <__fp_zero>:
 636:	e8 94       	clt

00000638 <__fp_szero>:
 638:	bb 27       	eor	r27, r27
 63a:	66 27       	eor	r22, r22
 63c:	77 27       	eor	r23, r23
 63e:	cb 01       	movw	r24, r22
 640:	97 f9       	bld	r25, 7
 642:	08 95       	ret

00000644 <__gesf2>:
 644:	0e 94 d5 02 	call	0x5aa	; 0x5aa <__fp_cmp>
 648:	08 f4       	brcc	.+2      	; 0x64c <__gesf2+0x8>
 64a:	8f ef       	ldi	r24, 0xFF	; 255
 64c:	08 95       	ret

0000064e <__mulsf3>:
 64e:	0e 94 3a 03 	call	0x674	; 0x674 <__mulsf3x>
 652:	0c 94 ab 03 	jmp	0x756	; 0x756 <__fp_round>
 656:	0e 94 9d 03 	call	0x73a	; 0x73a <__fp_pscA>
 65a:	38 f0       	brcs	.+14     	; 0x66a <__mulsf3+0x1c>
 65c:	0e 94 a4 03 	call	0x748	; 0x748 <__fp_pscB>
 660:	20 f0       	brcs	.+8      	; 0x66a <__mulsf3+0x1c>
 662:	95 23       	and	r25, r21
 664:	11 f0       	breq	.+4      	; 0x66a <__mulsf3+0x1c>
 666:	0c 94 94 03 	jmp	0x728	; 0x728 <__fp_inf>
 66a:	0c 94 9a 03 	jmp	0x734	; 0x734 <__fp_nan>
 66e:	11 24       	eor	r1, r1
 670:	0c 94 1c 03 	jmp	0x638	; 0x638 <__fp_szero>

00000674 <__mulsf3x>:
 674:	0e 94 f9 02 	call	0x5f2	; 0x5f2 <__fp_split3>
 678:	70 f3       	brcs	.-36     	; 0x656 <__mulsf3+0x8>

0000067a <__mulsf3_pse>:
 67a:	95 9f       	mul	r25, r21
 67c:	c1 f3       	breq	.-16     	; 0x66e <__mulsf3+0x20>
 67e:	95 0f       	add	r25, r21
 680:	50 e0       	ldi	r21, 0x00	; 0
 682:	55 1f       	adc	r21, r21
 684:	62 9f       	mul	r22, r18
 686:	f0 01       	movw	r30, r0
 688:	72 9f       	mul	r23, r18
 68a:	bb 27       	eor	r27, r27
 68c:	f0 0d       	add	r31, r0
 68e:	b1 1d       	adc	r27, r1
 690:	63 9f       	mul	r22, r19
 692:	aa 27       	eor	r26, r26
 694:	f0 0d       	add	r31, r0
 696:	b1 1d       	adc	r27, r1
 698:	aa 1f       	adc	r26, r26
 69a:	64 9f       	mul	r22, r20
 69c:	66 27       	eor	r22, r22
 69e:	b0 0d       	add	r27, r0
 6a0:	a1 1d       	adc	r26, r1
 6a2:	66 1f       	adc	r22, r22
 6a4:	82 9f       	mul	r24, r18
 6a6:	22 27       	eor	r18, r18
 6a8:	b0 0d       	add	r27, r0
 6aa:	a1 1d       	adc	r26, r1
 6ac:	62 1f       	adc	r22, r18
 6ae:	73 9f       	mul	r23, r19
 6b0:	b0 0d       	add	r27, r0
 6b2:	a1 1d       	adc	r26, r1
 6b4:	62 1f       	adc	r22, r18
 6b6:	83 9f       	mul	r24, r19
 6b8:	a0 0d       	add	r26, r0
 6ba:	61 1d       	adc	r22, r1
 6bc:	22 1f       	adc	r18, r18
 6be:	74 9f       	mul	r23, r20
 6c0:	33 27       	eor	r19, r19
 6c2:	a0 0d       	add	r26, r0
 6c4:	61 1d       	adc	r22, r1
 6c6:	23 1f       	adc	r18, r19
 6c8:	84 9f       	mul	r24, r20
 6ca:	60 0d       	add	r22, r0
 6cc:	21 1d       	adc	r18, r1
 6ce:	82 2f       	mov	r24, r18
 6d0:	76 2f       	mov	r23, r22
 6d2:	6a 2f       	mov	r22, r26
 6d4:	11 24       	eor	r1, r1
 6d6:	9f 57       	subi	r25, 0x7F	; 127
 6d8:	50 40       	sbci	r21, 0x00	; 0
 6da:	9a f0       	brmi	.+38     	; 0x702 <__mulsf3_pse+0x88>
 6dc:	f1 f0       	breq	.+60     	; 0x71a <__mulsf3_pse+0xa0>
 6de:	88 23       	and	r24, r24
 6e0:	4a f0       	brmi	.+18     	; 0x6f4 <__mulsf3_pse+0x7a>
 6e2:	ee 0f       	add	r30, r30
 6e4:	ff 1f       	adc	r31, r31
 6e6:	bb 1f       	adc	r27, r27
 6e8:	66 1f       	adc	r22, r22
 6ea:	77 1f       	adc	r23, r23
 6ec:	88 1f       	adc	r24, r24
 6ee:	91 50       	subi	r25, 0x01	; 1
 6f0:	50 40       	sbci	r21, 0x00	; 0
 6f2:	a9 f7       	brne	.-22     	; 0x6de <__mulsf3_pse+0x64>
 6f4:	9e 3f       	cpi	r25, 0xFE	; 254
 6f6:	51 05       	cpc	r21, r1
 6f8:	80 f0       	brcs	.+32     	; 0x71a <__mulsf3_pse+0xa0>
 6fa:	0c 94 94 03 	jmp	0x728	; 0x728 <__fp_inf>
 6fe:	0c 94 1c 03 	jmp	0x638	; 0x638 <__fp_szero>
 702:	5f 3f       	cpi	r21, 0xFF	; 255
 704:	e4 f3       	brlt	.-8      	; 0x6fe <__mulsf3_pse+0x84>
 706:	98 3e       	cpi	r25, 0xE8	; 232
 708:	d4 f3       	brlt	.-12     	; 0x6fe <__mulsf3_pse+0x84>
 70a:	86 95       	lsr	r24
 70c:	77 95       	ror	r23
 70e:	67 95       	ror	r22
 710:	b7 95       	ror	r27
 712:	f7 95       	ror	r31
 714:	e7 95       	ror	r30
 716:	9f 5f       	subi	r25, 0xFF	; 255
 718:	c1 f7       	brne	.-16     	; 0x70a <__mulsf3_pse+0x90>
 71a:	fe 2b       	or	r31, r30
 71c:	88 0f       	add	r24, r24
 71e:	91 1d       	adc	r25, r1
 720:	96 95       	lsr	r25
 722:	87 95       	ror	r24
 724:	97 f9       	bld	r25, 7
 726:	08 95       	ret

00000728 <__fp_inf>:
 728:	97 f9       	bld	r25, 7
 72a:	9f 67       	ori	r25, 0x7F	; 127
 72c:	80 e8       	ldi	r24, 0x80	; 128
 72e:	70 e0       	ldi	r23, 0x00	; 0
 730:	60 e0       	ldi	r22, 0x00	; 0
 732:	08 95       	ret

00000734 <__fp_nan>:
 734:	9f ef       	ldi	r25, 0xFF	; 255
 736:	80 ec       	ldi	r24, 0xC0	; 192
 738:	08 95       	ret

0000073a <__fp_pscA>:
 73a:	00 24       	eor	r0, r0
 73c:	0a 94       	dec	r0
 73e:	16 16       	cp	r1, r22
 740:	17 06       	cpc	r1, r23
 742:	18 06       	cpc	r1, r24
 744:	09 06       	cpc	r0, r25
 746:	08 95       	ret

00000748 <__fp_pscB>:
 748:	00 24       	eor	r0, r0
 74a:	0a 94       	dec	r0
 74c:	12 16       	cp	r1, r18
 74e:	13 06       	cpc	r1, r19
 750:	14 06       	cpc	r1, r20
 752:	05 06       	cpc	r0, r21
 754:	08 95       	ret

00000756 <__fp_round>:
 756:	09 2e       	mov	r0, r25
 758:	03 94       	inc	r0
 75a:	00 0c       	add	r0, r0
 75c:	11 f4       	brne	.+4      	; 0x762 <__fp_round+0xc>
 75e:	88 23       	and	r24, r24
 760:	52 f0       	brmi	.+20     	; 0x776 <__fp_round+0x20>
 762:	bb 0f       	add	r27, r27
 764:	40 f4       	brcc	.+16     	; 0x776 <__fp_round+0x20>
 766:	bf 2b       	or	r27, r31
 768:	11 f4       	brne	.+4      	; 0x76e <__fp_round+0x18>
 76a:	60 ff       	sbrs	r22, 0
 76c:	04 c0       	rjmp	.+8      	; 0x776 <__fp_round+0x20>
 76e:	6f 5f       	subi	r22, 0xFF	; 255
 770:	7f 4f       	sbci	r23, 0xFF	; 255
 772:	8f 4f       	sbci	r24, 0xFF	; 255
 774:	9f 4f       	sbci	r25, 0xFF	; 255
 776:	08 95       	ret

00000778 <puts>:
 778:	0f 93       	push	r16
 77a:	1f 93       	push	r17
 77c:	cf 93       	push	r28
 77e:	df 93       	push	r29
 780:	e0 91 8e 20 	lds	r30, 0x208E	; 0x80208e <__iob+0x2>
 784:	f0 91 8f 20 	lds	r31, 0x208F	; 0x80208f <__iob+0x3>
 788:	23 81       	ldd	r18, Z+3	; 0x03
 78a:	21 ff       	sbrs	r18, 1
 78c:	1b c0       	rjmp	.+54     	; 0x7c4 <puts+0x4c>
 78e:	8c 01       	movw	r16, r24
 790:	d0 e0       	ldi	r29, 0x00	; 0
 792:	c0 e0       	ldi	r28, 0x00	; 0
 794:	f8 01       	movw	r30, r16
 796:	81 91       	ld	r24, Z+
 798:	8f 01       	movw	r16, r30
 79a:	60 91 8e 20 	lds	r22, 0x208E	; 0x80208e <__iob+0x2>
 79e:	70 91 8f 20 	lds	r23, 0x208F	; 0x80208f <__iob+0x3>
 7a2:	db 01       	movw	r26, r22
 7a4:	18 96       	adiw	r26, 0x08	; 8
 7a6:	ed 91       	ld	r30, X+
 7a8:	fc 91       	ld	r31, X
 7aa:	19 97       	sbiw	r26, 0x09	; 9
 7ac:	88 23       	and	r24, r24
 7ae:	31 f0       	breq	.+12     	; 0x7bc <puts+0x44>
 7b0:	09 95       	icall
 7b2:	89 2b       	or	r24, r25
 7b4:	79 f3       	breq	.-34     	; 0x794 <puts+0x1c>
 7b6:	df ef       	ldi	r29, 0xFF	; 255
 7b8:	cf ef       	ldi	r28, 0xFF	; 255
 7ba:	ec cf       	rjmp	.-40     	; 0x794 <puts+0x1c>
 7bc:	8a e0       	ldi	r24, 0x0A	; 10
 7be:	09 95       	icall
 7c0:	89 2b       	or	r24, r25
 7c2:	19 f0       	breq	.+6      	; 0x7ca <puts+0x52>
 7c4:	8f ef       	ldi	r24, 0xFF	; 255
 7c6:	9f ef       	ldi	r25, 0xFF	; 255
 7c8:	02 c0       	rjmp	.+4      	; 0x7ce <puts+0x56>
 7ca:	8d 2f       	mov	r24, r29
 7cc:	9c 2f       	mov	r25, r28
 7ce:	df 91       	pop	r29
 7d0:	cf 91       	pop	r28
 7d2:	1f 91       	pop	r17
 7d4:	0f 91       	pop	r16
 7d6:	08 95       	ret

000007d8 <sprintf>:
 7d8:	ae e0       	ldi	r26, 0x0E	; 14
 7da:	b0 e0       	ldi	r27, 0x00	; 0
 7dc:	e2 ef       	ldi	r30, 0xF2	; 242
 7de:	f3 e0       	ldi	r31, 0x03	; 3
 7e0:	0c 94 ad 06 	jmp	0xd5a	; 0xd5a <__prologue_saves__+0x1c>
 7e4:	0d 89       	ldd	r16, Y+21	; 0x15
 7e6:	1e 89       	ldd	r17, Y+22	; 0x16
 7e8:	86 e0       	ldi	r24, 0x06	; 6
 7ea:	8c 83       	std	Y+4, r24	; 0x04
 7ec:	09 83       	std	Y+1, r16	; 0x01
 7ee:	1a 83       	std	Y+2, r17	; 0x02
 7f0:	8f ef       	ldi	r24, 0xFF	; 255
 7f2:	9f e7       	ldi	r25, 0x7F	; 127
 7f4:	8d 83       	std	Y+5, r24	; 0x05
 7f6:	9e 83       	std	Y+6, r25	; 0x06
 7f8:	ae 01       	movw	r20, r28
 7fa:	47 5e       	subi	r20, 0xE7	; 231
 7fc:	5f 4f       	sbci	r21, 0xFF	; 255
 7fe:	6f 89       	ldd	r22, Y+23	; 0x17
 800:	78 8d       	ldd	r23, Y+24	; 0x18
 802:	ce 01       	movw	r24, r28
 804:	01 96       	adiw	r24, 0x01	; 1
 806:	0e 94 0e 04 	call	0x81c	; 0x81c <vfprintf>
 80a:	ef 81       	ldd	r30, Y+7	; 0x07
 80c:	f8 85       	ldd	r31, Y+8	; 0x08
 80e:	e0 0f       	add	r30, r16
 810:	f1 1f       	adc	r31, r17
 812:	10 82       	st	Z, r1
 814:	2e 96       	adiw	r28, 0x0e	; 14
 816:	e4 e0       	ldi	r30, 0x04	; 4
 818:	0c 94 c6 06 	jmp	0xd8c	; 0xd8c <__epilogue_restores__+0x1c>

0000081c <vfprintf>:
 81c:	ab e0       	ldi	r26, 0x0B	; 11
 81e:	b0 e0       	ldi	r27, 0x00	; 0
 820:	e4 e1       	ldi	r30, 0x14	; 20
 822:	f4 e0       	ldi	r31, 0x04	; 4
 824:	0c 94 9f 06 	jmp	0xd3e	; 0xd3e <__prologue_saves__>
 828:	6c 01       	movw	r12, r24
 82a:	7b 01       	movw	r14, r22
 82c:	8a 01       	movw	r16, r20
 82e:	fc 01       	movw	r30, r24
 830:	16 82       	std	Z+6, r1	; 0x06
 832:	17 82       	std	Z+7, r1	; 0x07
 834:	83 81       	ldd	r24, Z+3	; 0x03
 836:	81 ff       	sbrs	r24, 1
 838:	cc c1       	rjmp	.+920    	; 0xbd2 <vfprintf+0x3b6>
 83a:	ce 01       	movw	r24, r28
 83c:	01 96       	adiw	r24, 0x01	; 1
 83e:	3c 01       	movw	r6, r24
 840:	f6 01       	movw	r30, r12
 842:	93 81       	ldd	r25, Z+3	; 0x03
 844:	f7 01       	movw	r30, r14
 846:	93 fd       	sbrc	r25, 3
 848:	85 91       	lpm	r24, Z+
 84a:	93 ff       	sbrs	r25, 3
 84c:	81 91       	ld	r24, Z+
 84e:	7f 01       	movw	r14, r30
 850:	88 23       	and	r24, r24
 852:	09 f4       	brne	.+2      	; 0x856 <vfprintf+0x3a>
 854:	ba c1       	rjmp	.+884    	; 0xbca <vfprintf+0x3ae>
 856:	85 32       	cpi	r24, 0x25	; 37
 858:	39 f4       	brne	.+14     	; 0x868 <vfprintf+0x4c>
 85a:	93 fd       	sbrc	r25, 3
 85c:	85 91       	lpm	r24, Z+
 85e:	93 ff       	sbrs	r25, 3
 860:	81 91       	ld	r24, Z+
 862:	7f 01       	movw	r14, r30
 864:	85 32       	cpi	r24, 0x25	; 37
 866:	29 f4       	brne	.+10     	; 0x872 <vfprintf+0x56>
 868:	b6 01       	movw	r22, r12
 86a:	90 e0       	ldi	r25, 0x00	; 0
 86c:	0e 94 05 06 	call	0xc0a	; 0xc0a <fputc>
 870:	e7 cf       	rjmp	.-50     	; 0x840 <vfprintf+0x24>
 872:	91 2c       	mov	r9, r1
 874:	21 2c       	mov	r2, r1
 876:	31 2c       	mov	r3, r1
 878:	ff e1       	ldi	r31, 0x1F	; 31
 87a:	f3 15       	cp	r31, r3
 87c:	d8 f0       	brcs	.+54     	; 0x8b4 <vfprintf+0x98>
 87e:	8b 32       	cpi	r24, 0x2B	; 43
 880:	79 f0       	breq	.+30     	; 0x8a0 <vfprintf+0x84>
 882:	38 f4       	brcc	.+14     	; 0x892 <vfprintf+0x76>
 884:	80 32       	cpi	r24, 0x20	; 32
 886:	79 f0       	breq	.+30     	; 0x8a6 <vfprintf+0x8a>
 888:	83 32       	cpi	r24, 0x23	; 35
 88a:	a1 f4       	brne	.+40     	; 0x8b4 <vfprintf+0x98>
 88c:	23 2d       	mov	r18, r3
 88e:	20 61       	ori	r18, 0x10	; 16
 890:	1d c0       	rjmp	.+58     	; 0x8cc <vfprintf+0xb0>
 892:	8d 32       	cpi	r24, 0x2D	; 45
 894:	61 f0       	breq	.+24     	; 0x8ae <vfprintf+0x92>
 896:	80 33       	cpi	r24, 0x30	; 48
 898:	69 f4       	brne	.+26     	; 0x8b4 <vfprintf+0x98>
 89a:	23 2d       	mov	r18, r3
 89c:	21 60       	ori	r18, 0x01	; 1
 89e:	16 c0       	rjmp	.+44     	; 0x8cc <vfprintf+0xb0>
 8a0:	83 2d       	mov	r24, r3
 8a2:	82 60       	ori	r24, 0x02	; 2
 8a4:	38 2e       	mov	r3, r24
 8a6:	e3 2d       	mov	r30, r3
 8a8:	e4 60       	ori	r30, 0x04	; 4
 8aa:	3e 2e       	mov	r3, r30
 8ac:	2a c0       	rjmp	.+84     	; 0x902 <vfprintf+0xe6>
 8ae:	f3 2d       	mov	r31, r3
 8b0:	f8 60       	ori	r31, 0x08	; 8
 8b2:	1d c0       	rjmp	.+58     	; 0x8ee <vfprintf+0xd2>
 8b4:	37 fc       	sbrc	r3, 7
 8b6:	2d c0       	rjmp	.+90     	; 0x912 <vfprintf+0xf6>
 8b8:	20 ed       	ldi	r18, 0xD0	; 208
 8ba:	28 0f       	add	r18, r24
 8bc:	2a 30       	cpi	r18, 0x0A	; 10
 8be:	40 f0       	brcs	.+16     	; 0x8d0 <vfprintf+0xb4>
 8c0:	8e 32       	cpi	r24, 0x2E	; 46
 8c2:	b9 f4       	brne	.+46     	; 0x8f2 <vfprintf+0xd6>
 8c4:	36 fc       	sbrc	r3, 6
 8c6:	81 c1       	rjmp	.+770    	; 0xbca <vfprintf+0x3ae>
 8c8:	23 2d       	mov	r18, r3
 8ca:	20 64       	ori	r18, 0x40	; 64
 8cc:	32 2e       	mov	r3, r18
 8ce:	19 c0       	rjmp	.+50     	; 0x902 <vfprintf+0xe6>
 8d0:	36 fe       	sbrs	r3, 6
 8d2:	06 c0       	rjmp	.+12     	; 0x8e0 <vfprintf+0xc4>
 8d4:	8a e0       	ldi	r24, 0x0A	; 10
 8d6:	98 9e       	mul	r9, r24
 8d8:	20 0d       	add	r18, r0
 8da:	11 24       	eor	r1, r1
 8dc:	92 2e       	mov	r9, r18
 8de:	11 c0       	rjmp	.+34     	; 0x902 <vfprintf+0xe6>
 8e0:	ea e0       	ldi	r30, 0x0A	; 10
 8e2:	2e 9e       	mul	r2, r30
 8e4:	20 0d       	add	r18, r0
 8e6:	11 24       	eor	r1, r1
 8e8:	22 2e       	mov	r2, r18
 8ea:	f3 2d       	mov	r31, r3
 8ec:	f0 62       	ori	r31, 0x20	; 32
 8ee:	3f 2e       	mov	r3, r31
 8f0:	08 c0       	rjmp	.+16     	; 0x902 <vfprintf+0xe6>
 8f2:	8c 36       	cpi	r24, 0x6C	; 108
 8f4:	21 f4       	brne	.+8      	; 0x8fe <vfprintf+0xe2>
 8f6:	83 2d       	mov	r24, r3
 8f8:	80 68       	ori	r24, 0x80	; 128
 8fa:	38 2e       	mov	r3, r24
 8fc:	02 c0       	rjmp	.+4      	; 0x902 <vfprintf+0xe6>
 8fe:	88 36       	cpi	r24, 0x68	; 104
 900:	41 f4       	brne	.+16     	; 0x912 <vfprintf+0xf6>
 902:	f7 01       	movw	r30, r14
 904:	93 fd       	sbrc	r25, 3
 906:	85 91       	lpm	r24, Z+
 908:	93 ff       	sbrs	r25, 3
 90a:	81 91       	ld	r24, Z+
 90c:	7f 01       	movw	r14, r30
 90e:	81 11       	cpse	r24, r1
 910:	b3 cf       	rjmp	.-154    	; 0x878 <vfprintf+0x5c>
 912:	98 2f       	mov	r25, r24
 914:	9f 7d       	andi	r25, 0xDF	; 223
 916:	95 54       	subi	r25, 0x45	; 69
 918:	93 30       	cpi	r25, 0x03	; 3
 91a:	28 f4       	brcc	.+10     	; 0x926 <vfprintf+0x10a>
 91c:	0c 5f       	subi	r16, 0xFC	; 252
 91e:	1f 4f       	sbci	r17, 0xFF	; 255
 920:	9f e3       	ldi	r25, 0x3F	; 63
 922:	99 83       	std	Y+1, r25	; 0x01
 924:	0d c0       	rjmp	.+26     	; 0x940 <vfprintf+0x124>
 926:	83 36       	cpi	r24, 0x63	; 99
 928:	31 f0       	breq	.+12     	; 0x936 <vfprintf+0x11a>
 92a:	83 37       	cpi	r24, 0x73	; 115
 92c:	71 f0       	breq	.+28     	; 0x94a <vfprintf+0x12e>
 92e:	83 35       	cpi	r24, 0x53	; 83
 930:	09 f0       	breq	.+2      	; 0x934 <vfprintf+0x118>
 932:	59 c0       	rjmp	.+178    	; 0x9e6 <vfprintf+0x1ca>
 934:	21 c0       	rjmp	.+66     	; 0x978 <vfprintf+0x15c>
 936:	f8 01       	movw	r30, r16
 938:	80 81       	ld	r24, Z
 93a:	89 83       	std	Y+1, r24	; 0x01
 93c:	0e 5f       	subi	r16, 0xFE	; 254
 93e:	1f 4f       	sbci	r17, 0xFF	; 255
 940:	88 24       	eor	r8, r8
 942:	83 94       	inc	r8
 944:	91 2c       	mov	r9, r1
 946:	53 01       	movw	r10, r6
 948:	13 c0       	rjmp	.+38     	; 0x970 <vfprintf+0x154>
 94a:	28 01       	movw	r4, r16
 94c:	f2 e0       	ldi	r31, 0x02	; 2
 94e:	4f 0e       	add	r4, r31
 950:	51 1c       	adc	r5, r1
 952:	f8 01       	movw	r30, r16
 954:	a0 80       	ld	r10, Z
 956:	b1 80       	ldd	r11, Z+1	; 0x01
 958:	36 fe       	sbrs	r3, 6
 95a:	03 c0       	rjmp	.+6      	; 0x962 <vfprintf+0x146>
 95c:	69 2d       	mov	r22, r9
 95e:	70 e0       	ldi	r23, 0x00	; 0
 960:	02 c0       	rjmp	.+4      	; 0x966 <vfprintf+0x14a>
 962:	6f ef       	ldi	r22, 0xFF	; 255
 964:	7f ef       	ldi	r23, 0xFF	; 255
 966:	c5 01       	movw	r24, r10
 968:	0e 94 fa 05 	call	0xbf4	; 0xbf4 <strnlen>
 96c:	4c 01       	movw	r8, r24
 96e:	82 01       	movw	r16, r4
 970:	f3 2d       	mov	r31, r3
 972:	ff 77       	andi	r31, 0x7F	; 127
 974:	3f 2e       	mov	r3, r31
 976:	16 c0       	rjmp	.+44     	; 0x9a4 <vfprintf+0x188>
 978:	28 01       	movw	r4, r16
 97a:	22 e0       	ldi	r18, 0x02	; 2
 97c:	42 0e       	add	r4, r18
 97e:	51 1c       	adc	r5, r1
 980:	f8 01       	movw	r30, r16
 982:	a0 80       	ld	r10, Z
 984:	b1 80       	ldd	r11, Z+1	; 0x01
 986:	36 fe       	sbrs	r3, 6
 988:	03 c0       	rjmp	.+6      	; 0x990 <vfprintf+0x174>
 98a:	69 2d       	mov	r22, r9
 98c:	70 e0       	ldi	r23, 0x00	; 0
 98e:	02 c0       	rjmp	.+4      	; 0x994 <vfprintf+0x178>
 990:	6f ef       	ldi	r22, 0xFF	; 255
 992:	7f ef       	ldi	r23, 0xFF	; 255
 994:	c5 01       	movw	r24, r10
 996:	0e 94 ef 05 	call	0xbde	; 0xbde <strnlen_P>
 99a:	4c 01       	movw	r8, r24
 99c:	f3 2d       	mov	r31, r3
 99e:	f0 68       	ori	r31, 0x80	; 128
 9a0:	3f 2e       	mov	r3, r31
 9a2:	82 01       	movw	r16, r4
 9a4:	33 fc       	sbrc	r3, 3
 9a6:	1b c0       	rjmp	.+54     	; 0x9de <vfprintf+0x1c2>
 9a8:	82 2d       	mov	r24, r2
 9aa:	90 e0       	ldi	r25, 0x00	; 0
 9ac:	88 16       	cp	r8, r24
 9ae:	99 06       	cpc	r9, r25
 9b0:	b0 f4       	brcc	.+44     	; 0x9de <vfprintf+0x1c2>
 9b2:	b6 01       	movw	r22, r12
 9b4:	80 e2       	ldi	r24, 0x20	; 32
 9b6:	90 e0       	ldi	r25, 0x00	; 0
 9b8:	0e 94 05 06 	call	0xc0a	; 0xc0a <fputc>
 9bc:	2a 94       	dec	r2
 9be:	f4 cf       	rjmp	.-24     	; 0x9a8 <vfprintf+0x18c>
 9c0:	f5 01       	movw	r30, r10
 9c2:	37 fc       	sbrc	r3, 7
 9c4:	85 91       	lpm	r24, Z+
 9c6:	37 fe       	sbrs	r3, 7
 9c8:	81 91       	ld	r24, Z+
 9ca:	5f 01       	movw	r10, r30
 9cc:	b6 01       	movw	r22, r12
 9ce:	90 e0       	ldi	r25, 0x00	; 0
 9d0:	0e 94 05 06 	call	0xc0a	; 0xc0a <fputc>
 9d4:	21 10       	cpse	r2, r1
 9d6:	2a 94       	dec	r2
 9d8:	21 e0       	ldi	r18, 0x01	; 1
 9da:	82 1a       	sub	r8, r18
 9dc:	91 08       	sbc	r9, r1
 9de:	81 14       	cp	r8, r1
 9e0:	91 04       	cpc	r9, r1
 9e2:	71 f7       	brne	.-36     	; 0x9c0 <vfprintf+0x1a4>
 9e4:	e8 c0       	rjmp	.+464    	; 0xbb6 <vfprintf+0x39a>
 9e6:	84 36       	cpi	r24, 0x64	; 100
 9e8:	11 f0       	breq	.+4      	; 0x9ee <vfprintf+0x1d2>
 9ea:	89 36       	cpi	r24, 0x69	; 105
 9ec:	41 f5       	brne	.+80     	; 0xa3e <vfprintf+0x222>
 9ee:	f8 01       	movw	r30, r16
 9f0:	37 fe       	sbrs	r3, 7
 9f2:	07 c0       	rjmp	.+14     	; 0xa02 <vfprintf+0x1e6>
 9f4:	60 81       	ld	r22, Z
 9f6:	71 81       	ldd	r23, Z+1	; 0x01
 9f8:	82 81       	ldd	r24, Z+2	; 0x02
 9fa:	93 81       	ldd	r25, Z+3	; 0x03
 9fc:	0c 5f       	subi	r16, 0xFC	; 252
 9fe:	1f 4f       	sbci	r17, 0xFF	; 255
 a00:	08 c0       	rjmp	.+16     	; 0xa12 <vfprintf+0x1f6>
 a02:	60 81       	ld	r22, Z
 a04:	71 81       	ldd	r23, Z+1	; 0x01
 a06:	07 2e       	mov	r0, r23
 a08:	00 0c       	add	r0, r0
 a0a:	88 0b       	sbc	r24, r24
 a0c:	99 0b       	sbc	r25, r25
 a0e:	0e 5f       	subi	r16, 0xFE	; 254
 a10:	1f 4f       	sbci	r17, 0xFF	; 255
 a12:	f3 2d       	mov	r31, r3
 a14:	ff 76       	andi	r31, 0x6F	; 111
 a16:	3f 2e       	mov	r3, r31
 a18:	97 ff       	sbrs	r25, 7
 a1a:	09 c0       	rjmp	.+18     	; 0xa2e <vfprintf+0x212>
 a1c:	90 95       	com	r25
 a1e:	80 95       	com	r24
 a20:	70 95       	com	r23
 a22:	61 95       	neg	r22
 a24:	7f 4f       	sbci	r23, 0xFF	; 255
 a26:	8f 4f       	sbci	r24, 0xFF	; 255
 a28:	9f 4f       	sbci	r25, 0xFF	; 255
 a2a:	f0 68       	ori	r31, 0x80	; 128
 a2c:	3f 2e       	mov	r3, r31
 a2e:	2a e0       	ldi	r18, 0x0A	; 10
 a30:	30 e0       	ldi	r19, 0x00	; 0
 a32:	a3 01       	movw	r20, r6
 a34:	0e 94 41 06 	call	0xc82	; 0xc82 <__ultoa_invert>
 a38:	88 2e       	mov	r8, r24
 a3a:	86 18       	sub	r8, r6
 a3c:	45 c0       	rjmp	.+138    	; 0xac8 <vfprintf+0x2ac>
 a3e:	85 37       	cpi	r24, 0x75	; 117
 a40:	31 f4       	brne	.+12     	; 0xa4e <vfprintf+0x232>
 a42:	23 2d       	mov	r18, r3
 a44:	2f 7e       	andi	r18, 0xEF	; 239
 a46:	b2 2e       	mov	r11, r18
 a48:	2a e0       	ldi	r18, 0x0A	; 10
 a4a:	30 e0       	ldi	r19, 0x00	; 0
 a4c:	25 c0       	rjmp	.+74     	; 0xa98 <vfprintf+0x27c>
 a4e:	93 2d       	mov	r25, r3
 a50:	99 7f       	andi	r25, 0xF9	; 249
 a52:	b9 2e       	mov	r11, r25
 a54:	8f 36       	cpi	r24, 0x6F	; 111
 a56:	c1 f0       	breq	.+48     	; 0xa88 <vfprintf+0x26c>
 a58:	18 f4       	brcc	.+6      	; 0xa60 <vfprintf+0x244>
 a5a:	88 35       	cpi	r24, 0x58	; 88
 a5c:	79 f0       	breq	.+30     	; 0xa7c <vfprintf+0x260>
 a5e:	b5 c0       	rjmp	.+362    	; 0xbca <vfprintf+0x3ae>
 a60:	80 37       	cpi	r24, 0x70	; 112
 a62:	19 f0       	breq	.+6      	; 0xa6a <vfprintf+0x24e>
 a64:	88 37       	cpi	r24, 0x78	; 120
 a66:	21 f0       	breq	.+8      	; 0xa70 <vfprintf+0x254>
 a68:	b0 c0       	rjmp	.+352    	; 0xbca <vfprintf+0x3ae>
 a6a:	e9 2f       	mov	r30, r25
 a6c:	e0 61       	ori	r30, 0x10	; 16
 a6e:	be 2e       	mov	r11, r30
 a70:	b4 fe       	sbrs	r11, 4
 a72:	0d c0       	rjmp	.+26     	; 0xa8e <vfprintf+0x272>
 a74:	fb 2d       	mov	r31, r11
 a76:	f4 60       	ori	r31, 0x04	; 4
 a78:	bf 2e       	mov	r11, r31
 a7a:	09 c0       	rjmp	.+18     	; 0xa8e <vfprintf+0x272>
 a7c:	34 fe       	sbrs	r3, 4
 a7e:	0a c0       	rjmp	.+20     	; 0xa94 <vfprintf+0x278>
 a80:	29 2f       	mov	r18, r25
 a82:	26 60       	ori	r18, 0x06	; 6
 a84:	b2 2e       	mov	r11, r18
 a86:	06 c0       	rjmp	.+12     	; 0xa94 <vfprintf+0x278>
 a88:	28 e0       	ldi	r18, 0x08	; 8
 a8a:	30 e0       	ldi	r19, 0x00	; 0
 a8c:	05 c0       	rjmp	.+10     	; 0xa98 <vfprintf+0x27c>
 a8e:	20 e1       	ldi	r18, 0x10	; 16
 a90:	30 e0       	ldi	r19, 0x00	; 0
 a92:	02 c0       	rjmp	.+4      	; 0xa98 <vfprintf+0x27c>
 a94:	20 e1       	ldi	r18, 0x10	; 16
 a96:	32 e0       	ldi	r19, 0x02	; 2
 a98:	f8 01       	movw	r30, r16
 a9a:	b7 fe       	sbrs	r11, 7
 a9c:	07 c0       	rjmp	.+14     	; 0xaac <vfprintf+0x290>
 a9e:	60 81       	ld	r22, Z
 aa0:	71 81       	ldd	r23, Z+1	; 0x01
 aa2:	82 81       	ldd	r24, Z+2	; 0x02
 aa4:	93 81       	ldd	r25, Z+3	; 0x03
 aa6:	0c 5f       	subi	r16, 0xFC	; 252
 aa8:	1f 4f       	sbci	r17, 0xFF	; 255
 aaa:	06 c0       	rjmp	.+12     	; 0xab8 <vfprintf+0x29c>
 aac:	60 81       	ld	r22, Z
 aae:	71 81       	ldd	r23, Z+1	; 0x01
 ab0:	80 e0       	ldi	r24, 0x00	; 0
 ab2:	90 e0       	ldi	r25, 0x00	; 0
 ab4:	0e 5f       	subi	r16, 0xFE	; 254
 ab6:	1f 4f       	sbci	r17, 0xFF	; 255
 ab8:	a3 01       	movw	r20, r6
 aba:	0e 94 41 06 	call	0xc82	; 0xc82 <__ultoa_invert>
 abe:	88 2e       	mov	r8, r24
 ac0:	86 18       	sub	r8, r6
 ac2:	fb 2d       	mov	r31, r11
 ac4:	ff 77       	andi	r31, 0x7F	; 127
 ac6:	3f 2e       	mov	r3, r31
 ac8:	36 fe       	sbrs	r3, 6
 aca:	0d c0       	rjmp	.+26     	; 0xae6 <vfprintf+0x2ca>
 acc:	23 2d       	mov	r18, r3
 ace:	2e 7f       	andi	r18, 0xFE	; 254
 ad0:	a2 2e       	mov	r10, r18
 ad2:	89 14       	cp	r8, r9
 ad4:	58 f4       	brcc	.+22     	; 0xaec <vfprintf+0x2d0>
 ad6:	34 fe       	sbrs	r3, 4
 ad8:	0b c0       	rjmp	.+22     	; 0xaf0 <vfprintf+0x2d4>
 ada:	32 fc       	sbrc	r3, 2
 adc:	09 c0       	rjmp	.+18     	; 0xaf0 <vfprintf+0x2d4>
 ade:	83 2d       	mov	r24, r3
 ae0:	8e 7e       	andi	r24, 0xEE	; 238
 ae2:	a8 2e       	mov	r10, r24
 ae4:	05 c0       	rjmp	.+10     	; 0xaf0 <vfprintf+0x2d4>
 ae6:	b8 2c       	mov	r11, r8
 ae8:	a3 2c       	mov	r10, r3
 aea:	03 c0       	rjmp	.+6      	; 0xaf2 <vfprintf+0x2d6>
 aec:	b8 2c       	mov	r11, r8
 aee:	01 c0       	rjmp	.+2      	; 0xaf2 <vfprintf+0x2d6>
 af0:	b9 2c       	mov	r11, r9
 af2:	a4 fe       	sbrs	r10, 4
 af4:	0f c0       	rjmp	.+30     	; 0xb14 <vfprintf+0x2f8>
 af6:	fe 01       	movw	r30, r28
 af8:	e8 0d       	add	r30, r8
 afa:	f1 1d       	adc	r31, r1
 afc:	80 81       	ld	r24, Z
 afe:	80 33       	cpi	r24, 0x30	; 48
 b00:	21 f4       	brne	.+8      	; 0xb0a <vfprintf+0x2ee>
 b02:	9a 2d       	mov	r25, r10
 b04:	99 7e       	andi	r25, 0xE9	; 233
 b06:	a9 2e       	mov	r10, r25
 b08:	09 c0       	rjmp	.+18     	; 0xb1c <vfprintf+0x300>
 b0a:	a2 fe       	sbrs	r10, 2
 b0c:	06 c0       	rjmp	.+12     	; 0xb1a <vfprintf+0x2fe>
 b0e:	b3 94       	inc	r11
 b10:	b3 94       	inc	r11
 b12:	04 c0       	rjmp	.+8      	; 0xb1c <vfprintf+0x300>
 b14:	8a 2d       	mov	r24, r10
 b16:	86 78       	andi	r24, 0x86	; 134
 b18:	09 f0       	breq	.+2      	; 0xb1c <vfprintf+0x300>
 b1a:	b3 94       	inc	r11
 b1c:	a3 fc       	sbrc	r10, 3
 b1e:	11 c0       	rjmp	.+34     	; 0xb42 <vfprintf+0x326>
 b20:	a0 fe       	sbrs	r10, 0
 b22:	06 c0       	rjmp	.+12     	; 0xb30 <vfprintf+0x314>
 b24:	b2 14       	cp	r11, r2
 b26:	88 f4       	brcc	.+34     	; 0xb4a <vfprintf+0x32e>
 b28:	28 0c       	add	r2, r8
 b2a:	92 2c       	mov	r9, r2
 b2c:	9b 18       	sub	r9, r11
 b2e:	0e c0       	rjmp	.+28     	; 0xb4c <vfprintf+0x330>
 b30:	b2 14       	cp	r11, r2
 b32:	60 f4       	brcc	.+24     	; 0xb4c <vfprintf+0x330>
 b34:	b6 01       	movw	r22, r12
 b36:	80 e2       	ldi	r24, 0x20	; 32
 b38:	90 e0       	ldi	r25, 0x00	; 0
 b3a:	0e 94 05 06 	call	0xc0a	; 0xc0a <fputc>
 b3e:	b3 94       	inc	r11
 b40:	f7 cf       	rjmp	.-18     	; 0xb30 <vfprintf+0x314>
 b42:	b2 14       	cp	r11, r2
 b44:	18 f4       	brcc	.+6      	; 0xb4c <vfprintf+0x330>
 b46:	2b 18       	sub	r2, r11
 b48:	02 c0       	rjmp	.+4      	; 0xb4e <vfprintf+0x332>
 b4a:	98 2c       	mov	r9, r8
 b4c:	21 2c       	mov	r2, r1
 b4e:	a4 fe       	sbrs	r10, 4
 b50:	10 c0       	rjmp	.+32     	; 0xb72 <vfprintf+0x356>
 b52:	b6 01       	movw	r22, r12
 b54:	80 e3       	ldi	r24, 0x30	; 48
 b56:	90 e0       	ldi	r25, 0x00	; 0
 b58:	0e 94 05 06 	call	0xc0a	; 0xc0a <fputc>
 b5c:	a2 fe       	sbrs	r10, 2
 b5e:	17 c0       	rjmp	.+46     	; 0xb8e <vfprintf+0x372>
 b60:	a1 fc       	sbrc	r10, 1
 b62:	03 c0       	rjmp	.+6      	; 0xb6a <vfprintf+0x34e>
 b64:	88 e7       	ldi	r24, 0x78	; 120
 b66:	90 e0       	ldi	r25, 0x00	; 0
 b68:	02 c0       	rjmp	.+4      	; 0xb6e <vfprintf+0x352>
 b6a:	88 e5       	ldi	r24, 0x58	; 88
 b6c:	90 e0       	ldi	r25, 0x00	; 0
 b6e:	b6 01       	movw	r22, r12
 b70:	0c c0       	rjmp	.+24     	; 0xb8a <vfprintf+0x36e>
 b72:	8a 2d       	mov	r24, r10
 b74:	86 78       	andi	r24, 0x86	; 134
 b76:	59 f0       	breq	.+22     	; 0xb8e <vfprintf+0x372>
 b78:	a1 fe       	sbrs	r10, 1
 b7a:	02 c0       	rjmp	.+4      	; 0xb80 <vfprintf+0x364>
 b7c:	8b e2       	ldi	r24, 0x2B	; 43
 b7e:	01 c0       	rjmp	.+2      	; 0xb82 <vfprintf+0x366>
 b80:	80 e2       	ldi	r24, 0x20	; 32
 b82:	a7 fc       	sbrc	r10, 7
 b84:	8d e2       	ldi	r24, 0x2D	; 45
 b86:	b6 01       	movw	r22, r12
 b88:	90 e0       	ldi	r25, 0x00	; 0
 b8a:	0e 94 05 06 	call	0xc0a	; 0xc0a <fputc>
 b8e:	89 14       	cp	r8, r9
 b90:	38 f4       	brcc	.+14     	; 0xba0 <vfprintf+0x384>
 b92:	b6 01       	movw	r22, r12
 b94:	80 e3       	ldi	r24, 0x30	; 48
 b96:	90 e0       	ldi	r25, 0x00	; 0
 b98:	0e 94 05 06 	call	0xc0a	; 0xc0a <fputc>
 b9c:	9a 94       	dec	r9
 b9e:	f7 cf       	rjmp	.-18     	; 0xb8e <vfprintf+0x372>
 ba0:	8a 94       	dec	r8
 ba2:	f3 01       	movw	r30, r6
 ba4:	e8 0d       	add	r30, r8
 ba6:	f1 1d       	adc	r31, r1
 ba8:	80 81       	ld	r24, Z
 baa:	b6 01       	movw	r22, r12
 bac:	90 e0       	ldi	r25, 0x00	; 0
 bae:	0e 94 05 06 	call	0xc0a	; 0xc0a <fputc>
 bb2:	81 10       	cpse	r8, r1
 bb4:	f5 cf       	rjmp	.-22     	; 0xba0 <vfprintf+0x384>
 bb6:	22 20       	and	r2, r2
 bb8:	09 f4       	brne	.+2      	; 0xbbc <vfprintf+0x3a0>
 bba:	42 ce       	rjmp	.-892    	; 0x840 <vfprintf+0x24>
 bbc:	b6 01       	movw	r22, r12
 bbe:	80 e2       	ldi	r24, 0x20	; 32
 bc0:	90 e0       	ldi	r25, 0x00	; 0
 bc2:	0e 94 05 06 	call	0xc0a	; 0xc0a <fputc>
 bc6:	2a 94       	dec	r2
 bc8:	f6 cf       	rjmp	.-20     	; 0xbb6 <vfprintf+0x39a>
 bca:	f6 01       	movw	r30, r12
 bcc:	86 81       	ldd	r24, Z+6	; 0x06
 bce:	97 81       	ldd	r25, Z+7	; 0x07
 bd0:	02 c0       	rjmp	.+4      	; 0xbd6 <vfprintf+0x3ba>
 bd2:	8f ef       	ldi	r24, 0xFF	; 255
 bd4:	9f ef       	ldi	r25, 0xFF	; 255
 bd6:	2b 96       	adiw	r28, 0x0b	; 11
 bd8:	e2 e1       	ldi	r30, 0x12	; 18
 bda:	0c 94 b8 06 	jmp	0xd70	; 0xd70 <__epilogue_restores__>

00000bde <strnlen_P>:
 bde:	fc 01       	movw	r30, r24
 be0:	05 90       	lpm	r0, Z+
 be2:	61 50       	subi	r22, 0x01	; 1
 be4:	70 40       	sbci	r23, 0x00	; 0
 be6:	01 10       	cpse	r0, r1
 be8:	d8 f7       	brcc	.-10     	; 0xbe0 <strnlen_P+0x2>
 bea:	80 95       	com	r24
 bec:	90 95       	com	r25
 bee:	8e 0f       	add	r24, r30
 bf0:	9f 1f       	adc	r25, r31
 bf2:	08 95       	ret

00000bf4 <strnlen>:
 bf4:	fc 01       	movw	r30, r24
 bf6:	61 50       	subi	r22, 0x01	; 1
 bf8:	70 40       	sbci	r23, 0x00	; 0
 bfa:	01 90       	ld	r0, Z+
 bfc:	01 10       	cpse	r0, r1
 bfe:	d8 f7       	brcc	.-10     	; 0xbf6 <strnlen+0x2>
 c00:	80 95       	com	r24
 c02:	90 95       	com	r25
 c04:	8e 0f       	add	r24, r30
 c06:	9f 1f       	adc	r25, r31
 c08:	08 95       	ret

00000c0a <fputc>:
 c0a:	0f 93       	push	r16
 c0c:	1f 93       	push	r17
 c0e:	cf 93       	push	r28
 c10:	df 93       	push	r29
 c12:	fb 01       	movw	r30, r22
 c14:	23 81       	ldd	r18, Z+3	; 0x03
 c16:	21 fd       	sbrc	r18, 1
 c18:	03 c0       	rjmp	.+6      	; 0xc20 <fputc+0x16>
 c1a:	8f ef       	ldi	r24, 0xFF	; 255
 c1c:	9f ef       	ldi	r25, 0xFF	; 255
 c1e:	2c c0       	rjmp	.+88     	; 0xc78 <fputc+0x6e>
 c20:	22 ff       	sbrs	r18, 2
 c22:	16 c0       	rjmp	.+44     	; 0xc50 <fputc+0x46>
 c24:	46 81       	ldd	r20, Z+6	; 0x06
 c26:	57 81       	ldd	r21, Z+7	; 0x07
 c28:	24 81       	ldd	r18, Z+4	; 0x04
 c2a:	35 81       	ldd	r19, Z+5	; 0x05
 c2c:	42 17       	cp	r20, r18
 c2e:	53 07       	cpc	r21, r19
 c30:	44 f4       	brge	.+16     	; 0xc42 <fputc+0x38>
 c32:	a0 81       	ld	r26, Z
 c34:	b1 81       	ldd	r27, Z+1	; 0x01
 c36:	9d 01       	movw	r18, r26
 c38:	2f 5f       	subi	r18, 0xFF	; 255
 c3a:	3f 4f       	sbci	r19, 0xFF	; 255
 c3c:	20 83       	st	Z, r18
 c3e:	31 83       	std	Z+1, r19	; 0x01
 c40:	8c 93       	st	X, r24
 c42:	26 81       	ldd	r18, Z+6	; 0x06
 c44:	37 81       	ldd	r19, Z+7	; 0x07
 c46:	2f 5f       	subi	r18, 0xFF	; 255
 c48:	3f 4f       	sbci	r19, 0xFF	; 255
 c4a:	26 83       	std	Z+6, r18	; 0x06
 c4c:	37 83       	std	Z+7, r19	; 0x07
 c4e:	14 c0       	rjmp	.+40     	; 0xc78 <fputc+0x6e>
 c50:	8b 01       	movw	r16, r22
 c52:	ec 01       	movw	r28, r24
 c54:	fb 01       	movw	r30, r22
 c56:	00 84       	ldd	r0, Z+8	; 0x08
 c58:	f1 85       	ldd	r31, Z+9	; 0x09
 c5a:	e0 2d       	mov	r30, r0
 c5c:	09 95       	icall
 c5e:	89 2b       	or	r24, r25
 c60:	e1 f6       	brne	.-72     	; 0xc1a <fputc+0x10>
 c62:	d8 01       	movw	r26, r16
 c64:	16 96       	adiw	r26, 0x06	; 6
 c66:	8d 91       	ld	r24, X+
 c68:	9c 91       	ld	r25, X
 c6a:	17 97       	sbiw	r26, 0x07	; 7
 c6c:	01 96       	adiw	r24, 0x01	; 1
 c6e:	16 96       	adiw	r26, 0x06	; 6
 c70:	8d 93       	st	X+, r24
 c72:	9c 93       	st	X, r25
 c74:	17 97       	sbiw	r26, 0x07	; 7
 c76:	ce 01       	movw	r24, r28
 c78:	df 91       	pop	r29
 c7a:	cf 91       	pop	r28
 c7c:	1f 91       	pop	r17
 c7e:	0f 91       	pop	r16
 c80:	08 95       	ret

00000c82 <__ultoa_invert>:
 c82:	fa 01       	movw	r30, r20
 c84:	aa 27       	eor	r26, r26
 c86:	28 30       	cpi	r18, 0x08	; 8
 c88:	51 f1       	breq	.+84     	; 0xcde <__ultoa_invert+0x5c>
 c8a:	20 31       	cpi	r18, 0x10	; 16
 c8c:	81 f1       	breq	.+96     	; 0xcee <__ultoa_invert+0x6c>
 c8e:	e8 94       	clt
 c90:	6f 93       	push	r22
 c92:	6e 7f       	andi	r22, 0xFE	; 254
 c94:	6e 5f       	subi	r22, 0xFE	; 254
 c96:	7f 4f       	sbci	r23, 0xFF	; 255
 c98:	8f 4f       	sbci	r24, 0xFF	; 255
 c9a:	9f 4f       	sbci	r25, 0xFF	; 255
 c9c:	af 4f       	sbci	r26, 0xFF	; 255
 c9e:	b1 e0       	ldi	r27, 0x01	; 1
 ca0:	3e d0       	rcall	.+124    	; 0xd1e <__ultoa_invert+0x9c>
 ca2:	b4 e0       	ldi	r27, 0x04	; 4
 ca4:	3c d0       	rcall	.+120    	; 0xd1e <__ultoa_invert+0x9c>
 ca6:	67 0f       	add	r22, r23
 ca8:	78 1f       	adc	r23, r24
 caa:	89 1f       	adc	r24, r25
 cac:	9a 1f       	adc	r25, r26
 cae:	a1 1d       	adc	r26, r1
 cb0:	68 0f       	add	r22, r24
 cb2:	79 1f       	adc	r23, r25
 cb4:	8a 1f       	adc	r24, r26
 cb6:	91 1d       	adc	r25, r1
 cb8:	a1 1d       	adc	r26, r1
 cba:	6a 0f       	add	r22, r26
 cbc:	71 1d       	adc	r23, r1
 cbe:	81 1d       	adc	r24, r1
 cc0:	91 1d       	adc	r25, r1
 cc2:	a1 1d       	adc	r26, r1
 cc4:	20 d0       	rcall	.+64     	; 0xd06 <__ultoa_invert+0x84>
 cc6:	09 f4       	brne	.+2      	; 0xcca <__ultoa_invert+0x48>
 cc8:	68 94       	set
 cca:	3f 91       	pop	r19
 ccc:	2a e0       	ldi	r18, 0x0A	; 10
 cce:	26 9f       	mul	r18, r22
 cd0:	11 24       	eor	r1, r1
 cd2:	30 19       	sub	r19, r0
 cd4:	30 5d       	subi	r19, 0xD0	; 208
 cd6:	31 93       	st	Z+, r19
 cd8:	de f6       	brtc	.-74     	; 0xc90 <__ultoa_invert+0xe>
 cda:	cf 01       	movw	r24, r30
 cdc:	08 95       	ret
 cde:	46 2f       	mov	r20, r22
 ce0:	47 70       	andi	r20, 0x07	; 7
 ce2:	40 5d       	subi	r20, 0xD0	; 208
 ce4:	41 93       	st	Z+, r20
 ce6:	b3 e0       	ldi	r27, 0x03	; 3
 ce8:	0f d0       	rcall	.+30     	; 0xd08 <__ultoa_invert+0x86>
 cea:	c9 f7       	brne	.-14     	; 0xcde <__ultoa_invert+0x5c>
 cec:	f6 cf       	rjmp	.-20     	; 0xcda <__ultoa_invert+0x58>
 cee:	46 2f       	mov	r20, r22
 cf0:	4f 70       	andi	r20, 0x0F	; 15
 cf2:	40 5d       	subi	r20, 0xD0	; 208
 cf4:	4a 33       	cpi	r20, 0x3A	; 58
 cf6:	18 f0       	brcs	.+6      	; 0xcfe <__ultoa_invert+0x7c>
 cf8:	49 5d       	subi	r20, 0xD9	; 217
 cfa:	31 fd       	sbrc	r19, 1
 cfc:	40 52       	subi	r20, 0x20	; 32
 cfe:	41 93       	st	Z+, r20
 d00:	02 d0       	rcall	.+4      	; 0xd06 <__ultoa_invert+0x84>
 d02:	a9 f7       	brne	.-22     	; 0xcee <__ultoa_invert+0x6c>
 d04:	ea cf       	rjmp	.-44     	; 0xcda <__ultoa_invert+0x58>
 d06:	b4 e0       	ldi	r27, 0x04	; 4
 d08:	a6 95       	lsr	r26
 d0a:	97 95       	ror	r25
 d0c:	87 95       	ror	r24
 d0e:	77 95       	ror	r23
 d10:	67 95       	ror	r22
 d12:	ba 95       	dec	r27
 d14:	c9 f7       	brne	.-14     	; 0xd08 <__ultoa_invert+0x86>
 d16:	00 97       	sbiw	r24, 0x00	; 0
 d18:	61 05       	cpc	r22, r1
 d1a:	71 05       	cpc	r23, r1
 d1c:	08 95       	ret
 d1e:	9b 01       	movw	r18, r22
 d20:	ac 01       	movw	r20, r24
 d22:	0a 2e       	mov	r0, r26
 d24:	06 94       	lsr	r0
 d26:	57 95       	ror	r21
 d28:	47 95       	ror	r20
 d2a:	37 95       	ror	r19
 d2c:	27 95       	ror	r18
 d2e:	ba 95       	dec	r27
 d30:	c9 f7       	brne	.-14     	; 0xd24 <__ultoa_invert+0xa2>
 d32:	62 0f       	add	r22, r18
 d34:	73 1f       	adc	r23, r19
 d36:	84 1f       	adc	r24, r20
 d38:	95 1f       	adc	r25, r21
 d3a:	a0 1d       	adc	r26, r0
 d3c:	08 95       	ret

00000d3e <__prologue_saves__>:
 d3e:	2f 92       	push	r2
 d40:	3f 92       	push	r3
 d42:	4f 92       	push	r4
 d44:	5f 92       	push	r5
 d46:	6f 92       	push	r6
 d48:	7f 92       	push	r7
 d4a:	8f 92       	push	r8
 d4c:	9f 92       	push	r9
 d4e:	af 92       	push	r10
 d50:	bf 92       	push	r11
 d52:	cf 92       	push	r12
 d54:	df 92       	push	r13
 d56:	ef 92       	push	r14
 d58:	ff 92       	push	r15
 d5a:	0f 93       	push	r16
 d5c:	1f 93       	push	r17
 d5e:	cf 93       	push	r28
 d60:	df 93       	push	r29
 d62:	cd b7       	in	r28, 0x3d	; 61
 d64:	de b7       	in	r29, 0x3e	; 62
 d66:	ca 1b       	sub	r28, r26
 d68:	db 0b       	sbc	r29, r27
 d6a:	cd bf       	out	0x3d, r28	; 61
 d6c:	de bf       	out	0x3e, r29	; 62
 d6e:	09 94       	ijmp

00000d70 <__epilogue_restores__>:
 d70:	2a 88       	ldd	r2, Y+18	; 0x12
 d72:	39 88       	ldd	r3, Y+17	; 0x11
 d74:	48 88       	ldd	r4, Y+16	; 0x10
 d76:	5f 84       	ldd	r5, Y+15	; 0x0f
 d78:	6e 84       	ldd	r6, Y+14	; 0x0e
 d7a:	7d 84       	ldd	r7, Y+13	; 0x0d
 d7c:	8c 84       	ldd	r8, Y+12	; 0x0c
 d7e:	9b 84       	ldd	r9, Y+11	; 0x0b
 d80:	aa 84       	ldd	r10, Y+10	; 0x0a
 d82:	b9 84       	ldd	r11, Y+9	; 0x09
 d84:	c8 84       	ldd	r12, Y+8	; 0x08
 d86:	df 80       	ldd	r13, Y+7	; 0x07
 d88:	ee 80       	ldd	r14, Y+6	; 0x06
 d8a:	fd 80       	ldd	r15, Y+5	; 0x05
 d8c:	0c 81       	ldd	r16, Y+4	; 0x04
 d8e:	1b 81       	ldd	r17, Y+3	; 0x03
 d90:	aa 81       	ldd	r26, Y+2	; 0x02
 d92:	b9 81       	ldd	r27, Y+1	; 0x01
 d94:	ce 0f       	add	r28, r30
 d96:	d1 1d       	adc	r29, r1
 d98:	cd bf       	out	0x3d, r28	; 61
 d9a:	de bf       	out	0x3e, r29	; 62
 d9c:	ed 01       	movw	r28, r26
 d9e:	08 95       	ret

00000da0 <_exit>:
 da0:	f8 94       	cli

00000da2 <__stop_program>:
 da2:	ff cf       	rjmp	.-2      	; 0xda2 <__stop_program>
